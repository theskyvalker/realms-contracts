{
    "abi": [],
    "entry_points_by_type": {
        "CONSTRUCTOR": [],
        "EXTERNAL": [],
        "L1_HANDLER": []
    },
    "program": {
        "attributes": [],
        "builtins": [
            "range_check"
        ],
        "compiler_version": "0.10.0",
        "data": [
            "0x40780017fff7fff",
            "0x1",
            "0x208b7fff7fff7ffe",
            "0x20780017fff7ffd",
            "0x3",
            "0x208b7fff7fff7ffe",
            "0x480a7ffb7fff8000",
            "0x480a7ffc7fff8000",
            "0x480080007fff8000",
            "0x400080007ffd7fff",
            "0x482480017ffd8001",
            "0x1",
            "0x482480017ffd8001",
            "0x1",
            "0xa0680017fff7ffe",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffffb",
            "0x402a7ffc7ffd7fff",
            "0x208b7fff7fff7ffe",
            "0x208b7fff7fff7ffe",
            "0x20780017fff7ffd",
            "0x4",
            "0x400780017fff7ffd",
            "0x1",
            "0x208b7fff7fff7ffe",
            "0x400380007ffc7ffd",
            "0x482680017ffc8000",
            "0x1",
            "0x208b7fff7fff7ffe",
            "0x480a7ffb7fff8000",
            "0x48297ffc80007ffd",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffffb",
            "0x208b7fff7fff7ffe",
            "0x480a7ffb7fff8000",
            "0x480a7ffc7fff8000",
            "0x482680017ffd8000",
            "0x800000000000011000000000000000000000000000000000000000000000000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffff8",
            "0x208b7fff7fff7ffe",
            "0x480a7ffb7fff8000",
            "0x480a7ffc7fff8000",
            "0x1104800180018000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffffef",
            "0x480a7ffc7fff8000",
            "0x480a7ffd7fff8000",
            "0x1104800180018000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffffef",
            "0x208b7fff7fff7ffe",
            "0x480280007ffb8000",
            "0x480280017ffb8000",
            "0x484480017fff8000",
            "0x2aaaaaaaaaaaab05555555555555556",
            "0x48307fff7ffd8000",
            "0x480280027ffb8000",
            "0x480280037ffb8000",
            "0x484480017fff8000",
            "0x4000000000000088000000000000001",
            "0x48307fff7ffd8000",
            "0xa0680017fff8000",
            "0xe",
            "0x480680017fff8000",
            "0x800000000000011000000000000000000000000000000000000000000000000",
            "0x48287ffc80007fff",
            "0x40307ffc7ff87fff",
            "0x48297ffd80007ffc",
            "0x482680017ffd8000",
            "0x1",
            "0x48507fff7ffe8000",
            "0x40507ff97ff57fff",
            "0x482680017ffb8000",
            "0x4",
            "0x208b7fff7fff7ffe",
            "0xa0680017fff8000",
            "0xc",
            "0x480680017fff8000",
            "0x800000000000011000000000000000000000000000000000000000000000000",
            "0x48287ffd80007fff",
            "0x48327fff7ffc8000",
            "0x40307ffa7ff67fff",
            "0x48527ffe7ffc8000",
            "0x40507ff97ff57fff",
            "0x482680017ffb8000",
            "0x4",
            "0x208b7fff7fff7ffe",
            "0x40317ffd7ff97ffd",
            "0x48297ffc80007ffd",
            "0x48527fff7ffc8000",
            "0x40507ffb7ff77fff",
            "0x40780017fff7fff",
            "0x2",
            "0x482680017ffb8000",
            "0x4",
            "0x208b7fff7fff7ffe",
            "0x482680017ffb8000",
            "0x2",
            "0x480280007ffb8000",
            "0x482680017ffd8000",
            "0x800000000000011000000000000000000000000000000000000000000000000",
            "0x1104800180018000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffffba",
            "0x480280017ffb8000",
            "0x48487ffd7fff8000",
            "0x480280007ffb8000",
            "0x40317fff7ffe7ffc",
            "0x48127ffc7fff8000",
            "0x480280017ffb8000",
            "0x480280007ffb8000",
            "0x208b7fff7fff7ffe",
            "0x20780017fff7ffa",
            "0x6",
            "0x400780017fff7ff9",
            "0x0",
            "0x480a7ff87fff8000",
            "0x208b7fff7fff7ffe",
            "0x480280007ffd8000",
            "0x480a7ff87fff8000",
            "0x48127ffe7fff8000",
            "0x482680017ffc8000",
            "0x800000000000011000000000000000000000000000000000000000000000000",
            "0x1104800180018000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffffb1",
            "0x48317fec80007ff9",
            "0x48127ffe7fff8000",
            "0x48487ffb80007ffe",
            "0x482680017ffa8000",
            "0x800000000000011000000000000000000000000000000000000000000000000",
            "0x480a7ffb7fff8000",
            "0x480a7ffc7fff8000",
            "0x482680017ffd8000",
            "0x1",
            "0x1104800180018000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffffeb",
            "0x208b7fff7fff7ffe",
            "0xa0680017fff8000",
            "0xa",
            "0x400380007ffc7ffd",
            "0x40780017fff7fff",
            "0x14",
            "0x482680017ffc8000",
            "0x1",
            "0x480680017fff8000",
            "0x1",
            "0x208b7fff7fff7ffe",
            "0xa0680017fff8000",
            "0xe",
            "0x484680017ffd8000",
            "0x800000000000011000000000000000000000000000000000000000000000000",
            "0x482480017fff8000",
            "0x800000000000011000000000000000000000000000000000000000000000000",
            "0x400280007ffc7fff",
            "0x40780017fff7fff",
            "0x11",
            "0x482680017ffc8000",
            "0x1",
            "0x480680017fff8000",
            "0x0",
            "0x208b7fff7fff7ffe",
            "0x480a7ffc7fff8000",
            "0x480680017fff8000",
            "0x100000000000000000000000000000000",
            "0x480a7ffd7fff8000",
            "0x1104800180018000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffff90",
            "0x480680017fff8000",
            "0x0",
            "0x208b7fff7fff7ffe",
            "0x480a7ffb7fff8000",
            "0x48297ffc80007ffd",
            "0x1104800180018000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffffde",
            "0x208b7fff7fff7ffe",
            "0x20780017fff7ffd",
            "0x3",
            "0x208b7fff7fff7ffe",
            "0x480a7ffb7fff8000",
            "0x400180007fff7ffc",
            "0x482480017fff8001",
            "0x1",
            "0xa0680017fff7fff",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffffe",
            "0x402a7ffb7ffd7fff",
            "0x208b7fff7fff7ffe",
            "0x1104800180018000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffff5c",
            "0x482680017ffd8000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffff48",
            "0x48307fff7ffe8000",
            "0x208b7fff7fff7ffe"
        ],
        "debug_info": {
            "file_contents": {},
            "instruction_locations": {
                "0": {
                    "accessible_scopes": [
                        "starkware.cairo.common.alloc",
                        "starkware.cairo.common.alloc.alloc"
                    ],
                    "flow_tracking_data": null,
                    "hints": [
                        {
                            "location": {
                                "end_col": 38,
                                "end_line": 3,
                                "input_file": {
                                    "filename": "/usr/local/lib/python3.9/site-packages/starkware/cairo/common/alloc.cairo"
                                },
                                "start_col": 5,
                                "start_line": 3
                            },
                            "n_prefix_newlines": 0
                        }
                    ],
                    "inst": {
                        "end_col": 12,
                        "end_line": 4,
                        "input_file": {
                            "filename": "/usr/local/lib/python3.9/site-packages/starkware/cairo/common/alloc.cairo"
                        },
                        "start_col": 5,
                        "start_line": 4
                    }
                },
                "2": {
                    "accessible_scopes": [
                        "starkware.cairo.common.alloc",
                        "starkware.cairo.common.alloc.alloc"
                    ],
                    "flow_tracking_data": null,
                    "hints": [],
                    "inst": {
                        "end_col": 40,
                        "end_line": 5,
                        "input_file": {
                            "filename": "/usr/local/lib/python3.9/site-packages/starkware/cairo/common/alloc.cairo"
                        },
                        "start_col": 5,
                        "start_line": 5
                    }
                },
                "3": {
                    "accessible_scopes": [
                        "starkware.cairo.common.memcpy",
                        "starkware.cairo.common.memcpy.memcpy"
                    ],
                    "flow_tracking_data": null,
                    "hints": [],
                    "inst": {
                        "end_col": 7,
                        "end_line": 8,
                        "input_file": {
                            "filename": "/usr/local/lib/python3.9/site-packages/starkware/cairo/common/memcpy.cairo"
                        },
                        "start_col": 5,
                        "start_line": 8
                    }
                },
                "5": {
                    "accessible_scopes": [
                        "starkware.cairo.common.memcpy",
                        "starkware.cairo.common.memcpy.memcpy"
                    ],
                    "flow_tracking_data": null,
                    "hints": [],
                    "inst": {
                        "end_col": 19,
                        "end_line": 9,
                        "input_file": {
                            "filename": "/usr/local/lib/python3.9/site-packages/starkware/cairo/common/memcpy.cairo"
                        },
                        "start_col": 9,
                        "start_line": 9
                    }
                },
                "6": {
                    "accessible_scopes": [
                        "starkware.cairo.common.memcpy",
                        "starkware.cairo.common.memcpy.memcpy"
                    ],
                    "flow_tracking_data": null,
                    "hints": [
                        {
                            "location": {
                                "end_col": 41,
                                "end_line": 12,
                                "input_file": {
                                    "filename": "/usr/local/lib/python3.9/site-packages/starkware/cairo/common/memcpy.cairo"
                                },
                                "start_col": 5,
                                "start_line": 12
                            },
                            "n_prefix_newlines": 0
                        }
                    ],
                    "inst": {
                        "end_col": 23,
                        "end_line": 2,
                        "input_file": {
                            "filename": "/usr/local/lib/python3.9/site-packages/starkware/cairo/common/memcpy.cairo"
                        },
                        "parent_location": [
                            {
                                "end_col": 38,
                                "end_line": 13,
                                "input_file": {
                                    "filename": "/usr/local/lib/python3.9/site-packages/starkware/cairo/common/memcpy.cairo"
                                },
                                "start_col": 35,
                                "start_line": 13
                            },
                            "While expanding the reference 'dst' in:"
                        ],
                        "start_col": 13,
                        "start_line": 2
                    }
                },
                "7": {
                    "accessible_scopes": [
                        "starkware.cairo.common.memcpy",
                        "starkware.cairo.common.memcpy.memcpy"
                    ],
                    "flow_tracking_data": null,
                    "hints": [],
                    "inst": {
                        "end_col": 35,
                        "end_line": 2,
                        "input_file": {
                            "filename": "/usr/local/lib/python3.9/site-packages/starkware/cairo/common/memcpy.cairo"
                        },
                        "parent_location": [
                            {
                                "end_col": 47,
                                "end_line": 13,
                                "input_file": {
                                    "filename": "/usr/local/lib/python3.9/site-packages/starkware/cairo/common/memcpy.cairo"
                                },
                                "start_col": 44,
                                "start_line": 13
                            },
                            "While expanding the reference 'src' in:"
                        ],
                        "start_col": 25,
                        "start_line": 2
                    }
                },
                "8": {
                    "accessible_scopes": [
                        "starkware.cairo.common.memcpy",
                        "starkware.cairo.common.memcpy.memcpy"
                    ],
                    "flow_tracking_data": null,
                    "hints": [],
                    "inst": {
                        "end_col": 37,
                        "end_line": 17,
                        "input_file": {
                            "filename": "/usr/local/lib/python3.9/site-packages/starkware/cairo/common/memcpy.cairo"
                        },
                        "start_col": 26,
                        "start_line": 17
                    }
                },
                "9": {
                    "accessible_scopes": [
                        "starkware.cairo.common.memcpy",
                        "starkware.cairo.common.memcpy.memcpy"
                    ],
                    "flow_tracking_data": null,
                    "hints": [],
                    "inst": {
                        "end_col": 38,
                        "end_line": 17,
                        "input_file": {
                            "filename": "/usr/local/lib/python3.9/site-packages/starkware/cairo/common/memcpy.cairo"
                        },
                        "start_col": 5,
                        "start_line": 17
                    }
                },
                "10": {
                    "accessible_scopes": [
                        "starkware.cairo.common.memcpy",
                        "starkware.cairo.common.memcpy.memcpy"
                    ],
                    "flow_tracking_data": null,
                    "hints": [],
                    "inst": {
                        "end_col": 41,
                        "end_line": 22,
                        "input_file": {
                            "filename": "/usr/local/lib/python3.9/site-packages/starkware/cairo/common/memcpy.cairo"
                        },
                        "start_col": 5,
                        "start_line": 22
                    }
                },
                "12": {
                    "accessible_scopes": [
                        "starkware.cairo.common.memcpy",
                        "starkware.cairo.common.memcpy.memcpy"
                    ],
                    "flow_tracking_data": null,
                    "hints": [],
                    "inst": {
                        "end_col": 41,
                        "end_line": 23,
                        "input_file": {
                            "filename": "/usr/local/lib/python3.9/site-packages/starkware/cairo/common/memcpy.cairo"
                        },
                        "start_col": 5,
                        "start_line": 23
                    }
                },
                "14": {
                    "accessible_scopes": [
                        "starkware.cairo.common.memcpy",
                        "starkware.cairo.common.memcpy.memcpy"
                    ],
                    "flow_tracking_data": null,
                    "hints": [
                        {
                            "location": {
                                "end_col": 7,
                                "end_line": 27,
                                "input_file": {
                                    "filename": "/usr/local/lib/python3.9/site-packages/starkware/cairo/common/memcpy.cairo"
                                },
                                "start_col": 5,
                                "start_line": 24
                            },
                            "n_prefix_newlines": 1
                        }
                    ],
                    "inst": {
                        "end_col": 44,
                        "end_line": 29,
                        "input_file": {
                            "filename": "/usr/local/lib/python3.9/site-packages/starkware/cairo/common/memcpy.cairo"
                        },
                        "start_col": 5,
                        "start_line": 29
                    }
                },
                "16": {
                    "accessible_scopes": [
                        "starkware.cairo.common.memcpy",
                        "starkware.cairo.common.memcpy.memcpy"
                    ],
                    "flow_tracking_data": null,
                    "hints": [],
                    "inst": {
                        "end_col": 55,
                        "end_line": 31,
                        "input_file": {
                            "filename": "/usr/local/lib/python3.9/site-packages/starkware/cairo/common/memcpy.cairo"
                        },
                        "start_col": 5,
                        "start_line": 31
                    }
                },
                "17": {
                    "accessible_scopes": [
                        "starkware.cairo.common.memcpy",
                        "starkware.cairo.common.memcpy.memcpy"
                    ],
                    "flow_tracking_data": null,
                    "hints": [
                        {
                            "location": {
                                "end_col": 26,
                                "end_line": 33,
                                "input_file": {
                                    "filename": "/usr/local/lib/python3.9/site-packages/starkware/cairo/common/memcpy.cairo"
                                },
                                "start_col": 5,
                                "start_line": 33
                            },
                            "n_prefix_newlines": 0
                        }
                    ],
                    "inst": {
                        "end_col": 15,
                        "end_line": 34,
                        "input_file": {
                            "filename": "/usr/local/lib/python3.9/site-packages/starkware/cairo/common/memcpy.cairo"
                        },
                        "start_col": 5,
                        "start_line": 34
                    }
                },
                "18": {
                    "accessible_scopes": [
                        "starkware.cairo.lang.compiler.lib.registers",
                        "starkware.cairo.lang.compiler.lib.registers.get_fp_and_pc"
                    ],
                    "flow_tracking_data": null,
                    "hints": [],
                    "inst": {
                        "end_col": 73,
                        "end_line": 7,
                        "input_file": {
                            "filename": "/usr/local/lib/python3.9/site-packages/starkware/cairo/lang/compiler/lib/registers.cairo"
                        },
                        "start_col": 5,
                        "start_line": 7
                    }
                },
                "19": {
                    "accessible_scopes": [
                        "starkware.cairo.common.math",
                        "starkware.cairo.common.math.assert_not_zero"
                    ],
                    "flow_tracking_data": null,
                    "hints": [
                        {
                            "location": {
                                "end_col": 7,
                                "end_line": 11,
                                "input_file": {
                                    "filename": "/usr/local/lib/python3.9/site-packages/starkware/cairo/common/math.cairo"
                                },
                                "start_col": 5,
                                "start_line": 7
                            },
                            "n_prefix_newlines": 1
                        }
                    ],
                    "inst": {
                        "end_col": 7,
                        "end_line": 12,
                        "input_file": {
                            "filename": "/usr/local/lib/python3.9/site-packages/starkware/cairo/common/math.cairo"
                        },
                        "start_col": 5,
                        "start_line": 12
                    }
                },
                "21": {
                    "accessible_scopes": [
                        "starkware.cairo.common.math",
                        "starkware.cairo.common.math.assert_not_zero"
                    ],
                    "flow_tracking_data": null,
                    "hints": [],
                    "inst": {
                        "end_col": 18,
                        "end_line": 14,
                        "input_file": {
                            "filename": "/usr/local/lib/python3.9/site-packages/starkware/cairo/common/math.cairo"
                        },
                        "start_col": 9,
                        "start_line": 14
                    }
                },
                "23": {
                    "accessible_scopes": [
                        "starkware.cairo.common.math",
                        "starkware.cairo.common.math.assert_not_zero"
                    ],
                    "flow_tracking_data": null,
                    "hints": [],
                    "inst": {
                        "end_col": 15,
                        "end_line": 17,
                        "input_file": {
                            "filename": "/usr/local/lib/python3.9/site-packages/starkware/cairo/common/math.cairo"
                        },
                        "start_col": 5,
                        "start_line": 17
                    }
                },
                "24": {
                    "accessible_scopes": [
                        "starkware.cairo.common.math",
                        "starkware.cairo.common.math.assert_nn"
                    ],
                    "flow_tracking_data": null,
                    "hints": [
                        {
                            "location": {
                                "end_col": 7,
                                "end_line": 46,
                                "input_file": {
                                    "filename": "/usr/local/lib/python3.9/site-packages/starkware/cairo/common/math.cairo"
                                },
                                "start_col": 5,
                                "start_line": 42
                            },
                            "n_prefix_newlines": 1
                        }
                    ],
                    "inst": {
                        "end_col": 26,
                        "end_line": 47,
                        "input_file": {
                            "filename": "/usr/local/lib/python3.9/site-packages/starkware/cairo/common/math.cairo"
                        },
                        "start_col": 5,
                        "start_line": 47
                    }
                },
                "25": {
                    "accessible_scopes": [
                        "starkware.cairo.common.math",
                        "starkware.cairo.common.math.assert_nn"
                    ],
                    "flow_tracking_data": null,
                    "hints": [],
                    "inst": {
                        "end_col": 46,
                        "end_line": 48,
                        "input_file": {
                            "filename": "/usr/local/lib/python3.9/site-packages/starkware/cairo/common/math.cairo"
                        },
                        "parent_location": [
                            {
                                "end_col": 31,
                                "end_line": 41,
                                "input_file": {
                                    "filename": "/usr/local/lib/python3.9/site-packages/starkware/cairo/common/math.cairo"
                                },
                                "parent_location": [
                                    {
                                        "end_col": 15,
                                        "end_line": 49,
                                        "input_file": {
                                            "filename": "/usr/local/lib/python3.9/site-packages/starkware/cairo/common/math.cairo"
                                        },
                                        "start_col": 5,
                                        "start_line": 49
                                    },
                                    "While trying to retrieve the implicit argument 'range_check_ptr' in:"
                                ],
                                "start_col": 16,
                                "start_line": 41
                            },
                            "While expanding the reference 'range_check_ptr' in:"
                        ],
                        "start_col": 27,
                        "start_line": 48
                    }
                },
                "27": {
                    "accessible_scopes": [
                        "starkware.cairo.common.math",
                        "starkware.cairo.common.math.assert_nn"
                    ],
                    "flow_tracking_data": null,
                    "hints": [],
                    "inst": {
                        "end_col": 15,
                        "end_line": 49,
                        "input_file": {
                            "filename": "/usr/local/lib/python3.9/site-packages/starkware/cairo/common/math.cairo"
                        },
                        "start_col": 5,
                        "start_line": 49
                    }
                },
                "28": {
                    "accessible_scopes": [
                        "starkware.cairo.common.math",
                        "starkware.cairo.common.math.assert_le"
                    ],
                    "flow_tracking_data": null,
                    "hints": [],
                    "inst": {
                        "end_col": 31,
                        "end_line": 53,
                        "input_file": {
                            "filename": "/usr/local/lib/python3.9/site-packages/starkware/cairo/common/math.cairo"
                        },
                        "parent_location": [
                            {
                                "end_col": 31,
                                "end_line": 41,
                                "input_file": {
                                    "filename": "/usr/local/lib/python3.9/site-packages/starkware/cairo/common/math.cairo"
                                },
                                "parent_location": [
                                    {
                                        "end_col": 21,
                                        "end_line": 54,
                                        "input_file": {
                                            "filename": "/usr/local/lib/python3.9/site-packages/starkware/cairo/common/math.cairo"
                                        },
                                        "start_col": 5,
                                        "start_line": 54
                                    },
                                    "While trying to retrieve the implicit argument 'range_check_ptr' in:"
                                ],
                                "start_col": 16,
                                "start_line": 41
                            },
                            "While expanding the reference 'range_check_ptr' in:"
                        ],
                        "start_col": 16,
                        "start_line": 53
                    }
                },
                "29": {
                    "accessible_scopes": [
                        "starkware.cairo.common.math",
                        "starkware.cairo.common.math.assert_le"
                    ],
                    "flow_tracking_data": null,
                    "hints": [],
                    "inst": {
                        "end_col": 20,
                        "end_line": 54,
                        "input_file": {
                            "filename": "/usr/local/lib/python3.9/site-packages/starkware/cairo/common/math.cairo"
                        },
                        "start_col": 15,
                        "start_line": 54
                    }
                },
                "30": {
                    "accessible_scopes": [
                        "starkware.cairo.common.math",
                        "starkware.cairo.common.math.assert_le"
                    ],
                    "flow_tracking_data": null,
                    "hints": [],
                    "inst": {
                        "end_col": 21,
                        "end_line": 54,
                        "input_file": {
                            "filename": "/usr/local/lib/python3.9/site-packages/starkware/cairo/common/math.cairo"
                        },
                        "start_col": 5,
                        "start_line": 54
                    }
                },
                "32": {
                    "accessible_scopes": [
                        "starkware.cairo.common.math",
                        "starkware.cairo.common.math.assert_le"
                    ],
                    "flow_tracking_data": null,
                    "hints": [],
                    "inst": {
                        "end_col": 15,
                        "end_line": 55,
                        "input_file": {
                            "filename": "/usr/local/lib/python3.9/site-packages/starkware/cairo/common/math.cairo"
                        },
                        "start_col": 5,
                        "start_line": 55
                    }
                },
                "33": {
                    "accessible_scopes": [
                        "starkware.cairo.common.math",
                        "starkware.cairo.common.math.assert_lt"
                    ],
                    "flow_tracking_data": null,
                    "hints": [],
                    "inst": {
                        "end_col": 31,
                        "end_line": 59,
                        "input_file": {
                            "filename": "/usr/local/lib/python3.9/site-packages/starkware/cairo/common/math.cairo"
                        },
                        "parent_location": [
                            {
                                "end_col": 31,
                                "end_line": 53,
                                "input_file": {
                                    "filename": "/usr/local/lib/python3.9/site-packages/starkware/cairo/common/math.cairo"
                                },
                                "parent_location": [
                                    {
                                        "end_col": 24,
                                        "end_line": 60,
                                        "input_file": {
                                            "filename": "/usr/local/lib/python3.9/site-packages/starkware/cairo/common/math.cairo"
                                        },
                                        "start_col": 5,
                                        "start_line": 60
                                    },
                                    "While trying to retrieve the implicit argument 'range_check_ptr' in:"
                                ],
                                "start_col": 16,
                                "start_line": 53
                            },
                            "While expanding the reference 'range_check_ptr' in:"
                        ],
                        "start_col": 16,
                        "start_line": 59
                    }
                },
                "34": {
                    "accessible_scopes": [
                        "starkware.cairo.common.math",
                        "starkware.cairo.common.math.assert_lt"
                    ],
                    "flow_tracking_data": null,
                    "hints": [],
                    "inst": {
                        "end_col": 34,
                        "end_line": 59,
                        "input_file": {
                            "filename": "/usr/local/lib/python3.9/site-packages/starkware/cairo/common/math.cairo"
                        },
                        "parent_location": [
                            {
                                "end_col": 16,
                                "end_line": 60,
                                "input_file": {
                                    "filename": "/usr/local/lib/python3.9/site-packages/starkware/cairo/common/math.cairo"
                                },
                                "start_col": 15,
                                "start_line": 60
                            },
                            "While expanding the reference 'a' in:"
                        ],
                        "start_col": 33,
                        "start_line": 59
                    }
                },
                "35": {
                    "accessible_scopes": [
                        "starkware.cairo.common.math",
                        "starkware.cairo.common.math.assert_lt"
                    ],
                    "flow_tracking_data": null,
                    "hints": [],
                    "inst": {
                        "end_col": 23,
                        "end_line": 60,
                        "input_file": {
                            "filename": "/usr/local/lib/python3.9/site-packages/starkware/cairo/common/math.cairo"
                        },
                        "start_col": 18,
                        "start_line": 60
                    }
                },
                "37": {
                    "accessible_scopes": [
                        "starkware.cairo.common.math",
                        "starkware.cairo.common.math.assert_lt"
                    ],
                    "flow_tracking_data": null,
                    "hints": [],
                    "inst": {
                        "end_col": 24,
                        "end_line": 60,
                        "input_file": {
                            "filename": "/usr/local/lib/python3.9/site-packages/starkware/cairo/common/math.cairo"
                        },
                        "start_col": 5,
                        "start_line": 60
                    }
                },
                "39": {
                    "accessible_scopes": [
                        "starkware.cairo.common.math",
                        "starkware.cairo.common.math.assert_lt"
                    ],
                    "flow_tracking_data": null,
                    "hints": [],
                    "inst": {
                        "end_col": 15,
                        "end_line": 61,
                        "input_file": {
                            "filename": "/usr/local/lib/python3.9/site-packages/starkware/cairo/common/math.cairo"
                        },
                        "start_col": 5,
                        "start_line": 61
                    }
                },
                "40": {
                    "accessible_scopes": [
                        "starkware.cairo.common.math",
                        "starkware.cairo.common.math.assert_nn_le"
                    ],
                    "flow_tracking_data": null,
                    "hints": [],
                    "inst": {
                        "end_col": 34,
                        "end_line": 70,
                        "input_file": {
                            "filename": "/usr/local/lib/python3.9/site-packages/starkware/cairo/common/math.cairo"
                        },
                        "parent_location": [
                            {
                                "end_col": 31,
                                "end_line": 41,
                                "input_file": {
                                    "filename": "/usr/local/lib/python3.9/site-packages/starkware/cairo/common/math.cairo"
                                },
                                "parent_location": [
                                    {
                                        "end_col": 17,
                                        "end_line": 71,
                                        "input_file": {
                                            "filename": "/usr/local/lib/python3.9/site-packages/starkware/cairo/common/math.cairo"
                                        },
                                        "start_col": 5,
                                        "start_line": 71
                                    },
                                    "While trying to retrieve the implicit argument 'range_check_ptr' in:"
                                ],
                                "start_col": 16,
                                "start_line": 41
                            },
                            "While expanding the reference 'range_check_ptr' in:"
                        ],
                        "start_col": 19,
                        "start_line": 70
                    }
                },
                "41": {
                    "accessible_scopes": [
                        "starkware.cairo.common.math",
                        "starkware.cairo.common.math.assert_nn_le"
                    ],
                    "flow_tracking_data": null,
                    "hints": [],
                    "inst": {
                        "end_col": 37,
                        "end_line": 70,
                        "input_file": {
                            "filename": "/usr/local/lib/python3.9/site-packages/starkware/cairo/common/math.cairo"
                        },
                        "parent_location": [
                            {
                                "end_col": 16,
                                "end_line": 71,
                                "input_file": {
                                    "filename": "/usr/local/lib/python3.9/site-packages/starkware/cairo/common/math.cairo"
                                },
                                "start_col": 15,
                                "start_line": 71
                            },
                            "While expanding the reference 'a' in:"
                        ],
                        "start_col": 36,
                        "start_line": 70
                    }
                },
                "42": {
                    "accessible_scopes": [
                        "starkware.cairo.common.math",
                        "starkware.cairo.common.math.assert_nn_le"
                    ],
                    "flow_tracking_data": null,
                    "hints": [],
                    "inst": {
                        "end_col": 17,
                        "end_line": 71,
                        "input_file": {
                            "filename": "/usr/local/lib/python3.9/site-packages/starkware/cairo/common/math.cairo"
                        },
                        "start_col": 5,
                        "start_line": 71
                    }
                },
                "44": {
                    "accessible_scopes": [
                        "starkware.cairo.common.math",
                        "starkware.cairo.common.math.assert_nn_le"
                    ],
                    "flow_tracking_data": null,
                    "hints": [],
                    "inst": {
                        "end_col": 37,
                        "end_line": 70,
                        "input_file": {
                            "filename": "/usr/local/lib/python3.9/site-packages/starkware/cairo/common/math.cairo"
                        },
                        "parent_location": [
                            {
                                "end_col": 16,
                                "end_line": 72,
                                "input_file": {
                                    "filename": "/usr/local/lib/python3.9/site-packages/starkware/cairo/common/math.cairo"
                                },
                                "start_col": 15,
                                "start_line": 72
                            },
                            "While expanding the reference 'a' in:"
                        ],
                        "start_col": 36,
                        "start_line": 70
                    }
                },
                "45": {
                    "accessible_scopes": [
                        "starkware.cairo.common.math",
                        "starkware.cairo.common.math.assert_nn_le"
                    ],
                    "flow_tracking_data": null,
                    "hints": [],
                    "inst": {
                        "end_col": 40,
                        "end_line": 70,
                        "input_file": {
                            "filename": "/usr/local/lib/python3.9/site-packages/starkware/cairo/common/math.cairo"
                        },
                        "parent_location": [
                            {
                                "end_col": 19,
                                "end_line": 72,
                                "input_file": {
                                    "filename": "/usr/local/lib/python3.9/site-packages/starkware/cairo/common/math.cairo"
                                },
                                "start_col": 18,
                                "start_line": 72
                            },
                            "While expanding the reference 'b' in:"
                        ],
                        "start_col": 39,
                        "start_line": 70
                    }
                },
                "46": {
                    "accessible_scopes": [
                        "starkware.cairo.common.math",
                        "starkware.cairo.common.math.assert_nn_le"
                    ],
                    "flow_tracking_data": null,
                    "hints": [],
                    "inst": {
                        "end_col": 20,
                        "end_line": 72,
                        "input_file": {
                            "filename": "/usr/local/lib/python3.9/site-packages/starkware/cairo/common/math.cairo"
                        },
                        "start_col": 5,
                        "start_line": 72
                    }
                },
                "48": {
                    "accessible_scopes": [
                        "starkware.cairo.common.math",
                        "starkware.cairo.common.math.assert_nn_le"
                    ],
                    "flow_tracking_data": null,
                    "hints": [],
                    "inst": {
                        "end_col": 15,
                        "end_line": 73,
                        "input_file": {
                            "filename": "/usr/local/lib/python3.9/site-packages/starkware/cairo/common/math.cairo"
                        },
                        "start_col": 5,
                        "start_line": 73
                    }
                },
                "49": {
                    "accessible_scopes": [
                        "starkware.cairo.common.math",
                        "starkware.cairo.common.math.assert_le_felt"
                    ],
                    "flow_tracking_data": null,
                    "hints": [
                        {
                            "location": {
                                "end_col": 7,
                                "end_line": 184,
                                "input_file": {
                                    "filename": "/usr/local/lib/python3.9/site-packages/starkware/cairo/common/math.cairo"
                                },
                                "start_col": 5,
                                "start_line": 164
                            },
                            "n_prefix_newlines": 1
                        }
                    ],
                    "inst": {
                        "end_col": 42,
                        "end_line": 186,
                        "input_file": {
                            "filename": "/usr/local/lib/python3.9/site-packages/starkware/cairo/common/math.cairo"
                        },
                        "start_col": 25,
                        "start_line": 186
                    }
                },
                "50": {
                    "accessible_scopes": [
                        "starkware.cairo.common.math",
                        "starkware.cairo.common.math.assert_le_felt"
                    ],
                    "flow_tracking_data": null,
                    "hints": [],
                    "inst": {
                        "end_col": 66,
                        "end_line": 186,
                        "input_file": {
                            "filename": "/usr/local/lib/python3.9/site-packages/starkware/cairo/common/math.cairo"
                        },
                        "start_col": 45,
                        "start_line": 186
                    }
                },
                "51": {
                    "accessible_scopes": [
                        "starkware.cairo.common.math",
                        "starkware.cairo.common.math.assert_le_felt"
                    ],
                    "flow_tracking_data": null,
                    "hints": [],
                    "inst": {
                        "end_col": 86,
                        "end_line": 186,
                        "input_file": {
                            "filename": "/usr/local/lib/python3.9/site-packages/starkware/cairo/common/math.cairo"
                        },
                        "start_col": 45,
                        "start_line": 186
                    }
                },
                "53": {
                    "accessible_scopes": [
                        "starkware.cairo.common.math",
                        "starkware.cairo.common.math.assert_le_felt"
                    ],
                    "flow_tracking_data": null,
                    "hints": [],
                    "inst": {
                        "end_col": 86,
                        "end_line": 186,
                        "input_file": {
                            "filename": "/usr/local/lib/python3.9/site-packages/starkware/cairo/common/math.cairo"
                        },
                        "start_col": 25,
                        "start_line": 186
                    }
                },
                "54": {
                    "accessible_scopes": [
                        "starkware.cairo.common.math",
                        "starkware.cairo.common.math.assert_le_felt"
                    ],
                    "flow_tracking_data": null,
                    "hints": [],
                    "inst": {
                        "end_col": 45,
                        "end_line": 187,
                        "input_file": {
                            "filename": "/usr/local/lib/python3.9/site-packages/starkware/cairo/common/math.cairo"
                        },
                        "start_col": 24,
                        "start_line": 187
                    }
                },
                "55": {
                    "accessible_scopes": [
                        "starkware.cairo.common.math",
                        "starkware.cairo.common.math.assert_le_felt"
                    ],
                    "flow_tracking_data": null,
                    "hints": [],
                    "inst": {
                        "end_col": 69,
                        "end_line": 187,
                        "input_file": {
                            "filename": "/usr/local/lib/python3.9/site-packages/starkware/cairo/common/math.cairo"
                        },
                        "start_col": 48,
                        "start_line": 187
                    }
                },
                "56": {
                    "accessible_scopes": [
                        "starkware.cairo.common.math",
                        "starkware.cairo.common.math.assert_le_felt"
                    ],
                    "flow_tracking_data": null,
                    "hints": [],
                    "inst": {
                        "end_col": 89,
                        "end_line": 187,
                        "input_file": {
                            "filename": "/usr/local/lib/python3.9/site-packages/starkware/cairo/common/math.cairo"
                        },
                        "start_col": 48,
                        "start_line": 187
                    }
                },
                "58": {
                    "accessible_scopes": [
                        "starkware.cairo.common.math",
                        "starkware.cairo.common.math.assert_le_felt"
                    ],
                    "flow_tracking_data": null,
                    "hints": [],
                    "inst": {
                        "end_col": 89,
                        "end_line": 187,
                        "input_file": {
                            "filename": "/usr/local/lib/python3.9/site-packages/starkware/cairo/common/math.cairo"
                        },
                        "start_col": 24,
                        "start_line": 187
                    }
                },
                "59": {
                    "accessible_scopes": [
                        "starkware.cairo.common.math",
                        "starkware.cairo.common.math.assert_le_felt"
                    ],
                    "flow_tracking_data": null,
                    "hints": [
                        {
                            "location": {
                                "end_col": 49,
                                "end_line": 196,
                                "input_file": {
                                    "filename": "/usr/local/lib/python3.9/site-packages/starkware/cairo/common/math.cairo"
                                },
                                "start_col": 5,
                                "start_line": 196
                            },
                            "n_prefix_newlines": 0
                        }
                    ],
                    "inst": {
                        "end_col": 42,
                        "end_line": 197,
                        "input_file": {
                            "filename": "/usr/local/lib/python3.9/site-packages/starkware/cairo/common/math.cairo"
                        },
                        "start_col": 5,
                        "start_line": 197
                    }
                },
                "61": {
                    "accessible_scopes": [
                        "starkware.cairo.common.math",
                        "starkware.cairo.common.math.assert_le_felt"
                    ],
                    "flow_tracking_data": null,
                    "hints": [],
                    "inst": {
                        "end_col": 25,
                        "end_line": 198,
                        "input_file": {
                            "filename": "/usr/local/lib/python3.9/site-packages/starkware/cairo/common/math.cairo"
                        },
                        "start_col": 23,
                        "start_line": 198
                    }
                },
                "63": {
                    "accessible_scopes": [
                        "starkware.cairo.common.math",
                        "starkware.cairo.common.math.assert_le_felt"
                    ],
                    "flow_tracking_data": null,
                    "hints": [],
                    "inst": {
                        "end_col": 30,
                        "end_line": 198,
                        "input_file": {
                            "filename": "/usr/local/lib/python3.9/site-packages/starkware/cairo/common/math.cairo"
                        },
                        "start_col": 22,
                        "start_line": 198
                    }
                },
                "64": {
                    "accessible_scopes": [
                        "starkware.cairo.common.math",
                        "starkware.cairo.common.math.assert_le_felt"
                    ],
                    "flow_tracking_data": null,
                    "hints": [],
                    "inst": {
                        "end_col": 31,
                        "end_line": 198,
                        "input_file": {
                            "filename": "/usr/local/lib/python3.9/site-packages/starkware/cairo/common/math.cairo"
                        },
                        "start_col": 5,
                        "start_line": 198
                    }
                },
                "65": {
                    "accessible_scopes": [
                        "starkware.cairo.common.math",
                        "starkware.cairo.common.math.assert_le_felt"
                    ],
                    "flow_tracking_data": null,
                    "hints": [],
                    "inst": {
                        "end_col": 29,
                        "end_line": 199,
                        "input_file": {
                            "filename": "/usr/local/lib/python3.9/site-packages/starkware/cairo/common/math.cairo"
                        },
                        "start_col": 24,
                        "start_line": 199
                    }
                },
                "66": {
                    "accessible_scopes": [
                        "starkware.cairo.common.math",
                        "starkware.cairo.common.math.assert_le_felt"
                    ],
                    "flow_tracking_data": null,
                    "hints": [],
                    "inst": {
                        "end_col": 39,
                        "end_line": 199,
                        "input_file": {
                            "filename": "/usr/local/lib/python3.9/site-packages/starkware/cairo/common/math.cairo"
                        },
                        "start_col": 34,
                        "start_line": 199
                    }
                },
                "68": {
                    "accessible_scopes": [
                        "starkware.cairo.common.math",
                        "starkware.cairo.common.math.assert_le_felt"
                    ],
                    "flow_tracking_data": null,
                    "hints": [],
                    "inst": {
                        "end_col": 40,
                        "end_line": 199,
                        "input_file": {
                            "filename": "/usr/local/lib/python3.9/site-packages/starkware/cairo/common/math.cairo"
                        },
                        "start_col": 23,
                        "start_line": 199
                    }
                },
                "69": {
                    "accessible_scopes": [
                        "starkware.cairo.common.math",
                        "starkware.cairo.common.math.assert_le_felt"
                    ],
                    "flow_tracking_data": null,
                    "hints": [],
                    "inst": {
                        "end_col": 41,
                        "end_line": 199,
                        "input_file": {
                            "filename": "/usr/local/lib/python3.9/site-packages/starkware/cairo/common/math.cairo"
                        },
                        "start_col": 5,
                        "start_line": 199
                    }
                },
                "70": {
                    "accessible_scopes": [
                        "starkware.cairo.common.math",
                        "starkware.cairo.common.math.assert_le_felt"
                    ],
                    "flow_tracking_data": null,
                    "hints": [],
                    "inst": {
                        "end_col": 46,
                        "end_line": 188,
                        "input_file": {
                            "filename": "/usr/local/lib/python3.9/site-packages/starkware/cairo/common/math.cairo"
                        },
                        "parent_location": [
                            {
                                "end_col": 36,
                                "end_line": 154,
                                "input_file": {
                                    "filename": "/usr/local/lib/python3.9/site-packages/starkware/cairo/common/math.cairo"
                                },
                                "parent_location": [
                                    {
                                        "end_col": 15,
                                        "end_line": 200,
                                        "input_file": {
                                            "filename": "/usr/local/lib/python3.9/site-packages/starkware/cairo/common/math.cairo"
                                        },
                                        "start_col": 5,
                                        "start_line": 200
                                    },
                                    "While trying to retrieve the implicit argument 'range_check_ptr' in:"
                                ],
                                "start_col": 21,
                                "start_line": 154
                            },
                            "While expanding the reference 'range_check_ptr' in:"
                        ],
                        "start_col": 27,
                        "start_line": 188
                    }
                },
                "72": {
                    "accessible_scopes": [
                        "starkware.cairo.common.math",
                        "starkware.cairo.common.math.assert_le_felt"
                    ],
                    "flow_tracking_data": null,
                    "hints": [],
                    "inst": {
                        "end_col": 15,
                        "end_line": 200,
                        "input_file": {
                            "filename": "/usr/local/lib/python3.9/site-packages/starkware/cairo/common/math.cairo"
                        },
                        "start_col": 5,
                        "start_line": 200
                    }
                },
                "73": {
                    "accessible_scopes": [
                        "starkware.cairo.common.math",
                        "starkware.cairo.common.math.assert_le_felt"
                    ],
                    "flow_tracking_data": null,
                    "hints": [
                        {
                            "location": {
                                "end_col": 49,
                                "end_line": 204,
                                "input_file": {
                                    "filename": "/usr/local/lib/python3.9/site-packages/starkware/cairo/common/math.cairo"
                                },
                                "start_col": 5,
                                "start_line": 204
                            },
                            "n_prefix_newlines": 0
                        }
                    ],
                    "inst": {
                        "end_col": 50,
                        "end_line": 205,
                        "input_file": {
                            "filename": "/usr/local/lib/python3.9/site-packages/starkware/cairo/common/math.cairo"
                        },
                        "start_col": 5,
                        "start_line": 205
                    }
                },
                "75": {
                    "accessible_scopes": [
                        "starkware.cairo.common.math",
                        "starkware.cairo.common.math.assert_le_felt"
                    ],
                    "flow_tracking_data": null,
                    "hints": [],
                    "inst": {
                        "end_col": 23,
                        "end_line": 206,
                        "input_file": {
                            "filename": "/usr/local/lib/python3.9/site-packages/starkware/cairo/common/math.cairo"
                        },
                        "start_col": 21,
                        "start_line": 206
                    }
                },
                "77": {
                    "accessible_scopes": [
                        "starkware.cairo.common.math",
                        "starkware.cairo.common.math.assert_le_felt"
                    ],
                    "flow_tracking_data": null,
                    "hints": [],
                    "inst": {
                        "end_col": 28,
                        "end_line": 206,
                        "input_file": {
                            "filename": "/usr/local/lib/python3.9/site-packages/starkware/cairo/common/math.cairo"
                        },
                        "start_col": 20,
                        "start_line": 206
                    }
                },
                "78": {
                    "accessible_scopes": [
                        "starkware.cairo.common.math",
                        "starkware.cairo.common.math.assert_le_felt"
                    ],
                    "flow_tracking_data": null,
                    "hints": [],
                    "inst": {
                        "end_col": 30,
                        "end_line": 207,
                        "input_file": {
                            "filename": "/usr/local/lib/python3.9/site-packages/starkware/cairo/common/math.cairo"
                        },
                        "start_col": 22,
                        "start_line": 207
                    }
                },
                "79": {
                    "accessible_scopes": [
                        "starkware.cairo.common.math",
                        "starkware.cairo.common.math.assert_le_felt"
                    ],
                    "flow_tracking_data": null,
                    "hints": [],
                    "inst": {
                        "end_col": 31,
                        "end_line": 207,
                        "input_file": {
                            "filename": "/usr/local/lib/python3.9/site-packages/starkware/cairo/common/math.cairo"
                        },
                        "start_col": 5,
                        "start_line": 207
                    }
                },
                "80": {
                    "accessible_scopes": [
                        "starkware.cairo.common.math",
                        "starkware.cairo.common.math.assert_le_felt"
                    ],
                    "flow_tracking_data": null,
                    "hints": [],
                    "inst": {
                        "end_col": 31,
                        "end_line": 208,
                        "input_file": {
                            "filename": "/usr/local/lib/python3.9/site-packages/starkware/cairo/common/math.cairo"
                        },
                        "start_col": 23,
                        "start_line": 208
                    }
                },
                "81": {
                    "accessible_scopes": [
                        "starkware.cairo.common.math",
                        "starkware.cairo.common.math.assert_le_felt"
                    ],
                    "flow_tracking_data": null,
                    "hints": [],
                    "inst": {
                        "end_col": 32,
                        "end_line": 208,
                        "input_file": {
                            "filename": "/usr/local/lib/python3.9/site-packages/starkware/cairo/common/math.cairo"
                        },
                        "start_col": 5,
                        "start_line": 208
                    }
                },
                "82": {
                    "accessible_scopes": [
                        "starkware.cairo.common.math",
                        "starkware.cairo.common.math.assert_le_felt"
                    ],
                    "flow_tracking_data": null,
                    "hints": [],
                    "inst": {
                        "end_col": 46,
                        "end_line": 188,
                        "input_file": {
                            "filename": "/usr/local/lib/python3.9/site-packages/starkware/cairo/common/math.cairo"
                        },
                        "parent_location": [
                            {
                                "end_col": 36,
                                "end_line": 154,
                                "input_file": {
                                    "filename": "/usr/local/lib/python3.9/site-packages/starkware/cairo/common/math.cairo"
                                },
                                "parent_location": [
                                    {
                                        "end_col": 15,
                                        "end_line": 209,
                                        "input_file": {
                                            "filename": "/usr/local/lib/python3.9/site-packages/starkware/cairo/common/math.cairo"
                                        },
                                        "start_col": 5,
                                        "start_line": 209
                                    },
                                    "While trying to retrieve the implicit argument 'range_check_ptr' in:"
                                ],
                                "start_col": 21,
                                "start_line": 154
                            },
                            "While expanding the reference 'range_check_ptr' in:"
                        ],
                        "start_col": 27,
                        "start_line": 188
                    }
                },
                "84": {
                    "accessible_scopes": [
                        "starkware.cairo.common.math",
                        "starkware.cairo.common.math.assert_le_felt"
                    ],
                    "flow_tracking_data": null,
                    "hints": [],
                    "inst": {
                        "end_col": 15,
                        "end_line": 209,
                        "input_file": {
                            "filename": "/usr/local/lib/python3.9/site-packages/starkware/cairo/common/math.cairo"
                        },
                        "start_col": 5,
                        "start_line": 209
                    }
                },
                "85": {
                    "accessible_scopes": [
                        "starkware.cairo.common.math",
                        "starkware.cairo.common.math.assert_le_felt"
                    ],
                    "flow_tracking_data": null,
                    "hints": [
                        {
                            "location": {
                                "end_col": 31,
                                "end_line": 213,
                                "input_file": {
                                    "filename": "/usr/local/lib/python3.9/site-packages/starkware/cairo/common/math.cairo"
                                },
                                "start_col": 5,
                                "start_line": 213
                            },
                            "n_prefix_newlines": 0
                        }
                    ],
                    "inst": {
                        "end_col": 24,
                        "end_line": 214,
                        "input_file": {
                            "filename": "/usr/local/lib/python3.9/site-packages/starkware/cairo/common/math.cairo"
                        },
                        "start_col": 5,
                        "start_line": 214
                    }
                },
                "86": {
                    "accessible_scopes": [
                        "starkware.cairo.common.math",
                        "starkware.cairo.common.math.assert_le_felt"
                    ],
                    "flow_tracking_data": null,
                    "hints": [],
                    "inst": {
                        "end_col": 33,
                        "end_line": 215,
                        "input_file": {
                            "filename": "/usr/local/lib/python3.9/site-packages/starkware/cairo/common/math.cairo"
                        },
                        "start_col": 28,
                        "start_line": 215
                    }
                },
                "87": {
                    "accessible_scopes": [
                        "starkware.cairo.common.math",
                        "starkware.cairo.common.math.assert_le_felt"
                    ],
                    "flow_tracking_data": null,
                    "hints": [],
                    "inst": {
                        "end_col": 34,
                        "end_line": 215,
                        "input_file": {
                            "filename": "/usr/local/lib/python3.9/site-packages/starkware/cairo/common/math.cairo"
                        },
                        "start_col": 23,
                        "start_line": 215
                    }
                },
                "88": {
                    "accessible_scopes": [
                        "starkware.cairo.common.math",
                        "starkware.cairo.common.math.assert_le_felt"
                    ],
                    "flow_tracking_data": null,
                    "hints": [],
                    "inst": {
                        "end_col": 35,
                        "end_line": 215,
                        "input_file": {
                            "filename": "/usr/local/lib/python3.9/site-packages/starkware/cairo/common/math.cairo"
                        },
                        "start_col": 5,
                        "start_line": 215
                    }
                },
                "89": {
                    "accessible_scopes": [
                        "starkware.cairo.common.math",
                        "starkware.cairo.common.math.assert_le_felt"
                    ],
                    "flow_tracking_data": null,
                    "hints": [],
                    "inst": {
                        "end_col": 12,
                        "end_line": 216,
                        "input_file": {
                            "filename": "/usr/local/lib/python3.9/site-packages/starkware/cairo/common/math.cairo"
                        },
                        "start_col": 5,
                        "start_line": 216
                    }
                },
                "91": {
                    "accessible_scopes": [
                        "starkware.cairo.common.math",
                        "starkware.cairo.common.math.assert_le_felt"
                    ],
                    "flow_tracking_data": null,
                    "hints": [],
                    "inst": {
                        "end_col": 46,
                        "end_line": 188,
                        "input_file": {
                            "filename": "/usr/local/lib/python3.9/site-packages/starkware/cairo/common/math.cairo"
                        },
                        "parent_location": [
                            {
                                "end_col": 36,
                                "end_line": 154,
                                "input_file": {
                                    "filename": "/usr/local/lib/python3.9/site-packages/starkware/cairo/common/math.cairo"
                                },
                                "parent_location": [
                                    {
                                        "end_col": 15,
                                        "end_line": 217,
                                        "input_file": {
                                            "filename": "/usr/local/lib/python3.9/site-packages/starkware/cairo/common/math.cairo"
                                        },
                                        "start_col": 5,
                                        "start_line": 217
                                    },
                                    "While trying to retrieve the implicit argument 'range_check_ptr' in:"
                                ],
                                "start_col": 21,
                                "start_line": 154
                            },
                            "While expanding the reference 'range_check_ptr' in:"
                        ],
                        "start_col": 27,
                        "start_line": 188
                    }
                },
                "93": {
                    "accessible_scopes": [
                        "starkware.cairo.common.math",
                        "starkware.cairo.common.math.assert_le_felt"
                    ],
                    "flow_tracking_data": null,
                    "hints": [],
                    "inst": {
                        "end_col": 15,
                        "end_line": 217,
                        "input_file": {
                            "filename": "/usr/local/lib/python3.9/site-packages/starkware/cairo/common/math.cairo"
                        },
                        "start_col": 5,
                        "start_line": 217
                    }
                },
                "94": {
                    "accessible_scopes": [
                        "starkware.cairo.common.math",
                        "starkware.cairo.common.math.unsigned_div_rem"
                    ],
                    "flow_tracking_data": null,
                    "hints": [
                        {
                            "location": {
                                "end_col": 7,
                                "end_line": 307,
                                "input_file": {
                                    "filename": "/usr/local/lib/python3.9/site-packages/starkware/cairo/common/math.cairo"
                                },
                                "start_col": 5,
                                "start_line": 301
                            },
                            "n_prefix_newlines": 1
                        }
                    ],
                    "inst": {
                        "end_col": 46,
                        "end_line": 300,
                        "input_file": {
                            "filename": "/usr/local/lib/python3.9/site-packages/starkware/cairo/common/math.cairo"
                        },
                        "parent_location": [
                            {
                                "end_col": 31,
                                "end_line": 53,
                                "input_file": {
                                    "filename": "/usr/local/lib/python3.9/site-packages/starkware/cairo/common/math.cairo"
                                },
                                "parent_location": [
                                    {
                                        "end_col": 26,
                                        "end_line": 308,
                                        "input_file": {
                                            "filename": "/usr/local/lib/python3.9/site-packages/starkware/cairo/common/math.cairo"
                                        },
                                        "start_col": 5,
                                        "start_line": 308
                                    },
                                    "While trying to retrieve the implicit argument 'range_check_ptr' in:"
                                ],
                                "start_col": 16,
                                "start_line": 53
                            },
                            "While expanding the reference 'range_check_ptr' in:"
                        ],
                        "start_col": 27,
                        "start_line": 300
                    }
                },
                "96": {
                    "accessible_scopes": [
                        "starkware.cairo.common.math",
                        "starkware.cairo.common.math.unsigned_div_rem"
                    ],
                    "flow_tracking_data": null,
                    "hints": [],
                    "inst": {
                        "end_col": 30,
                        "end_line": 298,
                        "input_file": {
                            "filename": "/usr/local/lib/python3.9/site-packages/starkware/cairo/common/math.cairo"
                        },
                        "parent_location": [
                            {
                                "end_col": 16,
                                "end_line": 308,
                                "input_file": {
                                    "filename": "/usr/local/lib/python3.9/site-packages/starkware/cairo/common/math.cairo"
                                },
                                "start_col": 15,
                                "start_line": 308
                            },
                            "While expanding the reference 'r' in:"
                        ],
                        "start_col": 13,
                        "start_line": 298
                    }
                },
                "97": {
                    "accessible_scopes": [
                        "starkware.cairo.common.math",
                        "starkware.cairo.common.math.unsigned_div_rem"
                    ],
                    "flow_tracking_data": null,
                    "hints": [],
                    "inst": {
                        "end_col": 25,
                        "end_line": 308,
                        "input_file": {
                            "filename": "/usr/local/lib/python3.9/site-packages/starkware/cairo/common/math.cairo"
                        },
                        "start_col": 18,
                        "start_line": 308
                    }
                },
                "99": {
                    "accessible_scopes": [
                        "starkware.cairo.common.math",
                        "starkware.cairo.common.math.unsigned_div_rem"
                    ],
                    "flow_tracking_data": null,
                    "hints": [],
                    "inst": {
                        "end_col": 26,
                        "end_line": 308,
                        "input_file": {
                            "filename": "/usr/local/lib/python3.9/site-packages/starkware/cairo/common/math.cairo"
                        },
                        "start_col": 5,
                        "start_line": 308
                    }
                },
                "101": {
                    "accessible_scopes": [
                        "starkware.cairo.common.math",
                        "starkware.cairo.common.math.unsigned_div_rem"
                    ],
                    "flow_tracking_data": null,
                    "hints": [],
                    "inst": {
                        "end_col": 34,
                        "end_line": 299,
                        "input_file": {
                            "filename": "/usr/local/lib/python3.9/site-packages/starkware/cairo/common/math.cairo"
                        },
                        "parent_location": [
                            {
                                "end_col": 21,
                                "end_line": 310,
                                "input_file": {
                                    "filename": "/usr/local/lib/python3.9/site-packages/starkware/cairo/common/math.cairo"
                                },
                                "start_col": 20,
                                "start_line": 310
                            },
                            "While expanding the reference 'q' in:"
                        ],
                        "start_col": 13,
                        "start_line": 299
                    }
                },
                "102": {
                    "accessible_scopes": [
                        "starkware.cairo.common.math",
                        "starkware.cairo.common.math.unsigned_div_rem"
                    ],
                    "flow_tracking_data": null,
                    "hints": [],
                    "inst": {
                        "end_col": 27,
                        "end_line": 310,
                        "input_file": {
                            "filename": "/usr/local/lib/python3.9/site-packages/starkware/cairo/common/math.cairo"
                        },
                        "start_col": 20,
                        "start_line": 310
                    }
                },
                "103": {
                    "accessible_scopes": [
                        "starkware.cairo.common.math",
                        "starkware.cairo.common.math.unsigned_div_rem"
                    ],
                    "flow_tracking_data": null,
                    "hints": [],
                    "inst": {
                        "end_col": 30,
                        "end_line": 298,
                        "input_file": {
                            "filename": "/usr/local/lib/python3.9/site-packages/starkware/cairo/common/math.cairo"
                        },
                        "parent_location": [
                            {
                                "end_col": 31,
                                "end_line": 310,
                                "input_file": {
                                    "filename": "/usr/local/lib/python3.9/site-packages/starkware/cairo/common/math.cairo"
                                },
                                "start_col": 30,
                                "start_line": 310
                            },
                            "While expanding the reference 'r' in:"
                        ],
                        "start_col": 13,
                        "start_line": 298
                    }
                },
                "104": {
                    "accessible_scopes": [
                        "starkware.cairo.common.math",
                        "starkware.cairo.common.math.unsigned_div_rem"
                    ],
                    "flow_tracking_data": null,
                    "hints": [],
                    "inst": {
                        "end_col": 32,
                        "end_line": 310,
                        "input_file": {
                            "filename": "/usr/local/lib/python3.9/site-packages/starkware/cairo/common/math.cairo"
                        },
                        "start_col": 5,
                        "start_line": 310
                    }
                },
                "105": {
                    "accessible_scopes": [
                        "starkware.cairo.common.math",
                        "starkware.cairo.common.math.unsigned_div_rem"
                    ],
                    "flow_tracking_data": null,
                    "hints": [],
                    "inst": {
                        "end_col": 31,
                        "end_line": 53,
                        "input_file": {
                            "filename": "/usr/local/lib/python3.9/site-packages/starkware/cairo/common/math.cairo"
                        },
                        "parent_location": [
                            {
                                "end_col": 26,
                                "end_line": 308,
                                "input_file": {
                                    "filename": "/usr/local/lib/python3.9/site-packages/starkware/cairo/common/math.cairo"
                                },
                                "parent_location": [
                                    {
                                        "end_col": 38,
                                        "end_line": 297,
                                        "input_file": {
                                            "filename": "/usr/local/lib/python3.9/site-packages/starkware/cairo/common/math.cairo"
                                        },
                                        "parent_location": [
                                            {
                                                "end_col": 19,
                                                "end_line": 311,
                                                "input_file": {
                                                    "filename": "/usr/local/lib/python3.9/site-packages/starkware/cairo/common/math.cairo"
                                                },
                                                "start_col": 5,
                                                "start_line": 311
                                            },
                                            "While trying to retrieve the implicit argument 'range_check_ptr' in:"
                                        ],
                                        "start_col": 23,
                                        "start_line": 297
                                    },
                                    "While expanding the reference 'range_check_ptr' in:"
                                ],
                                "start_col": 5,
                                "start_line": 308
                            },
                            "While trying to update the implicit return value 'range_check_ptr' in:"
                        ],
                        "start_col": 16,
                        "start_line": 53
                    }
                },
                "106": {
                    "accessible_scopes": [
                        "starkware.cairo.common.math",
                        "starkware.cairo.common.math.unsigned_div_rem"
                    ],
                    "flow_tracking_data": null,
                    "hints": [],
                    "inst": {
                        "end_col": 34,
                        "end_line": 299,
                        "input_file": {
                            "filename": "/usr/local/lib/python3.9/site-packages/starkware/cairo/common/math.cairo"
                        },
                        "parent_location": [
                            {
                                "end_col": 14,
                                "end_line": 311,
                                "input_file": {
                                    "filename": "/usr/local/lib/python3.9/site-packages/starkware/cairo/common/math.cairo"
                                },
                                "start_col": 13,
                                "start_line": 311
                            },
                            "While expanding the reference 'q' in:"
                        ],
                        "start_col": 13,
                        "start_line": 299
                    }
                },
                "107": {
                    "accessible_scopes": [
                        "starkware.cairo.common.math",
                        "starkware.cairo.common.math.unsigned_div_rem"
                    ],
                    "flow_tracking_data": null,
                    "hints": [],
                    "inst": {
                        "end_col": 30,
                        "end_line": 298,
                        "input_file": {
                            "filename": "/usr/local/lib/python3.9/site-packages/starkware/cairo/common/math.cairo"
                        },
                        "parent_location": [
                            {
                                "end_col": 17,
                                "end_line": 311,
                                "input_file": {
                                    "filename": "/usr/local/lib/python3.9/site-packages/starkware/cairo/common/math.cairo"
                                },
                                "start_col": 16,
                                "start_line": 311
                            },
                            "While expanding the reference 'r' in:"
                        ],
                        "start_col": 13,
                        "start_line": 298
                    }
                },
                "108": {
                    "accessible_scopes": [
                        "starkware.cairo.common.math",
                        "starkware.cairo.common.math.unsigned_div_rem"
                    ],
                    "flow_tracking_data": null,
                    "hints": [],
                    "inst": {
                        "end_col": 19,
                        "end_line": 311,
                        "input_file": {
                            "filename": "/usr/local/lib/python3.9/site-packages/starkware/cairo/common/math.cairo"
                        },
                        "start_col": 5,
                        "start_line": 311
                    }
                },
                "109": {
                    "accessible_scopes": [
                        "starkware.cairo.common.math",
                        "starkware.cairo.common.math.split_int"
                    ],
                    "flow_tracking_data": null,
                    "hints": [],
                    "inst": {
                        "end_col": 7,
                        "end_line": 365,
                        "input_file": {
                            "filename": "/usr/local/lib/python3.9/site-packages/starkware/cairo/common/math.cairo"
                        },
                        "start_col": 5,
                        "start_line": 365
                    }
                },
                "111": {
                    "accessible_scopes": [
                        "starkware.cairo.common.math",
                        "starkware.cairo.common.math.split_int"
                    ],
                    "flow_tracking_data": null,
                    "hints": [
                        {
                            "location": {
                                "end_col": 75,
                                "end_line": 366,
                                "input_file": {
                                    "filename": "/usr/local/lib/python3.9/site-packages/starkware/cairo/common/math.cairo"
                                },
                                "start_col": 9,
                                "start_line": 366
                            },
                            "n_prefix_newlines": 0
                        }
                    ],
                    "inst": {
                        "end_col": 26,
                        "end_line": 367,
                        "input_file": {
                            "filename": "/usr/local/lib/python3.9/site-packages/starkware/cairo/common/math.cairo"
                        },
                        "start_col": 9,
                        "start_line": 367
                    }
                },
                "113": {
                    "accessible_scopes": [
                        "starkware.cairo.common.math",
                        "starkware.cairo.common.math.split_int"
                    ],
                    "flow_tracking_data": null,
                    "hints": [],
                    "inst": {
                        "end_col": 31,
                        "end_line": 364,
                        "input_file": {
                            "filename": "/usr/local/lib/python3.9/site-packages/starkware/cairo/common/math.cairo"
                        },
                        "parent_location": [
                            {
                                "end_col": 31,
                                "end_line": 364,
                                "input_file": {
                                    "filename": "/usr/local/lib/python3.9/site-packages/starkware/cairo/common/math.cairo"
                                },
                                "parent_location": [
                                    {
                                        "end_col": 19,
                                        "end_line": 368,
                                        "input_file": {
                                            "filename": "/usr/local/lib/python3.9/site-packages/starkware/cairo/common/math.cairo"
                                        },
                                        "start_col": 9,
                                        "start_line": 368
                                    },
                                    "While trying to retrieve the implicit argument 'range_check_ptr' in:"
                                ],
                                "start_col": 16,
                                "start_line": 364
                            },
                            "While expanding the reference 'range_check_ptr' in:"
                        ],
                        "start_col": 16,
                        "start_line": 364
                    }
                },
                "114": {
                    "accessible_scopes": [
                        "starkware.cairo.common.math",
                        "starkware.cairo.common.math.split_int"
                    ],
                    "flow_tracking_data": null,
                    "hints": [],
                    "inst": {
                        "end_col": 19,
                        "end_line": 368,
                        "input_file": {
                            "filename": "/usr/local/lib/python3.9/site-packages/starkware/cairo/common/math.cairo"
                        },
                        "start_col": 9,
                        "start_line": 368
                    }
                },
                "115": {
                    "accessible_scopes": [
                        "starkware.cairo.common.math",
                        "starkware.cairo.common.math.split_int"
                    ],
                    "flow_tracking_data": null,
                    "hints": [
                        {
                            "location": {
                                "end_col": 7,
                                "end_line": 374,
                                "input_file": {
                                    "filename": "/usr/local/lib/python3.9/site-packages/starkware/cairo/common/math.cairo"
                                },
                                "start_col": 5,
                                "start_line": 371
                            },
                            "n_prefix_newlines": 1
                        }
                    ],
                    "inst": {
                        "end_col": 32,
                        "end_line": 375,
                        "input_file": {
                            "filename": "/usr/local/lib/python3.9/site-packages/starkware/cairo/common/math.cairo"
                        },
                        "start_col": 24,
                        "start_line": 375
                    }
                },
                "116": {
                    "accessible_scopes": [
                        "starkware.cairo.common.math",
                        "starkware.cairo.common.math.split_int"
                    ],
                    "flow_tracking_data": null,
                    "hints": [],
                    "inst": {
                        "end_col": 31,
                        "end_line": 364,
                        "input_file": {
                            "filename": "/usr/local/lib/python3.9/site-packages/starkware/cairo/common/math.cairo"
                        },
                        "parent_location": [
                            {
                                "end_col": 34,
                                "end_line": 70,
                                "input_file": {
                                    "filename": "/usr/local/lib/python3.9/site-packages/starkware/cairo/common/math.cairo"
                                },
                                "parent_location": [
                                    {
                                        "end_col": 38,
                                        "end_line": 376,
                                        "input_file": {
                                            "filename": "/usr/local/lib/python3.9/site-packages/starkware/cairo/common/math.cairo"
                                        },
                                        "start_col": 5,
                                        "start_line": 376
                                    },
                                    "While trying to retrieve the implicit argument 'range_check_ptr' in:"
                                ],
                                "start_col": 19,
                                "start_line": 70
                            },
                            "While expanding the reference 'range_check_ptr' in:"
                        ],
                        "start_col": 16,
                        "start_line": 364
                    }
                },
                "117": {
                    "accessible_scopes": [
                        "starkware.cairo.common.math",
                        "starkware.cairo.common.math.split_int"
                    ],
                    "flow_tracking_data": null,
                    "hints": [],
                    "inst": {
                        "end_col": 21,
                        "end_line": 375,
                        "input_file": {
                            "filename": "/usr/local/lib/python3.9/site-packages/starkware/cairo/common/math.cairo"
                        },
                        "parent_location": [
                            {
                                "end_col": 26,
                                "end_line": 376,
                                "input_file": {
                                    "filename": "/usr/local/lib/python3.9/site-packages/starkware/cairo/common/math.cairo"
                                },
                                "start_col": 18,
                                "start_line": 376
                            },
                            "While expanding the reference 'low_part' in:"
                        ],
                        "start_col": 13,
                        "start_line": 375
                    }
                },
                "118": {
                    "accessible_scopes": [
                        "starkware.cairo.common.math",
                        "starkware.cairo.common.math.split_int"
                    ],
                    "flow_tracking_data": null,
                    "hints": [],
                    "inst": {
                        "end_col": 37,
                        "end_line": 376,
                        "input_file": {
                            "filename": "/usr/local/lib/python3.9/site-packages/starkware/cairo/common/math.cairo"
                        },
                        "start_col": 28,
                        "start_line": 376
                    }
                },
                "120": {
                    "accessible_scopes": [
                        "starkware.cairo.common.math",
                        "starkware.cairo.common.math.split_int"
                    ],
                    "flow_tracking_data": null,
                    "hints": [],
                    "inst": {
                        "end_col": 38,
                        "end_line": 376,
                        "input_file": {
                            "filename": "/usr/local/lib/python3.9/site-packages/starkware/cairo/common/math.cairo"
                        },
                        "start_col": 5,
                        "start_line": 376
                    }
                },
                "122": {
                    "accessible_scopes": [
                        "starkware.cairo.common.math",
                        "starkware.cairo.common.math.split_int"
                    ],
                    "flow_tracking_data": null,
                    "hints": [],
                    "inst": {
                        "end_col": 32,
                        "end_line": 379,
                        "input_file": {
                            "filename": "/usr/local/lib/python3.9/site-packages/starkware/cairo/common/math.cairo"
                        },
                        "start_col": 16,
                        "start_line": 379
                    }
                },
                "123": {
                    "accessible_scopes": [
                        "starkware.cairo.common.math",
                        "starkware.cairo.common.math.split_int"
                    ],
                    "flow_tracking_data": null,
                    "hints": [],
                    "inst": {
                        "end_col": 34,
                        "end_line": 70,
                        "input_file": {
                            "filename": "/usr/local/lib/python3.9/site-packages/starkware/cairo/common/math.cairo"
                        },
                        "parent_location": [
                            {
                                "end_col": 38,
                                "end_line": 376,
                                "input_file": {
                                    "filename": "/usr/local/lib/python3.9/site-packages/starkware/cairo/common/math.cairo"
                                },
                                "parent_location": [
                                    {
                                        "end_col": 31,
                                        "end_line": 364,
                                        "input_file": {
                                            "filename": "/usr/local/lib/python3.9/site-packages/starkware/cairo/common/math.cairo"
                                        },
                                        "parent_location": [
                                            {
                                                "end_col": 6,
                                                "end_line": 380,
                                                "input_file": {
                                                    "filename": "/usr/local/lib/python3.9/site-packages/starkware/cairo/common/math.cairo"
                                                },
                                                "start_col": 12,
                                                "start_line": 378
                                            },
                                            "While trying to retrieve the implicit argument 'range_check_ptr' in:"
                                        ],
                                        "start_col": 16,
                                        "start_line": 364
                                    },
                                    "While expanding the reference 'range_check_ptr' in:"
                                ],
                                "start_col": 5,
                                "start_line": 376
                            },
                            "While trying to update the implicit return value 'range_check_ptr' in:"
                        ],
                        "start_col": 19,
                        "start_line": 70
                    }
                },
                "124": {
                    "accessible_scopes": [
                        "starkware.cairo.common.math",
                        "starkware.cairo.common.math.split_int"
                    ],
                    "flow_tracking_data": null,
                    "hints": [],
                    "inst": {
                        "end_col": 40,
                        "end_line": 379,
                        "input_file": {
                            "filename": "/usr/local/lib/python3.9/site-packages/starkware/cairo/common/math.cairo"
                        },
                        "start_col": 15,
                        "start_line": 379
                    }
                },
                "125": {
                    "accessible_scopes": [
                        "starkware.cairo.common.math",
                        "starkware.cairo.common.math.split_int"
                    ],
                    "flow_tracking_data": null,
                    "hints": [],
                    "inst": {
                        "end_col": 49,
                        "end_line": 379,
                        "input_file": {
                            "filename": "/usr/local/lib/python3.9/site-packages/starkware/cairo/common/math.cairo"
                        },
                        "start_col": 44,
                        "start_line": 379
                    }
                },
                "127": {
                    "accessible_scopes": [
                        "starkware.cairo.common.math",
                        "starkware.cairo.common.math.split_int"
                    ],
                    "flow_tracking_data": null,
                    "hints": [],
                    "inst": {
                        "end_col": 47,
                        "end_line": 364,
                        "input_file": {
                            "filename": "/usr/local/lib/python3.9/site-packages/starkware/cairo/common/math.cairo"
                        },
                        "parent_location": [
                            {
                                "end_col": 60,
                                "end_line": 379,
                                "input_file": {
                                    "filename": "/usr/local/lib/python3.9/site-packages/starkware/cairo/common/math.cairo"
                                },
                                "start_col": 56,
                                "start_line": 379
                            },
                            "While expanding the reference 'base' in:"
                        ],
                        "start_col": 43,
                        "start_line": 364
                    }
                },
                "128": {
                    "accessible_scopes": [
                        "starkware.cairo.common.math",
                        "starkware.cairo.common.math.split_int"
                    ],
                    "flow_tracking_data": null,
                    "hints": [],
                    "inst": {
                        "end_col": 54,
                        "end_line": 364,
                        "input_file": {
                            "filename": "/usr/local/lib/python3.9/site-packages/starkware/cairo/common/math.cairo"
                        },
                        "parent_location": [
                            {
                                "end_col": 73,
                                "end_line": 379,
                                "input_file": {
                                    "filename": "/usr/local/lib/python3.9/site-packages/starkware/cairo/common/math.cairo"
                                },
                                "start_col": 68,
                                "start_line": 379
                            },
                            "While expanding the reference 'bound' in:"
                        ],
                        "start_col": 49,
                        "start_line": 364
                    }
                },
                "129": {
                    "accessible_scopes": [
                        "starkware.cairo.common.math",
                        "starkware.cairo.common.math.split_int"
                    ],
                    "flow_tracking_data": null,
                    "hints": [],
                    "inst": {
                        "end_col": 92,
                        "end_line": 379,
                        "input_file": {
                            "filename": "/usr/local/lib/python3.9/site-packages/starkware/cairo/common/math.cairo"
                        },
                        "start_col": 82,
                        "start_line": 379
                    }
                },
                "131": {
                    "accessible_scopes": [
                        "starkware.cairo.common.math",
                        "starkware.cairo.common.math.split_int"
                    ],
                    "flow_tracking_data": null,
                    "hints": [],
                    "inst": {
                        "end_col": 6,
                        "end_line": 380,
                        "input_file": {
                            "filename": "/usr/local/lib/python3.9/site-packages/starkware/cairo/common/math.cairo"
                        },
                        "start_col": 12,
                        "start_line": 378
                    }
                },
                "133": {
                    "accessible_scopes": [
                        "starkware.cairo.common.math",
                        "starkware.cairo.common.math.split_int"
                    ],
                    "flow_tracking_data": null,
                    "hints": [],
                    "inst": {
                        "end_col": 7,
                        "end_line": 380,
                        "input_file": {
                            "filename": "/usr/local/lib/python3.9/site-packages/starkware/cairo/common/math.cairo"
                        },
                        "start_col": 5,
                        "start_line": 378
                    }
                },
                "134": {
                    "accessible_scopes": [
                        "starkware.cairo.common.math_cmp",
                        "starkware.cairo.common.math_cmp.is_nn"
                    ],
                    "flow_tracking_data": null,
                    "hints": [
                        {
                            "location": {
                                "end_col": 84,
                                "end_line": 19,
                                "input_file": {
                                    "filename": "/usr/local/lib/python3.9/site-packages/starkware/cairo/common/math_cmp.cairo"
                                },
                                "start_col": 5,
                                "start_line": 19
                            },
                            "n_prefix_newlines": 0
                        }
                    ],
                    "inst": {
                        "end_col": 40,
                        "end_line": 20,
                        "input_file": {
                            "filename": "/usr/local/lib/python3.9/site-packages/starkware/cairo/common/math_cmp.cairo"
                        },
                        "start_col": 5,
                        "start_line": 20
                    }
                },
                "136": {
                    "accessible_scopes": [
                        "starkware.cairo.common.math_cmp",
                        "starkware.cairo.common.math_cmp.is_nn"
                    ],
                    "flow_tracking_data": null,
                    "hints": [],
                    "inst": {
                        "end_col": 26,
                        "end_line": 21,
                        "input_file": {
                            "filename": "/usr/local/lib/python3.9/site-packages/starkware/cairo/common/math_cmp.cairo"
                        },
                        "start_col": 5,
                        "start_line": 21
                    }
                },
                "137": {
                    "accessible_scopes": [
                        "starkware.cairo.common.math_cmp",
                        "starkware.cairo.common.math_cmp.is_nn"
                    ],
                    "flow_tracking_data": null,
                    "hints": [],
                    "inst": {
                        "end_col": 13,
                        "end_line": 22,
                        "input_file": {
                            "filename": "/usr/local/lib/python3.9/site-packages/starkware/cairo/common/math_cmp.cairo"
                        },
                        "start_col": 5,
                        "start_line": 22
                    }
                },
                "139": {
                    "accessible_scopes": [
                        "starkware.cairo.common.math_cmp",
                        "starkware.cairo.common.math_cmp.is_nn"
                    ],
                    "flow_tracking_data": null,
                    "hints": [],
                    "inst": {
                        "end_col": 46,
                        "end_line": 23,
                        "input_file": {
                            "filename": "/usr/local/lib/python3.9/site-packages/starkware/cairo/common/math_cmp.cairo"
                        },
                        "parent_location": [
                            {
                                "end_col": 27,
                                "end_line": 18,
                                "input_file": {
                                    "filename": "/usr/local/lib/python3.9/site-packages/starkware/cairo/common/math_cmp.cairo"
                                },
                                "parent_location": [
                                    {
                                        "end_col": 14,
                                        "end_line": 24,
                                        "input_file": {
                                            "filename": "/usr/local/lib/python3.9/site-packages/starkware/cairo/common/math_cmp.cairo"
                                        },
                                        "start_col": 5,
                                        "start_line": 24
                                    },
                                    "While trying to retrieve the implicit argument 'range_check_ptr' in:"
                                ],
                                "start_col": 12,
                                "start_line": 18
                            },
                            "While expanding the reference 'range_check_ptr' in:"
                        ],
                        "start_col": 27,
                        "start_line": 23
                    }
                },
                "141": {
                    "accessible_scopes": [
                        "starkware.cairo.common.math_cmp",
                        "starkware.cairo.common.math_cmp.is_nn"
                    ],
                    "flow_tracking_data": null,
                    "hints": [],
                    "inst": {
                        "end_col": 13,
                        "end_line": 24,
                        "input_file": {
                            "filename": "/usr/local/lib/python3.9/site-packages/starkware/cairo/common/math_cmp.cairo"
                        },
                        "start_col": 12,
                        "start_line": 24
                    }
                },
                "143": {
                    "accessible_scopes": [
                        "starkware.cairo.common.math_cmp",
                        "starkware.cairo.common.math_cmp.is_nn"
                    ],
                    "flow_tracking_data": null,
                    "hints": [],
                    "inst": {
                        "end_col": 14,
                        "end_line": 24,
                        "input_file": {
                            "filename": "/usr/local/lib/python3.9/site-packages/starkware/cairo/common/math_cmp.cairo"
                        },
                        "start_col": 5,
                        "start_line": 24
                    }
                },
                "144": {
                    "accessible_scopes": [
                        "starkware.cairo.common.math_cmp",
                        "starkware.cairo.common.math_cmp.is_nn"
                    ],
                    "flow_tracking_data": null,
                    "hints": [
                        {
                            "location": {
                                "end_col": 91,
                                "end_line": 27,
                                "input_file": {
                                    "filename": "/usr/local/lib/python3.9/site-packages/starkware/cairo/common/math_cmp.cairo"
                                },
                                "start_col": 5,
                                "start_line": 27
                            },
                            "n_prefix_newlines": 0
                        }
                    ],
                    "inst": {
                        "end_col": 48,
                        "end_line": 28,
                        "input_file": {
                            "filename": "/usr/local/lib/python3.9/site-packages/starkware/cairo/common/math_cmp.cairo"
                        },
                        "start_col": 5,
                        "start_line": 28
                    }
                },
                "146": {
                    "accessible_scopes": [
                        "starkware.cairo.common.math_cmp",
                        "starkware.cairo.common.math_cmp.is_nn"
                    ],
                    "flow_tracking_data": null,
                    "hints": [],
                    "inst": {
                        "end_col": 35,
                        "end_line": 29,
                        "input_file": {
                            "filename": "/usr/local/lib/python3.9/site-packages/starkware/cairo/common/math_cmp.cairo"
                        },
                        "start_col": 33,
                        "start_line": 29
                    }
                },
                "148": {
                    "accessible_scopes": [
                        "starkware.cairo.common.math_cmp",
                        "starkware.cairo.common.math_cmp.is_nn"
                    ],
                    "flow_tracking_data": null,
                    "hints": [],
                    "inst": {
                        "end_col": 40,
                        "end_line": 29,
                        "input_file": {
                            "filename": "/usr/local/lib/python3.9/site-packages/starkware/cairo/common/math_cmp.cairo"
                        },
                        "start_col": 32,
                        "start_line": 29
                    }
                },
                "150": {
                    "accessible_scopes": [
                        "starkware.cairo.common.math_cmp",
                        "starkware.cairo.common.math_cmp.is_nn"
                    ],
                    "flow_tracking_data": null,
                    "hints": [],
                    "inst": {
                        "end_col": 41,
                        "end_line": 29,
                        "input_file": {
                            "filename": "/usr/local/lib/python3.9/site-packages/starkware/cairo/common/math_cmp.cairo"
                        },
                        "start_col": 5,
                        "start_line": 29
                    }
                },
                "151": {
                    "accessible_scopes": [
                        "starkware.cairo.common.math_cmp",
                        "starkware.cairo.common.math_cmp.is_nn"
                    ],
                    "flow_tracking_data": null,
                    "hints": [],
                    "inst": {
                        "end_col": 13,
                        "end_line": 30,
                        "input_file": {
                            "filename": "/usr/local/lib/python3.9/site-packages/starkware/cairo/common/math_cmp.cairo"
                        },
                        "start_col": 5,
                        "start_line": 30
                    }
                },
                "153": {
                    "accessible_scopes": [
                        "starkware.cairo.common.math_cmp",
                        "starkware.cairo.common.math_cmp.is_nn"
                    ],
                    "flow_tracking_data": null,
                    "hints": [],
                    "inst": {
                        "end_col": 46,
                        "end_line": 31,
                        "input_file": {
                            "filename": "/usr/local/lib/python3.9/site-packages/starkware/cairo/common/math_cmp.cairo"
                        },
                        "parent_location": [
                            {
                                "end_col": 27,
                                "end_line": 18,
                                "input_file": {
                                    "filename": "/usr/local/lib/python3.9/site-packages/starkware/cairo/common/math_cmp.cairo"
                                },
                                "parent_location": [
                                    {
                                        "end_col": 14,
                                        "end_line": 32,
                                        "input_file": {
                                            "filename": "/usr/local/lib/python3.9/site-packages/starkware/cairo/common/math_cmp.cairo"
                                        },
                                        "start_col": 5,
                                        "start_line": 32
                                    },
                                    "While trying to retrieve the implicit argument 'range_check_ptr' in:"
                                ],
                                "start_col": 12,
                                "start_line": 18
                            },
                            "While expanding the reference 'range_check_ptr' in:"
                        ],
                        "start_col": 27,
                        "start_line": 31
                    }
                },
                "155": {
                    "accessible_scopes": [
                        "starkware.cairo.common.math_cmp",
                        "starkware.cairo.common.math_cmp.is_nn"
                    ],
                    "flow_tracking_data": null,
                    "hints": [],
                    "inst": {
                        "end_col": 13,
                        "end_line": 32,
                        "input_file": {
                            "filename": "/usr/local/lib/python3.9/site-packages/starkware/cairo/common/math_cmp.cairo"
                        },
                        "start_col": 12,
                        "start_line": 32
                    }
                },
                "157": {
                    "accessible_scopes": [
                        "starkware.cairo.common.math_cmp",
                        "starkware.cairo.common.math_cmp.is_nn"
                    ],
                    "flow_tracking_data": null,
                    "hints": [],
                    "inst": {
                        "end_col": 14,
                        "end_line": 32,
                        "input_file": {
                            "filename": "/usr/local/lib/python3.9/site-packages/starkware/cairo/common/math_cmp.cairo"
                        },
                        "start_col": 5,
                        "start_line": 32
                    }
                },
                "158": {
                    "accessible_scopes": [
                        "starkware.cairo.common.math_cmp",
                        "starkware.cairo.common.math_cmp.is_nn"
                    ],
                    "flow_tracking_data": null,
                    "hints": [],
                    "inst": {
                        "end_col": 27,
                        "end_line": 18,
                        "input_file": {
                            "filename": "/usr/local/lib/python3.9/site-packages/starkware/cairo/common/math_cmp.cairo"
                        },
                        "parent_location": [
                            {
                                "end_col": 36,
                                "end_line": 154,
                                "input_file": {
                                    "filename": "/usr/local/lib/python3.9/site-packages/starkware/cairo/common/math.cairo"
                                },
                                "parent_location": [
                                    {
                                        "end_col": 32,
                                        "end_line": 35,
                                        "input_file": {
                                            "filename": "/usr/local/lib/python3.9/site-packages/starkware/cairo/common/math_cmp.cairo"
                                        },
                                        "start_col": 5,
                                        "start_line": 35
                                    },
                                    "While trying to retrieve the implicit argument 'range_check_ptr' in:"
                                ],
                                "start_col": 21,
                                "start_line": 154
                            },
                            "While expanding the reference 'range_check_ptr' in:"
                        ],
                        "start_col": 12,
                        "start_line": 18
                    }
                },
                "159": {
                    "accessible_scopes": [
                        "starkware.cairo.common.math_cmp",
                        "starkware.cairo.common.math_cmp.is_nn"
                    ],
                    "flow_tracking_data": null,
                    "hints": [],
                    "inst": {
                        "end_col": 28,
                        "end_line": 35,
                        "input_file": {
                            "filename": "/usr/local/lib/python3.9/site-packages/starkware/cairo/common/math_cmp.cairo"
                        },
                        "start_col": 20,
                        "start_line": 35
                    }
                },
                "161": {
                    "accessible_scopes": [
                        "starkware.cairo.common.math_cmp",
                        "starkware.cairo.common.math_cmp.is_nn"
                    ],
                    "flow_tracking_data": null,
                    "hints": [],
                    "inst": {
                        "end_col": 30,
                        "end_line": 18,
                        "input_file": {
                            "filename": "/usr/local/lib/python3.9/site-packages/starkware/cairo/common/math_cmp.cairo"
                        },
                        "parent_location": [
                            {
                                "end_col": 31,
                                "end_line": 35,
                                "input_file": {
                                    "filename": "/usr/local/lib/python3.9/site-packages/starkware/cairo/common/math_cmp.cairo"
                                },
                                "start_col": 30,
                                "start_line": 35
                            },
                            "While expanding the reference 'a' in:"
                        ],
                        "start_col": 29,
                        "start_line": 18
                    }
                },
                "162": {
                    "accessible_scopes": [
                        "starkware.cairo.common.math_cmp",
                        "starkware.cairo.common.math_cmp.is_nn"
                    ],
                    "flow_tracking_data": null,
                    "hints": [],
                    "inst": {
                        "end_col": 32,
                        "end_line": 35,
                        "input_file": {
                            "filename": "/usr/local/lib/python3.9/site-packages/starkware/cairo/common/math_cmp.cairo"
                        },
                        "start_col": 5,
                        "start_line": 35
                    }
                },
                "164": {
                    "accessible_scopes": [
                        "starkware.cairo.common.math_cmp",
                        "starkware.cairo.common.math_cmp.is_nn"
                    ],
                    "flow_tracking_data": null,
                    "hints": [],
                    "inst": {
                        "end_col": 13,
                        "end_line": 36,
                        "input_file": {
                            "filename": "/usr/local/lib/python3.9/site-packages/starkware/cairo/common/math_cmp.cairo"
                        },
                        "start_col": 12,
                        "start_line": 36
                    }
                },
                "166": {
                    "accessible_scopes": [
                        "starkware.cairo.common.math_cmp",
                        "starkware.cairo.common.math_cmp.is_nn"
                    ],
                    "flow_tracking_data": null,
                    "hints": [],
                    "inst": {
                        "end_col": 14,
                        "end_line": 36,
                        "input_file": {
                            "filename": "/usr/local/lib/python3.9/site-packages/starkware/cairo/common/math_cmp.cairo"
                        },
                        "start_col": 5,
                        "start_line": 36
                    }
                },
                "167": {
                    "accessible_scopes": [
                        "starkware.cairo.common.math_cmp",
                        "starkware.cairo.common.math_cmp.is_le"
                    ],
                    "flow_tracking_data": null,
                    "hints": [],
                    "inst": {
                        "end_col": 27,
                        "end_line": 42,
                        "input_file": {
                            "filename": "/usr/local/lib/python3.9/site-packages/starkware/cairo/common/math_cmp.cairo"
                        },
                        "parent_location": [
                            {
                                "end_col": 27,
                                "end_line": 18,
                                "input_file": {
                                    "filename": "/usr/local/lib/python3.9/site-packages/starkware/cairo/common/math_cmp.cairo"
                                },
                                "parent_location": [
                                    {
                                        "end_col": 24,
                                        "end_line": 43,
                                        "input_file": {
                                            "filename": "/usr/local/lib/python3.9/site-packages/starkware/cairo/common/math_cmp.cairo"
                                        },
                                        "start_col": 12,
                                        "start_line": 43
                                    },
                                    "While trying to retrieve the implicit argument 'range_check_ptr' in:"
                                ],
                                "start_col": 12,
                                "start_line": 18
                            },
                            "While expanding the reference 'range_check_ptr' in:"
                        ],
                        "start_col": 12,
                        "start_line": 42
                    }
                },
                "168": {
                    "accessible_scopes": [
                        "starkware.cairo.common.math_cmp",
                        "starkware.cairo.common.math_cmp.is_le"
                    ],
                    "flow_tracking_data": null,
                    "hints": [],
                    "inst": {
                        "end_col": 23,
                        "end_line": 43,
                        "input_file": {
                            "filename": "/usr/local/lib/python3.9/site-packages/starkware/cairo/common/math_cmp.cairo"
                        },
                        "start_col": 18,
                        "start_line": 43
                    }
                },
                "169": {
                    "accessible_scopes": [
                        "starkware.cairo.common.math_cmp",
                        "starkware.cairo.common.math_cmp.is_le"
                    ],
                    "flow_tracking_data": null,
                    "hints": [],
                    "inst": {
                        "end_col": 24,
                        "end_line": 43,
                        "input_file": {
                            "filename": "/usr/local/lib/python3.9/site-packages/starkware/cairo/common/math_cmp.cairo"
                        },
                        "start_col": 12,
                        "start_line": 43
                    }
                },
                "171": {
                    "accessible_scopes": [
                        "starkware.cairo.common.math_cmp",
                        "starkware.cairo.common.math_cmp.is_le"
                    ],
                    "flow_tracking_data": null,
                    "hints": [],
                    "inst": {
                        "end_col": 25,
                        "end_line": 43,
                        "input_file": {
                            "filename": "/usr/local/lib/python3.9/site-packages/starkware/cairo/common/math_cmp.cairo"
                        },
                        "start_col": 5,
                        "start_line": 43
                    }
                },
                "172": {
                    "accessible_scopes": [
                        "starkware.cairo.common.memset",
                        "starkware.cairo.common.memset.memset"
                    ],
                    "flow_tracking_data": null,
                    "hints": [],
                    "inst": {
                        "end_col": 7,
                        "end_line": 7,
                        "input_file": {
                            "filename": "/usr/local/lib/python3.9/site-packages/starkware/cairo/common/memset.cairo"
                        },
                        "start_col": 5,
                        "start_line": 7
                    }
                },
                "174": {
                    "accessible_scopes": [
                        "starkware.cairo.common.memset",
                        "starkware.cairo.common.memset.memset"
                    ],
                    "flow_tracking_data": null,
                    "hints": [],
                    "inst": {
                        "end_col": 19,
                        "end_line": 8,
                        "input_file": {
                            "filename": "/usr/local/lib/python3.9/site-packages/starkware/cairo/common/memset.cairo"
                        },
                        "start_col": 9,
                        "start_line": 8
                    }
                },
                "175": {
                    "accessible_scopes": [
                        "starkware.cairo.common.memset",
                        "starkware.cairo.common.memset.memset"
                    ],
                    "flow_tracking_data": null,
                    "hints": [
                        {
                            "location": {
                                "end_col": 39,
                                "end_line": 11,
                                "input_file": {
                                    "filename": "/usr/local/lib/python3.9/site-packages/starkware/cairo/common/memset.cairo"
                                },
                                "start_col": 5,
                                "start_line": 11
                            },
                            "n_prefix_newlines": 0
                        }
                    ],
                    "inst": {
                        "end_col": 23,
                        "end_line": 2,
                        "input_file": {
                            "filename": "/usr/local/lib/python3.9/site-packages/starkware/cairo/common/memset.cairo"
                        },
                        "parent_location": [
                            {
                                "end_col": 38,
                                "end_line": 12,
                                "input_file": {
                                    "filename": "/usr/local/lib/python3.9/site-packages/starkware/cairo/common/memset.cairo"
                                },
                                "start_col": 35,
                                "start_line": 12
                            },
                            "While expanding the reference 'dst' in:"
                        ],
                        "start_col": 13,
                        "start_line": 2
                    }
                },
                "176": {
                    "accessible_scopes": [
                        "starkware.cairo.common.memset",
                        "starkware.cairo.common.memset.memset"
                    ],
                    "flow_tracking_data": null,
                    "hints": [],
                    "inst": {
                        "end_col": 32,
                        "end_line": 16,
                        "input_file": {
                            "filename": "/usr/local/lib/python3.9/site-packages/starkware/cairo/common/memset.cairo"
                        },
                        "start_col": 5,
                        "start_line": 16
                    }
                },
                "177": {
                    "accessible_scopes": [
                        "starkware.cairo.common.memset",
                        "starkware.cairo.common.memset.memset"
                    ],
                    "flow_tracking_data": null,
                    "hints": [],
                    "inst": {
                        "end_col": 41,
                        "end_line": 21,
                        "input_file": {
                            "filename": "/usr/local/lib/python3.9/site-packages/starkware/cairo/common/memset.cairo"
                        },
                        "start_col": 5,
                        "start_line": 21
                    }
                },
                "179": {
                    "accessible_scopes": [
                        "starkware.cairo.common.memset",
                        "starkware.cairo.common.memset.memset"
                    ],
                    "flow_tracking_data": null,
                    "hints": [
                        {
                            "location": {
                                "end_col": 7,
                                "end_line": 25,
                                "input_file": {
                                    "filename": "/usr/local/lib/python3.9/site-packages/starkware/cairo/common/memset.cairo"
                                },
                                "start_col": 5,
                                "start_line": 22
                            },
                            "n_prefix_newlines": 1
                        }
                    ],
                    "inst": {
                        "end_col": 41,
                        "end_line": 27,
                        "input_file": {
                            "filename": "/usr/local/lib/python3.9/site-packages/starkware/cairo/common/memset.cairo"
                        },
                        "start_col": 5,
                        "start_line": 27
                    }
                },
                "181": {
                    "accessible_scopes": [
                        "starkware.cairo.common.memset",
                        "starkware.cairo.common.memset.memset"
                    ],
                    "flow_tracking_data": null,
                    "hints": [],
                    "inst": {
                        "end_col": 53,
                        "end_line": 29,
                        "input_file": {
                            "filename": "/usr/local/lib/python3.9/site-packages/starkware/cairo/common/memset.cairo"
                        },
                        "start_col": 5,
                        "start_line": 29
                    }
                },
                "182": {
                    "accessible_scopes": [
                        "starkware.cairo.common.memset",
                        "starkware.cairo.common.memset.memset"
                    ],
                    "flow_tracking_data": null,
                    "hints": [
                        {
                            "location": {
                                "end_col": 26,
                                "end_line": 31,
                                "input_file": {
                                    "filename": "/usr/local/lib/python3.9/site-packages/starkware/cairo/common/memset.cairo"
                                },
                                "start_col": 5,
                                "start_line": 31
                            },
                            "n_prefix_newlines": 0
                        }
                    ],
                    "inst": {
                        "end_col": 15,
                        "end_line": 32,
                        "input_file": {
                            "filename": "/usr/local/lib/python3.9/site-packages/starkware/cairo/common/memset.cairo"
                        },
                        "start_col": 5,
                        "start_line": 32
                    }
                },
                "183": {
                    "accessible_scopes": [
                        "starkware.cairo.common.registers",
                        "starkware.cairo.common.registers.get_label_location"
                    ],
                    "flow_tracking_data": null,
                    "hints": [],
                    "inst": {
                        "end_col": 38,
                        "end_line": 22,
                        "input_file": {
                            "filename": "/usr/local/lib/python3.9/site-packages/starkware/cairo/common/registers.cairo"
                        },
                        "start_col": 23,
                        "start_line": 22
                    }
                },
                "185": {
                    "accessible_scopes": [
                        "starkware.cairo.common.registers",
                        "starkware.cairo.common.registers.get_label_location"
                    ],
                    "flow_tracking_data": null,
                    "hints": [],
                    "inst": {
                        "end_col": 53,
                        "end_line": 25,
                        "input_file": {
                            "filename": "/usr/local/lib/python3.9/site-packages/starkware/cairo/common/registers.cairo"
                        },
                        "start_col": 27,
                        "start_line": 25
                    }
                },
                "187": {
                    "accessible_scopes": [
                        "starkware.cairo.common.registers",
                        "starkware.cairo.common.registers.get_label_location"
                    ],
                    "flow_tracking_data": null,
                    "hints": [],
                    "inst": {
                        "end_col": 54,
                        "end_line": 25,
                        "input_file": {
                            "filename": "/usr/local/lib/python3.9/site-packages/starkware/cairo/common/registers.cairo"
                        },
                        "start_col": 17,
                        "start_line": 25
                    }
                },
                "188": {
                    "accessible_scopes": [
                        "starkware.cairo.common.registers",
                        "starkware.cairo.common.registers.get_label_location"
                    ],
                    "flow_tracking_data": null,
                    "hints": [],
                    "inst": {
                        "end_col": 56,
                        "end_line": 25,
                        "input_file": {
                            "filename": "/usr/local/lib/python3.9/site-packages/starkware/cairo/common/registers.cairo"
                        },
                        "start_col": 5,
                        "start_line": 25
                    }
                }
            }
        },
        "hints": {
            "0": [
                {
                    "accessible_scopes": [
                        "starkware.cairo.common.alloc",
                        "starkware.cairo.common.alloc.alloc"
                    ],
                    "code": "memory[ap] = segments.add()",
                    "flow_tracking_data": {
                        "ap_tracking": {
                            "group": 0,
                            "offset": 0
                        },
                        "reference_ids": {}
                    }
                }
            ],
            "6": [
                {
                    "accessible_scopes": [
                        "starkware.cairo.common.memcpy",
                        "starkware.cairo.common.memcpy.memcpy"
                    ],
                    "code": "vm_enter_scope({'n': ids.len})",
                    "flow_tracking_data": {
                        "ap_tracking": {
                            "group": 1,
                            "offset": 0
                        },
                        "reference_ids": {
                            "starkware.cairo.common.memcpy.memcpy.len": 0
                        }
                    }
                }
            ],
            "14": [
                {
                    "accessible_scopes": [
                        "starkware.cairo.common.memcpy",
                        "starkware.cairo.common.memcpy.memcpy"
                    ],
                    "code": "n -= 1\nids.continue_copying = 1 if n > 0 else 0",
                    "flow_tracking_data": {
                        "ap_tracking": {
                            "group": 1,
                            "offset": 5
                        },
                        "reference_ids": {
                            "starkware.cairo.common.memcpy.memcpy.continue_copying": 1
                        }
                    }
                }
            ],
            "17": [
                {
                    "accessible_scopes": [
                        "starkware.cairo.common.memcpy",
                        "starkware.cairo.common.memcpy.memcpy"
                    ],
                    "code": "vm_exit_scope()",
                    "flow_tracking_data": {
                        "ap_tracking": {
                            "group": 1,
                            "offset": 6
                        },
                        "reference_ids": {}
                    }
                }
            ],
            "19": [
                {
                    "accessible_scopes": [
                        "starkware.cairo.common.math",
                        "starkware.cairo.common.math.assert_not_zero"
                    ],
                    "code": "from starkware.cairo.common.math_utils import assert_integer\nassert_integer(ids.value)\nassert ids.value % PRIME != 0, f'assert_not_zero failed: {ids.value} = 0.'",
                    "flow_tracking_data": {
                        "ap_tracking": {
                            "group": 3,
                            "offset": 0
                        },
                        "reference_ids": {
                            "starkware.cairo.common.math.assert_not_zero.value": 2
                        }
                    }
                }
            ],
            "24": [
                {
                    "accessible_scopes": [
                        "starkware.cairo.common.math",
                        "starkware.cairo.common.math.assert_nn"
                    ],
                    "code": "from starkware.cairo.common.math_utils import assert_integer\nassert_integer(ids.a)\nassert 0 <= ids.a % PRIME < range_check_builtin.bound, f'a = {ids.a} is out of range.'",
                    "flow_tracking_data": {
                        "ap_tracking": {
                            "group": 4,
                            "offset": 0
                        },
                        "reference_ids": {
                            "starkware.cairo.common.math.assert_nn.a": 3
                        }
                    }
                }
            ],
            "49": [
                {
                    "accessible_scopes": [
                        "starkware.cairo.common.math",
                        "starkware.cairo.common.math.assert_le_felt"
                    ],
                    "code": "import itertools\n\nfrom starkware.cairo.common.math_utils import assert_integer\nassert_integer(ids.a)\nassert_integer(ids.b)\na = ids.a % PRIME\nb = ids.b % PRIME\nassert a <= b, f'a = {a} is not less than or equal to b = {b}.'\n\n# Find an arc less than PRIME / 3, and another less than PRIME / 2.\nlengths_and_indices = [(a, 0), (b - a, 1), (PRIME - 1 - b, 2)]\nlengths_and_indices.sort()\nassert lengths_and_indices[0][0] <= PRIME // 3 and lengths_and_indices[1][0] <= PRIME // 2\nexcluded = lengths_and_indices[2][1]\n\nmemory[ids.range_check_ptr + 1], memory[ids.range_check_ptr + 0] = (\n    divmod(lengths_and_indices[0][0], ids.PRIME_OVER_3_HIGH))\nmemory[ids.range_check_ptr + 3], memory[ids.range_check_ptr + 2] = (\n    divmod(lengths_and_indices[1][0], ids.PRIME_OVER_2_HIGH))",
                    "flow_tracking_data": {
                        "ap_tracking": {
                            "group": 8,
                            "offset": 0
                        },
                        "reference_ids": {
                            "starkware.cairo.common.math.assert_le_felt.a": 4,
                            "starkware.cairo.common.math.assert_le_felt.b": 5,
                            "starkware.cairo.common.math.assert_le_felt.range_check_ptr": 6
                        }
                    }
                }
            ],
            "59": [
                {
                    "accessible_scopes": [
                        "starkware.cairo.common.math",
                        "starkware.cairo.common.math.assert_le_felt"
                    ],
                    "code": "memory[ap] = 1 if excluded != 0 else 0",
                    "flow_tracking_data": {
                        "ap_tracking": {
                            "group": 8,
                            "offset": 8
                        },
                        "reference_ids": {}
                    }
                }
            ],
            "73": [
                {
                    "accessible_scopes": [
                        "starkware.cairo.common.math",
                        "starkware.cairo.common.math.assert_le_felt"
                    ],
                    "code": "memory[ap] = 1 if excluded != 1 else 0",
                    "flow_tracking_data": {
                        "ap_tracking": {
                            "group": 8,
                            "offset": 9
                        },
                        "reference_ids": {}
                    }
                }
            ],
            "85": [
                {
                    "accessible_scopes": [
                        "starkware.cairo.common.math",
                        "starkware.cairo.common.math.assert_le_felt"
                    ],
                    "code": "assert excluded == 2",
                    "flow_tracking_data": {
                        "ap_tracking": {
                            "group": 8,
                            "offset": 10
                        },
                        "reference_ids": {}
                    }
                }
            ],
            "94": [
                {
                    "accessible_scopes": [
                        "starkware.cairo.common.math",
                        "starkware.cairo.common.math.unsigned_div_rem"
                    ],
                    "code": "from starkware.cairo.common.math_utils import assert_integer\nassert_integer(ids.div)\nassert 0 < ids.div <= PRIME // range_check_builtin.bound, \\\n    f'div={hex(ids.div)} is out of the valid range.'\nids.q, ids.r = divmod(ids.value, ids.div)",
                    "flow_tracking_data": {
                        "ap_tracking": {
                            "group": 9,
                            "offset": 0
                        },
                        "reference_ids": {
                            "starkware.cairo.common.math.unsigned_div_rem.div": 8,
                            "starkware.cairo.common.math.unsigned_div_rem.q": 10,
                            "starkware.cairo.common.math.unsigned_div_rem.r": 9,
                            "starkware.cairo.common.math.unsigned_div_rem.value": 7
                        }
                    }
                }
            ],
            "111": [
                {
                    "accessible_scopes": [
                        "starkware.cairo.common.math",
                        "starkware.cairo.common.math.split_int"
                    ],
                    "code": "assert ids.value == 0, 'split_int(): value is out of range.'",
                    "flow_tracking_data": {
                        "ap_tracking": {
                            "group": 10,
                            "offset": 0
                        },
                        "reference_ids": {
                            "starkware.cairo.common.math.split_int.value": 11
                        }
                    }
                }
            ],
            "115": [
                {
                    "accessible_scopes": [
                        "starkware.cairo.common.math",
                        "starkware.cairo.common.math.split_int"
                    ],
                    "code": "memory[ids.output] = res = (int(ids.value) % PRIME) % ids.base\nassert res < ids.bound, f'split_int(): Limb {res} is out of range.'",
                    "flow_tracking_data": {
                        "ap_tracking": {
                            "group": 10,
                            "offset": 0
                        },
                        "reference_ids": {
                            "starkware.cairo.common.math.split_int.base": 12,
                            "starkware.cairo.common.math.split_int.bound": 13,
                            "starkware.cairo.common.math.split_int.output": 14,
                            "starkware.cairo.common.math.split_int.value": 11
                        }
                    }
                }
            ],
            "134": [
                {
                    "accessible_scopes": [
                        "starkware.cairo.common.math_cmp",
                        "starkware.cairo.common.math_cmp.is_nn"
                    ],
                    "code": "memory[ap] = 0 if 0 <= (ids.a % PRIME) < range_check_builtin.bound else 1",
                    "flow_tracking_data": {
                        "ap_tracking": {
                            "group": 12,
                            "offset": 0
                        },
                        "reference_ids": {
                            "starkware.cairo.common.math_cmp.is_nn.a": 15
                        }
                    }
                }
            ],
            "144": [
                {
                    "accessible_scopes": [
                        "starkware.cairo.common.math_cmp",
                        "starkware.cairo.common.math_cmp.is_nn"
                    ],
                    "code": "memory[ap] = 0 if 0 <= ((-ids.a - 1) % PRIME) < range_check_builtin.bound else 1",
                    "flow_tracking_data": {
                        "ap_tracking": {
                            "group": 12,
                            "offset": 1
                        },
                        "reference_ids": {
                            "starkware.cairo.common.math_cmp.is_nn.a": 15
                        }
                    }
                }
            ],
            "175": [
                {
                    "accessible_scopes": [
                        "starkware.cairo.common.memset",
                        "starkware.cairo.common.memset.memset"
                    ],
                    "code": "vm_enter_scope({'n': ids.n})",
                    "flow_tracking_data": {
                        "ap_tracking": {
                            "group": 14,
                            "offset": 0
                        },
                        "reference_ids": {
                            "starkware.cairo.common.memset.memset.n": 16
                        }
                    }
                }
            ],
            "179": [
                {
                    "accessible_scopes": [
                        "starkware.cairo.common.memset",
                        "starkware.cairo.common.memset.memset"
                    ],
                    "code": "n -= 1\nids.continue_loop = 1 if n > 0 else 0",
                    "flow_tracking_data": {
                        "ap_tracking": {
                            "group": 14,
                            "offset": 2
                        },
                        "reference_ids": {
                            "starkware.cairo.common.memset.memset.continue_loop": 17
                        }
                    }
                }
            ],
            "182": [
                {
                    "accessible_scopes": [
                        "starkware.cairo.common.memset",
                        "starkware.cairo.common.memset.memset"
                    ],
                    "code": "vm_exit_scope()",
                    "flow_tracking_data": {
                        "ap_tracking": {
                            "group": 14,
                            "offset": 3
                        },
                        "reference_ids": {}
                    }
                }
            ]
        },
        "identifiers": {
            "__main__.Combat": {
                "type": "namespace"
            },
            "__main__.Combat.Args": {
                "full_name": "__main__.Combat.Args",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "__main__.Combat.ImplicitArgs": {
                "full_name": "__main__.Combat.ImplicitArgs",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "__main__.Combat.Return": {
                "cairo_type": "()",
                "type": "type_definition"
            },
            "__main__.Combat.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "__main__.DEFENDING_SQUAD_SLOT": {
                "destination": "contracts.settling_game.utils.constants.DEFENDING_SQUAD_SLOT",
                "type": "alias"
            },
            "__main__.RealmBuildings": {
                "destination": "contracts.settling_game.utils.game_structs.RealmBuildings",
                "type": "alias"
            },
            "__main__.RealmBuildingsIds": {
                "destination": "contracts.settling_game.utils.game_structs.RealmBuildingsIds",
                "type": "alias"
            },
            "__main__.SHIFT": {
                "type": "const",
                "value": 256
            },
            "__main__.Squad": {
                "destination": "contracts.settling_game.utils.game_structs.Squad",
                "type": "alias"
            },
            "__main__.SquadStats": {
                "destination": "contracts.settling_game.utils.game_structs.SquadStats",
                "type": "alias"
            },
            "__main__.TRUE": {
                "destination": "starkware.cairo.common.bool.TRUE",
                "type": "alias"
            },
            "__main__.Troop": {
                "destination": "contracts.settling_game.utils.game_structs.Troop",
                "type": "alias"
            },
            "__main__.TroopId": {
                "destination": "contracts.settling_game.utils.game_structs.TroopId",
                "type": "alias"
            },
            "__main__.TroopProps": {
                "destination": "contracts.settling_game.utils.game_structs.TroopProps",
                "type": "alias"
            },
            "__main__.TroopType": {
                "destination": "contracts.settling_game.utils.game_structs.TroopType",
                "type": "alias"
            },
            "__main__.alloc": {
                "destination": "starkware.cairo.common.alloc.alloc",
                "type": "alias"
            },
            "__main__.assert_le": {
                "destination": "starkware.cairo.common.math.assert_le",
                "type": "alias"
            },
            "__main__.assert_lt": {
                "destination": "starkware.cairo.common.math.assert_lt",
                "type": "alias"
            },
            "__main__.assert_not_zero": {
                "destination": "starkware.cairo.common.math.assert_not_zero",
                "type": "alias"
            },
            "__main__.get_fp_and_pc": {
                "destination": "starkware.cairo.lang.compiler.lib.registers.get_fp_and_pc",
                "type": "alias"
            },
            "__main__.get_label_location": {
                "destination": "starkware.cairo.common.registers.get_label_location",
                "type": "alias"
            },
            "__main__.is_le": {
                "destination": "starkware.cairo.common.math_cmp.is_le",
                "type": "alias"
            },
            "__main__.is_nn": {
                "destination": "starkware.cairo.common.math_cmp.is_nn",
                "type": "alias"
            },
            "__main__.memcpy": {
                "destination": "starkware.cairo.common.memcpy.memcpy",
                "type": "alias"
            },
            "__main__.memset": {
                "destination": "starkware.cairo.common.memset.memset",
                "type": "alias"
            },
            "__main__.split_int": {
                "destination": "starkware.cairo.common.math.split_int",
                "type": "alias"
            },
            "__main__.unsigned_div_rem": {
                "destination": "starkware.cairo.common.math.unsigned_div_rem",
                "type": "alias"
            },
            "contracts.settling_game.utils.constants.ATTACKING_ARMY_XP": {
                "type": "const",
                "value": 100
            },
            "contracts.settling_game.utils.constants.ATTACKING_SQUAD_SLOT": {
                "type": "const",
                "value": 1
            },
            "contracts.settling_game.utils.constants.ATTACK_COOLDOWN_PERIOD": {
                "type": "const",
                "value": 1440
            },
            "contracts.settling_game.utils.constants.BASE_FOOD_PRODUCTION": {
                "type": "const",
                "value": 14000
            },
            "contracts.settling_game.utils.constants.BASE_HARVESTS": {
                "type": "const",
                "value": 24
            },
            "contracts.settling_game.utils.constants.BASE_LORDS_PER_DAY": {
                "type": "const",
                "value": 25
            },
            "contracts.settling_game.utils.constants.BASE_RESOURCES_PER_DAY": {
                "type": "const",
                "value": 250
            },
            "contracts.settling_game.utils.constants.BASE_SQM": {
                "type": "const",
                "value": 100
            },
            "contracts.settling_game.utils.constants.COMBAT_OUTCOME_ATTACKER_WINS": {
                "type": "const",
                "value": 1
            },
            "contracts.settling_game.utils.constants.COMBAT_OUTCOME_DEFENDER_WINS": {
                "type": "const",
                "value": 2
            },
            "contracts.settling_game.utils.constants.DAY": {
                "type": "const",
                "value": 14400
            },
            "contracts.settling_game.utils.constants.DEFENDING_ARMY_XP": {
                "type": "const",
                "value": 30
            },
            "contracts.settling_game.utils.constants.DEFENDING_SQUAD_SLOT": {
                "type": "const",
                "value": 2
            },
            "contracts.settling_game.utils.constants.FARM_LENGTH": {
                "type": "const",
                "value": 115200
            },
            "contracts.settling_game.utils.constants.FISHING_TRAPS": {
                "type": "const",
                "value": 115200
            },
            "contracts.settling_game.utils.constants.GENESIS_TIMESTAMP": {
                "type": "const",
                "value": 1645743897
            },
            "contracts.settling_game.utils.constants.GOBLINDOWN_REWARD": {
                "type": "const",
                "value": 20
            },
            "contracts.settling_game.utils.constants.GOBLIN_WELCOME_PARTY_STRENGTH": {
                "type": "const",
                "value": 1
            },
            "contracts.settling_game.utils.constants.HARVEST_LENGTH": {
                "type": "const",
                "value": 1440
            },
            "contracts.settling_game.utils.constants.LEGENDARY_MULTIPLIER": {
                "type": "const",
                "value": 10
            },
            "contracts.settling_game.utils.constants.MAX_DAYS_ACCURED": {
                "type": "const",
                "value": 3
            },
            "contracts.settling_game.utils.constants.MAX_GOBLIN_TOWN_STRENGTH": {
                "type": "const",
                "value": 12
            },
            "contracts.settling_game.utils.constants.MAX_HARVESTS": {
                "type": "const",
                "value": 6
            },
            "contracts.settling_game.utils.constants.MAX_WALL_DEFENSE_HIT_POINTS": {
                "type": "const",
                "value": 5
            },
            "contracts.settling_game.utils.constants.PILLAGE_AMOUNT": {
                "type": "const",
                "value": 25
            },
            "contracts.settling_game.utils.constants.POPULATION_PER_HIT_POINT": {
                "type": "const",
                "value": 50
            },
            "contracts.settling_game.utils.constants.RESOURCES_PER_CRYPT": {
                "type": "const",
                "value": 1
            },
            "contracts.settling_game.utils.constants.SECONDS_PER_KM": {
                "type": "const",
                "value": 30
            },
            "contracts.settling_game.utils.constants.SHIFT_41": {
                "type": "namespace"
            },
            "contracts.settling_game.utils.constants.SHIFT_41.Args": {
                "full_name": "contracts.settling_game.utils.constants.SHIFT_41.Args",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "contracts.settling_game.utils.constants.SHIFT_41.ImplicitArgs": {
                "full_name": "contracts.settling_game.utils.constants.SHIFT_41.ImplicitArgs",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "contracts.settling_game.utils.constants.SHIFT_41.Return": {
                "cairo_type": "()",
                "type": "type_definition"
            },
            "contracts.settling_game.utils.constants.SHIFT_41.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "contracts.settling_game.utils.constants.SHIFT_41._1": {
                "type": "const",
                "value": 1
            },
            "contracts.settling_game.utils.constants.SHIFT_41._2": {
                "type": "const",
                "value": 2199023255552
            },
            "contracts.settling_game.utils.constants.SHIFT_41._3": {
                "type": "const",
                "value": 4835703278458516698824704
            },
            "contracts.settling_game.utils.constants.SHIFT_41._4": {
                "type": "const",
                "value": 10633823966279326983230456482242756608
            },
            "contracts.settling_game.utils.constants.SHIFT_41._5": {
                "type": "const",
                "value": 23384026197294446691258957323460528314494920687616
            },
            "contracts.settling_game.utils.constants.SHIFT_6_1": {
                "type": "const",
                "value": 1
            },
            "contracts.settling_game.utils.constants.SHIFT_6_10": {
                "type": "const",
                "value": 18014398509481984
            },
            "contracts.settling_game.utils.constants.SHIFT_6_11": {
                "type": "const",
                "value": 1152921504606846976
            },
            "contracts.settling_game.utils.constants.SHIFT_6_12": {
                "type": "const",
                "value": 73786976294838206464
            },
            "contracts.settling_game.utils.constants.SHIFT_6_13": {
                "type": "const",
                "value": 4722366482869645213696
            },
            "contracts.settling_game.utils.constants.SHIFT_6_14": {
                "type": "const",
                "value": 302231454903657293676544
            },
            "contracts.settling_game.utils.constants.SHIFT_6_15": {
                "type": "const",
                "value": 19342813113834066795298816
            },
            "contracts.settling_game.utils.constants.SHIFT_6_16": {
                "type": "const",
                "value": 1237940039285380274899124224
            },
            "contracts.settling_game.utils.constants.SHIFT_6_17": {
                "type": "const",
                "value": 79228162514264337593543950336
            },
            "contracts.settling_game.utils.constants.SHIFT_6_18": {
                "type": "const",
                "value": 5070602400912917605986812821504
            },
            "contracts.settling_game.utils.constants.SHIFT_6_19": {
                "type": "const",
                "value": 324518553658426726783156020576256
            },
            "contracts.settling_game.utils.constants.SHIFT_6_2": {
                "type": "const",
                "value": 64
            },
            "contracts.settling_game.utils.constants.SHIFT_6_20": {
                "type": "const",
                "value": 20769187434139310514121985316880384
            },
            "contracts.settling_game.utils.constants.SHIFT_6_3": {
                "type": "const",
                "value": 4096
            },
            "contracts.settling_game.utils.constants.SHIFT_6_4": {
                "type": "const",
                "value": 262144
            },
            "contracts.settling_game.utils.constants.SHIFT_6_5": {
                "type": "const",
                "value": 16777216
            },
            "contracts.settling_game.utils.constants.SHIFT_6_6": {
                "type": "const",
                "value": 1073741824
            },
            "contracts.settling_game.utils.constants.SHIFT_6_7": {
                "type": "const",
                "value": 68719476736
            },
            "contracts.settling_game.utils.constants.SHIFT_6_8": {
                "type": "const",
                "value": 4398046511104
            },
            "contracts.settling_game.utils.constants.SHIFT_6_9": {
                "type": "const",
                "value": 281474976710656
            },
            "contracts.settling_game.utils.constants.SHIFT_8_1": {
                "type": "const",
                "value": 1
            },
            "contracts.settling_game.utils.constants.SHIFT_8_10": {
                "type": "const",
                "value": 4722366482869645213696
            },
            "contracts.settling_game.utils.constants.SHIFT_8_11": {
                "type": "const",
                "value": 1208925819614629174706176
            },
            "contracts.settling_game.utils.constants.SHIFT_8_12": {
                "type": "const",
                "value": 309485009821345068724781056
            },
            "contracts.settling_game.utils.constants.SHIFT_8_13": {
                "type": "const",
                "value": 79228162514264337593543950336
            },
            "contracts.settling_game.utils.constants.SHIFT_8_14": {
                "type": "const",
                "value": 20282409603651670423947251286016
            },
            "contracts.settling_game.utils.constants.SHIFT_8_15": {
                "type": "const",
                "value": 5192296858534827628530496329220096
            },
            "contracts.settling_game.utils.constants.SHIFT_8_16": {
                "type": "const",
                "value": 1329227995784915872903807060280344576
            },
            "contracts.settling_game.utils.constants.SHIFT_8_17": {
                "type": "const",
                "value": 340282366920938463463374607431768211456
            },
            "contracts.settling_game.utils.constants.SHIFT_8_18": {
                "type": "const",
                "value": 87112285931760246646623899502532662132736
            },
            "contracts.settling_game.utils.constants.SHIFT_8_19": {
                "type": "const",
                "value": 22300745198530623141535718272648361505980416
            },
            "contracts.settling_game.utils.constants.SHIFT_8_2": {
                "type": "const",
                "value": 256
            },
            "contracts.settling_game.utils.constants.SHIFT_8_20": {
                "type": "const",
                "value": 5708990770823839524233143877797980545530986496
            },
            "contracts.settling_game.utils.constants.SHIFT_8_3": {
                "type": "const",
                "value": 65536
            },
            "contracts.settling_game.utils.constants.SHIFT_8_4": {
                "type": "const",
                "value": 16777216
            },
            "contracts.settling_game.utils.constants.SHIFT_8_5": {
                "type": "const",
                "value": 4294967296
            },
            "contracts.settling_game.utils.constants.SHIFT_8_6": {
                "type": "const",
                "value": 1099511627776
            },
            "contracts.settling_game.utils.constants.SHIFT_8_7": {
                "type": "const",
                "value": 281474976710656
            },
            "contracts.settling_game.utils.constants.SHIFT_8_8": {
                "type": "const",
                "value": 72057594037927936
            },
            "contracts.settling_game.utils.constants.SHIFT_8_9": {
                "type": "const",
                "value": 18446744073709551616
            },
            "contracts.settling_game.utils.constants.SHIFT_NFT_1": {
                "type": "const",
                "value": 1
            },
            "contracts.settling_game.utils.constants.SHIFT_NFT_2": {
                "type": "const",
                "value": 128
            },
            "contracts.settling_game.utils.constants.SHIFT_NFT_3": {
                "type": "const",
                "value": 134217728
            },
            "contracts.settling_game.utils.constants.SHIFT_NFT_4": {
                "type": "const",
                "value": 4503599627370496
            },
            "contracts.settling_game.utils.constants.SHIFT_NFT_5": {
                "type": "const",
                "value": 18014398509481984
            },
            "contracts.settling_game.utils.constants.STORE_HOUSE_SIZE": {
                "type": "const",
                "value": 10000
            },
            "contracts.settling_game.utils.constants.TOTAL_BATTALIONS": {
                "type": "const",
                "value": 30
            },
            "contracts.settling_game.utils.constants.VAULT_LENGTH": {
                "type": "const",
                "value": 7
            },
            "contracts.settling_game.utils.constants.VAULT_LENGTH_SECONDS": {
                "type": "const",
                "value": 100800
            },
            "contracts.settling_game.utils.constants.WONDER_RATE": {
                "type": "const",
                "value": 25
            },
            "contracts.settling_game.utils.constants.WORK_HUT_COST": {
                "type": "const",
                "value": 75
            },
            "contracts.settling_game.utils.constants.WORK_HUT_COST_IN_BP": {
                "type": "const",
                "value": 5
            },
            "contracts.settling_game.utils.constants.WORK_HUT_OUTPUT": {
                "type": "const",
                "value": 50
            },
            "contracts.settling_game.utils.game_structs.Army": {
                "full_name": "contracts.settling_game.utils.game_structs.Army",
                "members": {
                    "Arcanist": {
                        "cairo_type": "contracts.settling_game.utils.game_structs.Battalion",
                        "offset": 10
                    },
                    "Archer": {
                        "cairo_type": "contracts.settling_game.utils.game_structs.Battalion",
                        "offset": 4
                    },
                    "HeavyCavalry": {
                        "cairo_type": "contracts.settling_game.utils.game_structs.Battalion",
                        "offset": 2
                    },
                    "HeavyInfantry": {
                        "cairo_type": "contracts.settling_game.utils.game_structs.Battalion",
                        "offset": 14
                    },
                    "LightCavalry": {
                        "cairo_type": "contracts.settling_game.utils.game_structs.Battalion",
                        "offset": 0
                    },
                    "LightInfantry": {
                        "cairo_type": "contracts.settling_game.utils.game_structs.Battalion",
                        "offset": 12
                    },
                    "Longbow": {
                        "cairo_type": "contracts.settling_game.utils.game_structs.Battalion",
                        "offset": 6
                    },
                    "Mage": {
                        "cairo_type": "contracts.settling_game.utils.game_structs.Battalion",
                        "offset": 8
                    }
                },
                "size": 16,
                "type": "struct"
            },
            "contracts.settling_game.utils.game_structs.ArmyCap": {
                "type": "namespace"
            },
            "contracts.settling_game.utils.game_structs.ArmyCap.ArcherTower": {
                "type": "const",
                "value": 6
            },
            "contracts.settling_game.utils.game_structs.ArmyCap.Args": {
                "full_name": "contracts.settling_game.utils.game_structs.ArmyCap.Args",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "contracts.settling_game.utils.game_structs.ArmyCap.Barracks": {
                "type": "const",
                "value": 6
            },
            "contracts.settling_game.utils.game_structs.ArmyCap.Castle": {
                "type": "const",
                "value": 12
            },
            "contracts.settling_game.utils.game_structs.ArmyCap.Farm": {
                "type": "const",
                "value": 3
            },
            "contracts.settling_game.utils.game_structs.ArmyCap.FishingVillage": {
                "type": "const",
                "value": 3
            },
            "contracts.settling_game.utils.game_structs.ArmyCap.Granary": {
                "type": "const",
                "value": 3
            },
            "contracts.settling_game.utils.game_structs.ArmyCap.House": {
                "type": "const",
                "value": 2
            },
            "contracts.settling_game.utils.game_structs.ArmyCap.ImplicitArgs": {
                "full_name": "contracts.settling_game.utils.game_structs.ArmyCap.ImplicitArgs",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "contracts.settling_game.utils.game_structs.ArmyCap.MageTower": {
                "type": "const",
                "value": 6
            },
            "contracts.settling_game.utils.game_structs.ArmyCap.Return": {
                "cairo_type": "()",
                "type": "type_definition"
            },
            "contracts.settling_game.utils.game_structs.ArmyCap.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "contracts.settling_game.utils.game_structs.ArmyCap.StoreHouse": {
                "type": "const",
                "value": 3
            },
            "contracts.settling_game.utils.game_structs.ArmyData": {
                "full_name": "contracts.settling_game.utils.game_structs.ArmyData",
                "members": {
                    "ArmyPacked": {
                        "cairo_type": "felt",
                        "offset": 0
                    },
                    "CallSign": {
                        "cairo_type": "felt",
                        "offset": 4
                    },
                    "LastAttacked": {
                        "cairo_type": "felt",
                        "offset": 1
                    },
                    "Level": {
                        "cairo_type": "felt",
                        "offset": 3
                    },
                    "XP": {
                        "cairo_type": "felt",
                        "offset": 2
                    }
                },
                "size": 5,
                "type": "struct"
            },
            "contracts.settling_game.utils.game_structs.ArmyStatistics": {
                "full_name": "contracts.settling_game.utils.game_structs.ArmyStatistics",
                "members": {
                    "ArcheryAttack": {
                        "cairo_type": "felt",
                        "offset": 1
                    },
                    "ArcheryDefence": {
                        "cairo_type": "felt",
                        "offset": 5
                    },
                    "CavalryAttack": {
                        "cairo_type": "felt",
                        "offset": 0
                    },
                    "CavalryDefence": {
                        "cairo_type": "felt",
                        "offset": 4
                    },
                    "InfantryAttack": {
                        "cairo_type": "felt",
                        "offset": 3
                    },
                    "InfantryDefence": {
                        "cairo_type": "felt",
                        "offset": 7
                    },
                    "MagicAttack": {
                        "cairo_type": "felt",
                        "offset": 2
                    },
                    "MagicDefence": {
                        "cairo_type": "felt",
                        "offset": 6
                    }
                },
                "size": 8,
                "type": "struct"
            },
            "contracts.settling_game.utils.game_structs.Battalion": {
                "full_name": "contracts.settling_game.utils.game_structs.Battalion",
                "members": {
                    "Health": {
                        "cairo_type": "felt",
                        "offset": 1
                    },
                    "Quantity": {
                        "cairo_type": "felt",
                        "offset": 0
                    }
                },
                "size": 2,
                "type": "struct"
            },
            "contracts.settling_game.utils.game_structs.BuildingsCulture": {
                "type": "namespace"
            },
            "contracts.settling_game.utils.game_structs.BuildingsCulture.ArcherTower": {
                "type": "const",
                "value": 6
            },
            "contracts.settling_game.utils.game_structs.BuildingsCulture.Args": {
                "full_name": "contracts.settling_game.utils.game_structs.BuildingsCulture.Args",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "contracts.settling_game.utils.game_structs.BuildingsCulture.Barracks": {
                "type": "const",
                "value": 6
            },
            "contracts.settling_game.utils.game_structs.BuildingsCulture.Castle": {
                "type": "const",
                "value": 12
            },
            "contracts.settling_game.utils.game_structs.BuildingsCulture.Farm": {
                "type": "const",
                "value": 3
            },
            "contracts.settling_game.utils.game_structs.BuildingsCulture.FishingVillage": {
                "type": "const",
                "value": 3
            },
            "contracts.settling_game.utils.game_structs.BuildingsCulture.Granary": {
                "type": "const",
                "value": 3
            },
            "contracts.settling_game.utils.game_structs.BuildingsCulture.House": {
                "type": "const",
                "value": 2
            },
            "contracts.settling_game.utils.game_structs.BuildingsCulture.ImplicitArgs": {
                "full_name": "contracts.settling_game.utils.game_structs.BuildingsCulture.ImplicitArgs",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "contracts.settling_game.utils.game_structs.BuildingsCulture.MageTower": {
                "type": "const",
                "value": 6
            },
            "contracts.settling_game.utils.game_structs.BuildingsCulture.Return": {
                "cairo_type": "()",
                "type": "type_definition"
            },
            "contracts.settling_game.utils.game_structs.BuildingsCulture.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "contracts.settling_game.utils.game_structs.BuildingsCulture.StoreHouse": {
                "type": "const",
                "value": 3
            },
            "contracts.settling_game.utils.game_structs.BuildingsDecaySlope": {
                "type": "namespace"
            },
            "contracts.settling_game.utils.game_structs.BuildingsDecaySlope.ArcherTower": {
                "type": "const",
                "value": 400
            },
            "contracts.settling_game.utils.game_structs.BuildingsDecaySlope.Args": {
                "full_name": "contracts.settling_game.utils.game_structs.BuildingsDecaySlope.Args",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "contracts.settling_game.utils.game_structs.BuildingsDecaySlope.Barracks": {
                "type": "const",
                "value": 400
            },
            "contracts.settling_game.utils.game_structs.BuildingsDecaySlope.Castle": {
                "type": "const",
                "value": 200
            },
            "contracts.settling_game.utils.game_structs.BuildingsDecaySlope.Farm": {
                "type": "const",
                "value": 400
            },
            "contracts.settling_game.utils.game_structs.BuildingsDecaySlope.FishingVillage": {
                "type": "const",
                "value": 400
            },
            "contracts.settling_game.utils.game_structs.BuildingsDecaySlope.Granary": {
                "type": "const",
                "value": 400
            },
            "contracts.settling_game.utils.game_structs.BuildingsDecaySlope.House": {
                "type": "const",
                "value": 400
            },
            "contracts.settling_game.utils.game_structs.BuildingsDecaySlope.ImplicitArgs": {
                "full_name": "contracts.settling_game.utils.game_structs.BuildingsDecaySlope.ImplicitArgs",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "contracts.settling_game.utils.game_structs.BuildingsDecaySlope.MageTower": {
                "type": "const",
                "value": 400
            },
            "contracts.settling_game.utils.game_structs.BuildingsDecaySlope.Return": {
                "cairo_type": "()",
                "type": "type_definition"
            },
            "contracts.settling_game.utils.game_structs.BuildingsDecaySlope.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "contracts.settling_game.utils.game_structs.BuildingsDecaySlope.StoreHouse": {
                "type": "const",
                "value": 400
            },
            "contracts.settling_game.utils.game_structs.BuildingsFood": {
                "type": "namespace"
            },
            "contracts.settling_game.utils.game_structs.BuildingsFood.ArcherTower": {
                "type": "const",
                "value": 6
            },
            "contracts.settling_game.utils.game_structs.BuildingsFood.Args": {
                "full_name": "contracts.settling_game.utils.game_structs.BuildingsFood.Args",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "contracts.settling_game.utils.game_structs.BuildingsFood.Barracks": {
                "type": "const",
                "value": 6
            },
            "contracts.settling_game.utils.game_structs.BuildingsFood.Castle": {
                "type": "const",
                "value": 12
            },
            "contracts.settling_game.utils.game_structs.BuildingsFood.Farm": {
                "type": "const",
                "value": 3
            },
            "contracts.settling_game.utils.game_structs.BuildingsFood.FishingVillage": {
                "type": "const",
                "value": 3
            },
            "contracts.settling_game.utils.game_structs.BuildingsFood.Granary": {
                "type": "const",
                "value": 3
            },
            "contracts.settling_game.utils.game_structs.BuildingsFood.House": {
                "type": "const",
                "value": 2
            },
            "contracts.settling_game.utils.game_structs.BuildingsFood.ImplicitArgs": {
                "full_name": "contracts.settling_game.utils.game_structs.BuildingsFood.ImplicitArgs",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "contracts.settling_game.utils.game_structs.BuildingsFood.MageTower": {
                "type": "const",
                "value": 6
            },
            "contracts.settling_game.utils.game_structs.BuildingsFood.Return": {
                "cairo_type": "()",
                "type": "type_definition"
            },
            "contracts.settling_game.utils.game_structs.BuildingsFood.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "contracts.settling_game.utils.game_structs.BuildingsFood.StoreHouse": {
                "type": "const",
                "value": 3
            },
            "contracts.settling_game.utils.game_structs.BuildingsIntegrityLength": {
                "type": "namespace"
            },
            "contracts.settling_game.utils.game_structs.BuildingsIntegrityLength.ArcherTower": {
                "type": "const",
                "value": 37319
            },
            "contracts.settling_game.utils.game_structs.BuildingsIntegrityLength.Args": {
                "full_name": "contracts.settling_game.utils.game_structs.BuildingsIntegrityLength.Args",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "contracts.settling_game.utils.game_structs.BuildingsIntegrityLength.Barracks": {
                "type": "const",
                "value": 37319
            },
            "contracts.settling_game.utils.game_structs.BuildingsIntegrityLength.Castle": {
                "type": "const",
                "value": 37319
            },
            "contracts.settling_game.utils.game_structs.BuildingsIntegrityLength.Farm": {
                "type": "const",
                "value": 2000
            },
            "contracts.settling_game.utils.game_structs.BuildingsIntegrityLength.FishingVillage": {
                "type": "const",
                "value": 2000
            },
            "contracts.settling_game.utils.game_structs.BuildingsIntegrityLength.Granary": {
                "type": "const",
                "value": 2000
            },
            "contracts.settling_game.utils.game_structs.BuildingsIntegrityLength.House": {
                "type": "const",
                "value": 3600
            },
            "contracts.settling_game.utils.game_structs.BuildingsIntegrityLength.ImplicitArgs": {
                "full_name": "contracts.settling_game.utils.game_structs.BuildingsIntegrityLength.ImplicitArgs",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "contracts.settling_game.utils.game_structs.BuildingsIntegrityLength.MageTower": {
                "type": "const",
                "value": 37319
            },
            "contracts.settling_game.utils.game_structs.BuildingsIntegrityLength.Return": {
                "cairo_type": "()",
                "type": "type_definition"
            },
            "contracts.settling_game.utils.game_structs.BuildingsIntegrityLength.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "contracts.settling_game.utils.game_structs.BuildingsIntegrityLength.StoreHouse": {
                "type": "const",
                "value": 2000
            },
            "contracts.settling_game.utils.game_structs.BuildingsPopulation": {
                "type": "namespace"
            },
            "contracts.settling_game.utils.game_structs.BuildingsPopulation.ArcherTower": {
                "type": "const",
                "value": 5
            },
            "contracts.settling_game.utils.game_structs.BuildingsPopulation.Args": {
                "full_name": "contracts.settling_game.utils.game_structs.BuildingsPopulation.Args",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "contracts.settling_game.utils.game_structs.BuildingsPopulation.Barracks": {
                "type": "const",
                "value": 5
            },
            "contracts.settling_game.utils.game_structs.BuildingsPopulation.Castle": {
                "type": "const",
                "value": 5
            },
            "contracts.settling_game.utils.game_structs.BuildingsPopulation.Farm": {
                "type": "const",
                "value": 3
            },
            "contracts.settling_game.utils.game_structs.BuildingsPopulation.FishingVillage": {
                "type": "const",
                "value": 3
            },
            "contracts.settling_game.utils.game_structs.BuildingsPopulation.Granary": {
                "type": "const",
                "value": 3
            },
            "contracts.settling_game.utils.game_structs.BuildingsPopulation.House": {
                "type": "const",
                "value": 12
            },
            "contracts.settling_game.utils.game_structs.BuildingsPopulation.ImplicitArgs": {
                "full_name": "contracts.settling_game.utils.game_structs.BuildingsPopulation.ImplicitArgs",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "contracts.settling_game.utils.game_structs.BuildingsPopulation.MageTower": {
                "type": "const",
                "value": 5
            },
            "contracts.settling_game.utils.game_structs.BuildingsPopulation.Return": {
                "cairo_type": "()",
                "type": "type_definition"
            },
            "contracts.settling_game.utils.game_structs.BuildingsPopulation.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "contracts.settling_game.utils.game_structs.BuildingsPopulation.StoreHouse": {
                "type": "const",
                "value": 3
            },
            "contracts.settling_game.utils.game_structs.BuildingsTroopIndustry": {
                "type": "namespace"
            },
            "contracts.settling_game.utils.game_structs.BuildingsTroopIndustry.ArcherTower": {
                "type": "const",
                "value": 2
            },
            "contracts.settling_game.utils.game_structs.BuildingsTroopIndustry.Args": {
                "full_name": "contracts.settling_game.utils.game_structs.BuildingsTroopIndustry.Args",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "contracts.settling_game.utils.game_structs.BuildingsTroopIndustry.Barracks": {
                "type": "const",
                "value": 2
            },
            "contracts.settling_game.utils.game_structs.BuildingsTroopIndustry.Castle": {
                "type": "const",
                "value": 4
            },
            "contracts.settling_game.utils.game_structs.BuildingsTroopIndustry.Farm": {
                "type": "const",
                "value": 0
            },
            "contracts.settling_game.utils.game_structs.BuildingsTroopIndustry.FishingVillage": {
                "type": "const",
                "value": 0
            },
            "contracts.settling_game.utils.game_structs.BuildingsTroopIndustry.Granary": {
                "type": "const",
                "value": 0
            },
            "contracts.settling_game.utils.game_structs.BuildingsTroopIndustry.House": {
                "type": "const",
                "value": 0
            },
            "contracts.settling_game.utils.game_structs.BuildingsTroopIndustry.ImplicitArgs": {
                "full_name": "contracts.settling_game.utils.game_structs.BuildingsTroopIndustry.ImplicitArgs",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "contracts.settling_game.utils.game_structs.BuildingsTroopIndustry.MageTower": {
                "type": "const",
                "value": 2
            },
            "contracts.settling_game.utils.game_structs.BuildingsTroopIndustry.Return": {
                "cairo_type": "()",
                "type": "type_definition"
            },
            "contracts.settling_game.utils.game_structs.BuildingsTroopIndustry.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "contracts.settling_game.utils.game_structs.BuildingsTroopIndustry.StoreHouse": {
                "type": "const",
                "value": 0
            },
            "contracts.settling_game.utils.game_structs.Cost": {
                "full_name": "contracts.settling_game.utils.game_structs.Cost",
                "members": {
                    "bits": {
                        "cairo_type": "felt",
                        "offset": 1
                    },
                    "packed_amounts": {
                        "cairo_type": "felt",
                        "offset": 3
                    },
                    "packed_ids": {
                        "cairo_type": "felt",
                        "offset": 2
                    },
                    "resource_count": {
                        "cairo_type": "felt",
                        "offset": 0
                    }
                },
                "size": 4,
                "type": "struct"
            },
            "contracts.settling_game.utils.game_structs.CryptData": {
                "full_name": "contracts.settling_game.utils.game_structs.CryptData",
                "members": {
                    "affinity": {
                        "cairo_type": "felt",
                        "offset": 6
                    },
                    "environment": {
                        "cairo_type": "felt",
                        "offset": 1
                    },
                    "legendary": {
                        "cairo_type": "felt",
                        "offset": 2
                    },
                    "num_doors": {
                        "cairo_type": "felt",
                        "offset": 4
                    },
                    "num_points": {
                        "cairo_type": "felt",
                        "offset": 5
                    },
                    "resource": {
                        "cairo_type": "felt",
                        "offset": 0
                    },
                    "size": {
                        "cairo_type": "felt",
                        "offset": 3
                    }
                },
                "size": 7,
                "type": "struct"
            },
            "contracts.settling_game.utils.game_structs.EnvironmentIds": {
                "type": "namespace"
            },
            "contracts.settling_game.utils.game_structs.EnvironmentIds.Args": {
                "full_name": "contracts.settling_game.utils.game_structs.EnvironmentIds.Args",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "contracts.settling_game.utils.game_structs.EnvironmentIds.DesertOasis": {
                "type": "const",
                "value": 1
            },
            "contracts.settling_game.utils.game_structs.EnvironmentIds.EmbersGlow": {
                "type": "const",
                "value": 6
            },
            "contracts.settling_game.utils.game_structs.EnvironmentIds.ForestRuins": {
                "type": "const",
                "value": 3
            },
            "contracts.settling_game.utils.game_structs.EnvironmentIds.ImplicitArgs": {
                "full_name": "contracts.settling_game.utils.game_structs.EnvironmentIds.ImplicitArgs",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "contracts.settling_game.utils.game_structs.EnvironmentIds.MountainDeep": {
                "type": "const",
                "value": 4
            },
            "contracts.settling_game.utils.game_structs.EnvironmentIds.Return": {
                "cairo_type": "()",
                "type": "type_definition"
            },
            "contracts.settling_game.utils.game_structs.EnvironmentIds.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "contracts.settling_game.utils.game_structs.EnvironmentIds.StoneTemple": {
                "type": "const",
                "value": 2
            },
            "contracts.settling_game.utils.game_structs.EnvironmentIds.UnderwaterKeep": {
                "type": "const",
                "value": 5
            },
            "contracts.settling_game.utils.game_structs.EnvironmentProduction": {
                "type": "namespace"
            },
            "contracts.settling_game.utils.game_structs.EnvironmentProduction.Args": {
                "full_name": "contracts.settling_game.utils.game_structs.EnvironmentProduction.Args",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "contracts.settling_game.utils.game_structs.EnvironmentProduction.DesertOasis": {
                "type": "const",
                "value": 170
            },
            "contracts.settling_game.utils.game_structs.EnvironmentProduction.EmbersGlow": {
                "type": "const",
                "value": 10
            },
            "contracts.settling_game.utils.game_structs.EnvironmentProduction.ForestRuins": {
                "type": "const",
                "value": 80
            },
            "contracts.settling_game.utils.game_structs.EnvironmentProduction.ImplicitArgs": {
                "full_name": "contracts.settling_game.utils.game_structs.EnvironmentProduction.ImplicitArgs",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "contracts.settling_game.utils.game_structs.EnvironmentProduction.MountainDeep": {
                "type": "const",
                "value": 60
            },
            "contracts.settling_game.utils.game_structs.EnvironmentProduction.Return": {
                "cairo_type": "()",
                "type": "type_definition"
            },
            "contracts.settling_game.utils.game_structs.EnvironmentProduction.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "contracts.settling_game.utils.game_structs.EnvironmentProduction.StoneTemple": {
                "type": "const",
                "value": 90
            },
            "contracts.settling_game.utils.game_structs.EnvironmentProduction.UnderwaterKeep": {
                "type": "const",
                "value": 25
            },
            "contracts.settling_game.utils.game_structs.ExternalContractIds": {
                "type": "namespace"
            },
            "contracts.settling_game.utils.game_structs.ExternalContractIds.Args": {
                "full_name": "contracts.settling_game.utils.game_structs.ExternalContractIds.Args",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "contracts.settling_game.utils.game_structs.ExternalContractIds.Crypts": {
                "type": "const",
                "value": 7
            },
            "contracts.settling_game.utils.game_structs.ExternalContractIds.ImplicitArgs": {
                "full_name": "contracts.settling_game.utils.game_structs.ExternalContractIds.ImplicitArgs",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "contracts.settling_game.utils.game_structs.ExternalContractIds.Lords": {
                "type": "const",
                "value": 1
            },
            "contracts.settling_game.utils.game_structs.ExternalContractIds.Realms": {
                "type": "const",
                "value": 2
            },
            "contracts.settling_game.utils.game_structs.ExternalContractIds.Resources": {
                "type": "const",
                "value": 4
            },
            "contracts.settling_game.utils.game_structs.ExternalContractIds.Return": {
                "cairo_type": "()",
                "type": "type_definition"
            },
            "contracts.settling_game.utils.game_structs.ExternalContractIds.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "contracts.settling_game.utils.game_structs.ExternalContractIds.S_Crypts": {
                "type": "const",
                "value": 8
            },
            "contracts.settling_game.utils.game_structs.ExternalContractIds.S_Realms": {
                "type": "const",
                "value": 3
            },
            "contracts.settling_game.utils.game_structs.ExternalContractIds.Storage": {
                "type": "const",
                "value": 6
            },
            "contracts.settling_game.utils.game_structs.ExternalContractIds.Treasury": {
                "type": "const",
                "value": 5
            },
            "contracts.settling_game.utils.game_structs.FoodBuildings": {
                "full_name": "contracts.settling_game.utils.game_structs.FoodBuildings",
                "members": {
                    "collections_left": {
                        "cairo_type": "felt",
                        "offset": 1
                    },
                    "number_built": {
                        "cairo_type": "felt",
                        "offset": 0
                    },
                    "update_time": {
                        "cairo_type": "felt",
                        "offset": 2
                    }
                },
                "size": 3,
                "type": "struct"
            },
            "contracts.settling_game.utils.game_structs.HarvestType": {
                "type": "namespace"
            },
            "contracts.settling_game.utils.game_structs.HarvestType.Args": {
                "full_name": "contracts.settling_game.utils.game_structs.HarvestType.Args",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "contracts.settling_game.utils.game_structs.HarvestType.Export": {
                "type": "const",
                "value": 1
            },
            "contracts.settling_game.utils.game_structs.HarvestType.ImplicitArgs": {
                "full_name": "contracts.settling_game.utils.game_structs.HarvestType.ImplicitArgs",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "contracts.settling_game.utils.game_structs.HarvestType.Return": {
                "cairo_type": "()",
                "type": "type_definition"
            },
            "contracts.settling_game.utils.game_structs.HarvestType.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "contracts.settling_game.utils.game_structs.HarvestType.Store": {
                "type": "const",
                "value": 2
            },
            "contracts.settling_game.utils.game_structs.ModuleIds": {
                "type": "namespace"
            },
            "contracts.settling_game.utils.game_structs.ModuleIds.Args": {
                "full_name": "contracts.settling_game.utils.game_structs.ModuleIds.Args",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "contracts.settling_game.utils.game_structs.ModuleIds.Buildings": {
                "type": "const",
                "value": 3
            },
            "contracts.settling_game.utils.game_structs.ModuleIds.Calculator": {
                "type": "const",
                "value": 4
            },
            "contracts.settling_game.utils.game_structs.ModuleIds.Crypts_Token": {
                "type": "const",
                "value": 1001
            },
            "contracts.settling_game.utils.game_structs.ModuleIds.GoblinTown": {
                "type": "const",
                "value": 14
            },
            "contracts.settling_game.utils.game_structs.ModuleIds.ImplicitArgs": {
                "full_name": "contracts.settling_game.utils.game_structs.ModuleIds.ImplicitArgs",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "contracts.settling_game.utils.game_structs.ModuleIds.L06_Combat": {
                "type": "const",
                "value": 6
            },
            "contracts.settling_game.utils.game_structs.ModuleIds.L07_Crypts": {
                "type": "const",
                "value": 7
            },
            "contracts.settling_game.utils.game_structs.ModuleIds.L08_Crypts_Resources": {
                "type": "const",
                "value": 8
            },
            "contracts.settling_game.utils.game_structs.ModuleIds.L09_Relics": {
                "type": "const",
                "value": 12
            },
            "contracts.settling_game.utils.game_structs.ModuleIds.L10_Food": {
                "type": "const",
                "value": 13
            },
            "contracts.settling_game.utils.game_structs.ModuleIds.Lords_Token": {
                "type": "const",
                "value": 1002
            },
            "contracts.settling_game.utils.game_structs.ModuleIds.Realms_Token": {
                "type": "const",
                "value": 1003
            },
            "contracts.settling_game.utils.game_structs.ModuleIds.Resources": {
                "type": "const",
                "value": 2
            },
            "contracts.settling_game.utils.game_structs.ModuleIds.Resources_Token": {
                "type": "const",
                "value": 1004
            },
            "contracts.settling_game.utils.game_structs.ModuleIds.Return": {
                "cairo_type": "()",
                "type": "type_definition"
            },
            "contracts.settling_game.utils.game_structs.ModuleIds.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "contracts.settling_game.utils.game_structs.ModuleIds.S_Crypts_Token": {
                "type": "const",
                "value": 1005
            },
            "contracts.settling_game.utils.game_structs.ModuleIds.S_Realms_Token": {
                "type": "const",
                "value": 1006
            },
            "contracts.settling_game.utils.game_structs.ModuleIds.Settling": {
                "type": "const",
                "value": 1
            },
            "contracts.settling_game.utils.game_structs.ModuleIds.Travel": {
                "type": "const",
                "value": 15
            },
            "contracts.settling_game.utils.game_structs.PackedBuildings": {
                "full_name": "contracts.settling_game.utils.game_structs.PackedBuildings",
                "members": {
                    "economic": {
                        "cairo_type": "felt",
                        "offset": 1
                    },
                    "housing": {
                        "cairo_type": "felt",
                        "offset": 2
                    },
                    "military": {
                        "cairo_type": "felt",
                        "offset": 0
                    }
                },
                "size": 3,
                "type": "struct"
            },
            "contracts.settling_game.utils.game_structs.Point": {
                "full_name": "contracts.settling_game.utils.game_structs.Point",
                "members": {
                    "x": {
                        "cairo_type": "felt",
                        "offset": 0
                    },
                    "y": {
                        "cairo_type": "felt",
                        "offset": 1
                    }
                },
                "size": 2,
                "type": "struct"
            },
            "contracts.settling_game.utils.game_structs.RealmBuildings": {
                "full_name": "contracts.settling_game.utils.game_structs.RealmBuildings",
                "members": {
                    "ArcherTower": {
                        "cairo_type": "felt",
                        "offset": 7
                    },
                    "Barracks": {
                        "cairo_type": "felt",
                        "offset": 5
                    },
                    "Castle": {
                        "cairo_type": "felt",
                        "offset": 8
                    },
                    "Farm": {
                        "cairo_type": "felt",
                        "offset": 3
                    },
                    "FishingVillage": {
                        "cairo_type": "felt",
                        "offset": 4
                    },
                    "Granary": {
                        "cairo_type": "felt",
                        "offset": 2
                    },
                    "House": {
                        "cairo_type": "felt",
                        "offset": 0
                    },
                    "MageTower": {
                        "cairo_type": "felt",
                        "offset": 6
                    },
                    "StoreHouse": {
                        "cairo_type": "felt",
                        "offset": 1
                    }
                },
                "size": 9,
                "type": "struct"
            },
            "contracts.settling_game.utils.game_structs.RealmBuildingsIds": {
                "type": "namespace"
            },
            "contracts.settling_game.utils.game_structs.RealmBuildingsIds.ArcherTower": {
                "type": "const",
                "value": 8
            },
            "contracts.settling_game.utils.game_structs.RealmBuildingsIds.Args": {
                "full_name": "contracts.settling_game.utils.game_structs.RealmBuildingsIds.Args",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "contracts.settling_game.utils.game_structs.RealmBuildingsIds.Barracks": {
                "type": "const",
                "value": 6
            },
            "contracts.settling_game.utils.game_structs.RealmBuildingsIds.Castle": {
                "type": "const",
                "value": 9
            },
            "contracts.settling_game.utils.game_structs.RealmBuildingsIds.Farm": {
                "type": "const",
                "value": 4
            },
            "contracts.settling_game.utils.game_structs.RealmBuildingsIds.FishingVillage": {
                "type": "const",
                "value": 5
            },
            "contracts.settling_game.utils.game_structs.RealmBuildingsIds.Granary": {
                "type": "const",
                "value": 3
            },
            "contracts.settling_game.utils.game_structs.RealmBuildingsIds.House": {
                "type": "const",
                "value": 1
            },
            "contracts.settling_game.utils.game_structs.RealmBuildingsIds.ImplicitArgs": {
                "full_name": "contracts.settling_game.utils.game_structs.RealmBuildingsIds.ImplicitArgs",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "contracts.settling_game.utils.game_structs.RealmBuildingsIds.MageTower": {
                "type": "const",
                "value": 7
            },
            "contracts.settling_game.utils.game_structs.RealmBuildingsIds.Return": {
                "cairo_type": "()",
                "type": "type_definition"
            },
            "contracts.settling_game.utils.game_structs.RealmBuildingsIds.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "contracts.settling_game.utils.game_structs.RealmBuildingsIds.StoreHouse": {
                "type": "const",
                "value": 2
            },
            "contracts.settling_game.utils.game_structs.RealmBuildingsSize": {
                "type": "namespace"
            },
            "contracts.settling_game.utils.game_structs.RealmBuildingsSize.ArcherTower": {
                "type": "const",
                "value": 16
            },
            "contracts.settling_game.utils.game_structs.RealmBuildingsSize.Args": {
                "full_name": "contracts.settling_game.utils.game_structs.RealmBuildingsSize.Args",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "contracts.settling_game.utils.game_structs.RealmBuildingsSize.Barracks": {
                "type": "const",
                "value": 16
            },
            "contracts.settling_game.utils.game_structs.RealmBuildingsSize.Castle": {
                "type": "const",
                "value": 16
            },
            "contracts.settling_game.utils.game_structs.RealmBuildingsSize.Farm": {
                "type": "const",
                "value": 3
            },
            "contracts.settling_game.utils.game_structs.RealmBuildingsSize.FishingVillage": {
                "type": "const",
                "value": 3
            },
            "contracts.settling_game.utils.game_structs.RealmBuildingsSize.Granary": {
                "type": "const",
                "value": 3
            },
            "contracts.settling_game.utils.game_structs.RealmBuildingsSize.House": {
                "type": "const",
                "value": 4
            },
            "contracts.settling_game.utils.game_structs.RealmBuildingsSize.ImplicitArgs": {
                "full_name": "contracts.settling_game.utils.game_structs.RealmBuildingsSize.ImplicitArgs",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "contracts.settling_game.utils.game_structs.RealmBuildingsSize.MageTower": {
                "type": "const",
                "value": 16
            },
            "contracts.settling_game.utils.game_structs.RealmBuildingsSize.Return": {
                "cairo_type": "()",
                "type": "type_definition"
            },
            "contracts.settling_game.utils.game_structs.RealmBuildingsSize.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "contracts.settling_game.utils.game_structs.RealmBuildingsSize.StoreHouse": {
                "type": "const",
                "value": 2
            },
            "contracts.settling_game.utils.game_structs.RealmCombatData": {
                "full_name": "contracts.settling_game.utils.game_structs.RealmCombatData",
                "members": {
                    "attacking_squad": {
                        "cairo_type": "felt",
                        "offset": 0
                    },
                    "defending_squad": {
                        "cairo_type": "felt",
                        "offset": 1
                    },
                    "last_attacked_at": {
                        "cairo_type": "felt",
                        "offset": 2
                    }
                },
                "size": 3,
                "type": "struct"
            },
            "contracts.settling_game.utils.game_structs.RealmData": {
                "full_name": "contracts.settling_game.utils.game_structs.RealmData",
                "members": {
                    "cities": {
                        "cairo_type": "felt",
                        "offset": 1
                    },
                    "harbours": {
                        "cairo_type": "felt",
                        "offset": 2
                    },
                    "order": {
                        "cairo_type": "felt",
                        "offset": 13
                    },
                    "regions": {
                        "cairo_type": "felt",
                        "offset": 0
                    },
                    "resource_1": {
                        "cairo_type": "felt",
                        "offset": 5
                    },
                    "resource_2": {
                        "cairo_type": "felt",
                        "offset": 6
                    },
                    "resource_3": {
                        "cairo_type": "felt",
                        "offset": 7
                    },
                    "resource_4": {
                        "cairo_type": "felt",
                        "offset": 8
                    },
                    "resource_5": {
                        "cairo_type": "felt",
                        "offset": 9
                    },
                    "resource_6": {
                        "cairo_type": "felt",
                        "offset": 10
                    },
                    "resource_7": {
                        "cairo_type": "felt",
                        "offset": 11
                    },
                    "resource_number": {
                        "cairo_type": "felt",
                        "offset": 4
                    },
                    "rivers": {
                        "cairo_type": "felt",
                        "offset": 3
                    },
                    "wonder": {
                        "cairo_type": "felt",
                        "offset": 12
                    }
                },
                "size": 14,
                "type": "struct"
            },
            "contracts.settling_game.utils.game_structs.ResourceIds": {
                "type": "namespace"
            },
            "contracts.settling_game.utils.game_structs.ResourceIds.Adamantine": {
                "type": "const",
                "value": 20
            },
            "contracts.settling_game.utils.game_structs.ResourceIds.AlchemicalSilver": {
                "type": "const",
                "value": 19
            },
            "contracts.settling_game.utils.game_structs.ResourceIds.Args": {
                "full_name": "contracts.settling_game.utils.game_structs.ResourceIds.Args",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "contracts.settling_game.utils.game_structs.ResourceIds.Coal": {
                "type": "const",
                "value": 3
            },
            "contracts.settling_game.utils.game_structs.ResourceIds.ColdIron": {
                "type": "const",
                "value": 8
            },
            "contracts.settling_game.utils.game_structs.ResourceIds.Copper": {
                "type": "const",
                "value": 4
            },
            "contracts.settling_game.utils.game_structs.ResourceIds.CuriousSpore": {
                "type": "const",
                "value": 25
            },
            "contracts.settling_game.utils.game_structs.ResourceIds.DeepCrystal": {
                "type": "const",
                "value": 14
            },
            "contracts.settling_game.utils.game_structs.ResourceIds.Demonhide": {
                "type": "const",
                "value": 28
            },
            "contracts.settling_game.utils.game_structs.ResourceIds.DesertGlass": {
                "type": "const",
                "value": 23
            },
            "contracts.settling_game.utils.game_structs.ResourceIds.Diamonds": {
                "type": "const",
                "value": 11
            },
            "contracts.settling_game.utils.game_structs.ResourceIds.DivineCloth": {
                "type": "const",
                "value": 24
            },
            "contracts.settling_game.utils.game_structs.ResourceIds.Dragonhide": {
                "type": "const",
                "value": 22
            },
            "contracts.settling_game.utils.game_structs.ResourceIds.EtherealSilica": {
                "type": "const",
                "value": 16
            },
            "contracts.settling_game.utils.game_structs.ResourceIds.Gold": {
                "type": "const",
                "value": 9
            },
            "contracts.settling_game.utils.game_structs.ResourceIds.Hartwood": {
                "type": "const",
                "value": 10
            },
            "contracts.settling_game.utils.game_structs.ResourceIds.Ignium": {
                "type": "const",
                "value": 15
            },
            "contracts.settling_game.utils.game_structs.ResourceIds.ImplicitArgs": {
                "full_name": "contracts.settling_game.utils.game_structs.ResourceIds.ImplicitArgs",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "contracts.settling_game.utils.game_structs.ResourceIds.Ironwood": {
                "type": "const",
                "value": 7
            },
            "contracts.settling_game.utils.game_structs.ResourceIds.Mithral": {
                "type": "const",
                "value": 21
            },
            "contracts.settling_game.utils.game_structs.ResourceIds.Obsidian": {
                "type": "const",
                "value": 5
            },
            "contracts.settling_game.utils.game_structs.ResourceIds.Return": {
                "cairo_type": "()",
                "type": "type_definition"
            },
            "contracts.settling_game.utils.game_structs.ResourceIds.Ruby": {
                "type": "const",
                "value": 13
            },
            "contracts.settling_game.utils.game_structs.ResourceIds.SIZE": {
                "type": "const",
                "value": 31
            },
            "contracts.settling_game.utils.game_structs.ResourceIds.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "contracts.settling_game.utils.game_structs.ResourceIds.Sapphire": {
                "type": "const",
                "value": 12
            },
            "contracts.settling_game.utils.game_structs.ResourceIds.Silver": {
                "type": "const",
                "value": 6
            },
            "contracts.settling_game.utils.game_structs.ResourceIds.Stone": {
                "type": "const",
                "value": 2
            },
            "contracts.settling_game.utils.game_structs.ResourceIds.SunkenShekel": {
                "type": "const",
                "value": 27
            },
            "contracts.settling_game.utils.game_structs.ResourceIds.TrueIce": {
                "type": "const",
                "value": 17
            },
            "contracts.settling_game.utils.game_structs.ResourceIds.TwilightQuartz": {
                "type": "const",
                "value": 18
            },
            "contracts.settling_game.utils.game_structs.ResourceIds.UnrefinedOre": {
                "type": "const",
                "value": 26
            },
            "contracts.settling_game.utils.game_structs.ResourceIds.Wood": {
                "type": "const",
                "value": 1
            },
            "contracts.settling_game.utils.game_structs.ResourceIds.fish": {
                "type": "const",
                "value": 10001
            },
            "contracts.settling_game.utils.game_structs.ResourceIds.wheat": {
                "type": "const",
                "value": 10000
            },
            "contracts.settling_game.utils.game_structs.ResourceOutput": {
                "full_name": "contracts.settling_game.utils.game_structs.ResourceOutput",
                "members": {
                    "resource_1": {
                        "cairo_type": "felt",
                        "offset": 0
                    },
                    "resource_2": {
                        "cairo_type": "felt",
                        "offset": 1
                    },
                    "resource_3": {
                        "cairo_type": "felt",
                        "offset": 2
                    },
                    "resource_4": {
                        "cairo_type": "felt",
                        "offset": 3
                    },
                    "resource_5": {
                        "cairo_type": "felt",
                        "offset": 4
                    },
                    "resource_6": {
                        "cairo_type": "felt",
                        "offset": 5
                    },
                    "resource_7": {
                        "cairo_type": "felt",
                        "offset": 6
                    }
                },
                "size": 7,
                "type": "struct"
            },
            "contracts.settling_game.utils.game_structs.Squad": {
                "full_name": "contracts.settling_game.utils.game_structs.Squad",
                "members": {
                    "t1_1": {
                        "cairo_type": "contracts.settling_game.utils.game_structs.Troop",
                        "offset": 0
                    },
                    "t1_2": {
                        "cairo_type": "contracts.settling_game.utils.game_structs.Troop",
                        "offset": 9
                    },
                    "t1_3": {
                        "cairo_type": "contracts.settling_game.utils.game_structs.Troop",
                        "offset": 18
                    },
                    "t1_4": {
                        "cairo_type": "contracts.settling_game.utils.game_structs.Troop",
                        "offset": 27
                    },
                    "t1_5": {
                        "cairo_type": "contracts.settling_game.utils.game_structs.Troop",
                        "offset": 36
                    },
                    "t1_6": {
                        "cairo_type": "contracts.settling_game.utils.game_structs.Troop",
                        "offset": 45
                    },
                    "t1_7": {
                        "cairo_type": "contracts.settling_game.utils.game_structs.Troop",
                        "offset": 54
                    },
                    "t1_8": {
                        "cairo_type": "contracts.settling_game.utils.game_structs.Troop",
                        "offset": 63
                    },
                    "t1_9": {
                        "cairo_type": "contracts.settling_game.utils.game_structs.Troop",
                        "offset": 72
                    },
                    "t2_1": {
                        "cairo_type": "contracts.settling_game.utils.game_structs.Troop",
                        "offset": 81
                    },
                    "t2_2": {
                        "cairo_type": "contracts.settling_game.utils.game_structs.Troop",
                        "offset": 90
                    },
                    "t2_3": {
                        "cairo_type": "contracts.settling_game.utils.game_structs.Troop",
                        "offset": 99
                    },
                    "t2_4": {
                        "cairo_type": "contracts.settling_game.utils.game_structs.Troop",
                        "offset": 108
                    },
                    "t2_5": {
                        "cairo_type": "contracts.settling_game.utils.game_structs.Troop",
                        "offset": 117
                    },
                    "t3_1": {
                        "cairo_type": "contracts.settling_game.utils.game_structs.Troop",
                        "offset": 126
                    }
                },
                "size": 135,
                "type": "struct"
            },
            "contracts.settling_game.utils.game_structs.SquadStats": {
                "full_name": "contracts.settling_game.utils.game_structs.SquadStats",
                "members": {
                    "agility": {
                        "cairo_type": "felt",
                        "offset": 0
                    },
                    "armor": {
                        "cairo_type": "felt",
                        "offset": 2
                    },
                    "attack": {
                        "cairo_type": "felt",
                        "offset": 1
                    },
                    "vitality": {
                        "cairo_type": "felt",
                        "offset": 3
                    },
                    "wisdom": {
                        "cairo_type": "felt",
                        "offset": 4
                    }
                },
                "size": 5,
                "type": "struct"
            },
            "contracts.settling_game.utils.game_structs.TraitsIds": {
                "type": "namespace"
            },
            "contracts.settling_game.utils.game_structs.TraitsIds.Args": {
                "full_name": "contracts.settling_game.utils.game_structs.TraitsIds.Args",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "contracts.settling_game.utils.game_structs.TraitsIds.City": {
                "type": "const",
                "value": 2
            },
            "contracts.settling_game.utils.game_structs.TraitsIds.Harbour": {
                "type": "const",
                "value": 3
            },
            "contracts.settling_game.utils.game_structs.TraitsIds.ImplicitArgs": {
                "full_name": "contracts.settling_game.utils.game_structs.TraitsIds.ImplicitArgs",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "contracts.settling_game.utils.game_structs.TraitsIds.Region": {
                "type": "const",
                "value": 1
            },
            "contracts.settling_game.utils.game_structs.TraitsIds.Return": {
                "cairo_type": "()",
                "type": "type_definition"
            },
            "contracts.settling_game.utils.game_structs.TraitsIds.River": {
                "type": "const",
                "value": 4
            },
            "contracts.settling_game.utils.game_structs.TraitsIds.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "contracts.settling_game.utils.game_structs.TravelInformation": {
                "full_name": "contracts.settling_game.utils.game_structs.TravelInformation",
                "members": {
                    "destination_asset_id": {
                        "cairo_type": "felt",
                        "offset": 0
                    },
                    "destination_nested_asset_id": {
                        "cairo_type": "felt",
                        "offset": 3
                    },
                    "destination_token_id": {
                        "cairo_type": "starkware.cairo.common.uint256.Uint256",
                        "offset": 1
                    },
                    "travel_time": {
                        "cairo_type": "felt",
                        "offset": 4
                    }
                },
                "size": 5,
                "type": "struct"
            },
            "contracts.settling_game.utils.game_structs.Troop": {
                "full_name": "contracts.settling_game.utils.game_structs.Troop",
                "members": {
                    "agility": {
                        "cairo_type": "felt",
                        "offset": 4
                    },
                    "armor": {
                        "cairo_type": "felt",
                        "offset": 6
                    },
                    "attack": {
                        "cairo_type": "felt",
                        "offset": 5
                    },
                    "building": {
                        "cairo_type": "felt",
                        "offset": 3
                    },
                    "id": {
                        "cairo_type": "felt",
                        "offset": 0
                    },
                    "tier": {
                        "cairo_type": "felt",
                        "offset": 2
                    },
                    "type": {
                        "cairo_type": "felt",
                        "offset": 1
                    },
                    "vitality": {
                        "cairo_type": "felt",
                        "offset": 7
                    },
                    "wisdom": {
                        "cairo_type": "felt",
                        "offset": 8
                    }
                },
                "size": 9,
                "type": "struct"
            },
            "contracts.settling_game.utils.game_structs.TroopId": {
                "type": "namespace"
            },
            "contracts.settling_game.utils.game_structs.TroopId.Apprentice": {
                "type": "const",
                "value": 10
            },
            "contracts.settling_game.utils.game_structs.TroopId.Arcanist": {
                "type": "const",
                "value": 12
            },
            "contracts.settling_game.utils.game_structs.TroopId.Args": {
                "full_name": "contracts.settling_game.utils.game_structs.TroopId.Args",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "contracts.settling_game.utils.game_structs.TroopId.Ballista": {
                "type": "const",
                "value": 7
            },
            "contracts.settling_game.utils.game_structs.TroopId.Crossbow": {
                "type": "const",
                "value": 3
            },
            "contracts.settling_game.utils.game_structs.TroopId.Goblin": {
                "type": "const",
                "value": 13
            },
            "contracts.settling_game.utils.game_structs.TroopId.ImplicitArgs": {
                "full_name": "contracts.settling_game.utils.game_structs.TroopId.ImplicitArgs",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "contracts.settling_game.utils.game_structs.TroopId.Knight": {
                "type": "const",
                "value": 5
            },
            "contracts.settling_game.utils.game_structs.TroopId.Longbow": {
                "type": "const",
                "value": 2
            },
            "contracts.settling_game.utils.game_structs.TroopId.Mage": {
                "type": "const",
                "value": 11
            },
            "contracts.settling_game.utils.game_structs.TroopId.Mangonel": {
                "type": "const",
                "value": 8
            },
            "contracts.settling_game.utils.game_structs.TroopId.Paladin": {
                "type": "const",
                "value": 6
            },
            "contracts.settling_game.utils.game_structs.TroopId.Pikeman": {
                "type": "const",
                "value": 4
            },
            "contracts.settling_game.utils.game_structs.TroopId.Return": {
                "cairo_type": "()",
                "type": "type_definition"
            },
            "contracts.settling_game.utils.game_structs.TroopId.SIZE": {
                "type": "const",
                "value": 14
            },
            "contracts.settling_game.utils.game_structs.TroopId.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "contracts.settling_game.utils.game_structs.TroopId.Skirmisher": {
                "type": "const",
                "value": 1
            },
            "contracts.settling_game.utils.game_structs.TroopId.Trebuchet": {
                "type": "const",
                "value": 9
            },
            "contracts.settling_game.utils.game_structs.TroopProps": {
                "type": "namespace"
            },
            "contracts.settling_game.utils.game_structs.TroopProps.Agility": {
                "type": "namespace"
            },
            "contracts.settling_game.utils.game_structs.TroopProps.Agility.Apprentice": {
                "type": "const",
                "value": 6
            },
            "contracts.settling_game.utils.game_structs.TroopProps.Agility.Arcanist": {
                "type": "const",
                "value": 10
            },
            "contracts.settling_game.utils.game_structs.TroopProps.Agility.Args": {
                "full_name": "contracts.settling_game.utils.game_structs.TroopProps.Agility.Args",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "contracts.settling_game.utils.game_structs.TroopProps.Agility.Ballista": {
                "type": "const",
                "value": 5
            },
            "contracts.settling_game.utils.game_structs.TroopProps.Agility.Crossbow": {
                "type": "const",
                "value": 12
            },
            "contracts.settling_game.utils.game_structs.TroopProps.Agility.Goblin": {
                "type": "const",
                "value": 3
            },
            "contracts.settling_game.utils.game_structs.TroopProps.Agility.ImplicitArgs": {
                "full_name": "contracts.settling_game.utils.game_structs.TroopProps.Agility.ImplicitArgs",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "contracts.settling_game.utils.game_structs.TroopProps.Agility.Knight": {
                "type": "const",
                "value": 3
            },
            "contracts.settling_game.utils.game_structs.TroopProps.Agility.Longbow": {
                "type": "const",
                "value": 10
            },
            "contracts.settling_game.utils.game_structs.TroopProps.Agility.Mage": {
                "type": "const",
                "value": 8
            },
            "contracts.settling_game.utils.game_structs.TroopProps.Agility.Mangonel": {
                "type": "const",
                "value": 3
            },
            "contracts.settling_game.utils.game_structs.TroopProps.Agility.Paladin": {
                "type": "const",
                "value": 4
            },
            "contracts.settling_game.utils.game_structs.TroopProps.Agility.Pikeman": {
                "type": "const",
                "value": 2
            },
            "contracts.settling_game.utils.game_structs.TroopProps.Agility.Return": {
                "cairo_type": "()",
                "type": "type_definition"
            },
            "contracts.settling_game.utils.game_structs.TroopProps.Agility.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "contracts.settling_game.utils.game_structs.TroopProps.Agility.Skirmisher": {
                "type": "const",
                "value": 8
            },
            "contracts.settling_game.utils.game_structs.TroopProps.Agility.Trebuchet": {
                "type": "const",
                "value": 4
            },
            "contracts.settling_game.utils.game_structs.TroopProps.Args": {
                "full_name": "contracts.settling_game.utils.game_structs.TroopProps.Args",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "contracts.settling_game.utils.game_structs.TroopProps.Armor": {
                "type": "namespace"
            },
            "contracts.settling_game.utils.game_structs.TroopProps.Armor.Apprentice": {
                "type": "const",
                "value": 2
            },
            "contracts.settling_game.utils.game_structs.TroopProps.Armor.Arcanist": {
                "type": "const",
                "value": 4
            },
            "contracts.settling_game.utils.game_structs.TroopProps.Armor.Args": {
                "full_name": "contracts.settling_game.utils.game_structs.TroopProps.Armor.Args",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "contracts.settling_game.utils.game_structs.TroopProps.Armor.Ballista": {
                "type": "const",
                "value": 2
            },
            "contracts.settling_game.utils.game_structs.TroopProps.Armor.Crossbow": {
                "type": "const",
                "value": 4
            },
            "contracts.settling_game.utils.game_structs.TroopProps.Armor.Goblin": {
                "type": "const",
                "value": 2
            },
            "contracts.settling_game.utils.game_structs.TroopProps.Armor.ImplicitArgs": {
                "full_name": "contracts.settling_game.utils.game_structs.TroopProps.Armor.ImplicitArgs",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "contracts.settling_game.utils.game_structs.TroopProps.Armor.Knight": {
                "type": "const",
                "value": 6
            },
            "contracts.settling_game.utils.game_structs.TroopProps.Armor.Longbow": {
                "type": "const",
                "value": 3
            },
            "contracts.settling_game.utils.game_structs.TroopProps.Armor.Mage": {
                "type": "const",
                "value": 3
            },
            "contracts.settling_game.utils.game_structs.TroopProps.Armor.Mangonel": {
                "type": "const",
                "value": 3
            },
            "contracts.settling_game.utils.game_structs.TroopProps.Armor.Paladin": {
                "type": "const",
                "value": 8
            },
            "contracts.settling_game.utils.game_structs.TroopProps.Armor.Pikeman": {
                "type": "const",
                "value": 4
            },
            "contracts.settling_game.utils.game_structs.TroopProps.Armor.Return": {
                "cairo_type": "()",
                "type": "type_definition"
            },
            "contracts.settling_game.utils.game_structs.TroopProps.Armor.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "contracts.settling_game.utils.game_structs.TroopProps.Armor.Skirmisher": {
                "type": "const",
                "value": 2
            },
            "contracts.settling_game.utils.game_structs.TroopProps.Armor.Trebuchet": {
                "type": "const",
                "value": 4
            },
            "contracts.settling_game.utils.game_structs.TroopProps.Attack": {
                "type": "namespace"
            },
            "contracts.settling_game.utils.game_structs.TroopProps.Attack.Apprentice": {
                "type": "const",
                "value": 6
            },
            "contracts.settling_game.utils.game_structs.TroopProps.Attack.Arcanist": {
                "type": "const",
                "value": 10
            },
            "contracts.settling_game.utils.game_structs.TroopProps.Attack.Args": {
                "full_name": "contracts.settling_game.utils.game_structs.TroopProps.Attack.Args",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "contracts.settling_game.utils.game_structs.TroopProps.Attack.Ballista": {
                "type": "const",
                "value": 8
            },
            "contracts.settling_game.utils.game_structs.TroopProps.Attack.Crossbow": {
                "type": "const",
                "value": 10
            },
            "contracts.settling_game.utils.game_structs.TroopProps.Attack.Goblin": {
                "type": "const",
                "value": 8
            },
            "contracts.settling_game.utils.game_structs.TroopProps.Attack.ImplicitArgs": {
                "full_name": "contracts.settling_game.utils.game_structs.TroopProps.Attack.ImplicitArgs",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "contracts.settling_game.utils.game_structs.TroopProps.Attack.Knight": {
                "type": "const",
                "value": 8
            },
            "contracts.settling_game.utils.game_structs.TroopProps.Attack.Longbow": {
                "type": "const",
                "value": 8
            },
            "contracts.settling_game.utils.game_structs.TroopProps.Attack.Mage": {
                "type": "const",
                "value": 8
            },
            "contracts.settling_game.utils.game_structs.TroopProps.Attack.Mangonel": {
                "type": "const",
                "value": 10
            },
            "contracts.settling_game.utils.game_structs.TroopProps.Attack.Paladin": {
                "type": "const",
                "value": 10
            },
            "contracts.settling_game.utils.game_structs.TroopProps.Attack.Pikeman": {
                "type": "const",
                "value": 6
            },
            "contracts.settling_game.utils.game_structs.TroopProps.Attack.Return": {
                "cairo_type": "()",
                "type": "type_definition"
            },
            "contracts.settling_game.utils.game_structs.TroopProps.Attack.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "contracts.settling_game.utils.game_structs.TroopProps.Attack.Skirmisher": {
                "type": "const",
                "value": 6
            },
            "contracts.settling_game.utils.game_structs.TroopProps.Attack.Trebuchet": {
                "type": "const",
                "value": 12
            },
            "contracts.settling_game.utils.game_structs.TroopProps.Building": {
                "type": "namespace"
            },
            "contracts.settling_game.utils.game_structs.TroopProps.Building.Apprentice": {
                "type": "const",
                "value": 7
            },
            "contracts.settling_game.utils.game_structs.TroopProps.Building.Arcanist": {
                "type": "const",
                "value": 7
            },
            "contracts.settling_game.utils.game_structs.TroopProps.Building.Args": {
                "full_name": "contracts.settling_game.utils.game_structs.TroopProps.Building.Args",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "contracts.settling_game.utils.game_structs.TroopProps.Building.Ballista": {
                "type": "const",
                "value": 9
            },
            "contracts.settling_game.utils.game_structs.TroopProps.Building.Crossbow": {
                "type": "const",
                "value": 8
            },
            "contracts.settling_game.utils.game_structs.TroopProps.Building.Goblin": {
                "type": "const",
                "value": 0
            },
            "contracts.settling_game.utils.game_structs.TroopProps.Building.ImplicitArgs": {
                "full_name": "contracts.settling_game.utils.game_structs.TroopProps.Building.ImplicitArgs",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "contracts.settling_game.utils.game_structs.TroopProps.Building.Knight": {
                "type": "const",
                "value": 6
            },
            "contracts.settling_game.utils.game_structs.TroopProps.Building.Longbow": {
                "type": "const",
                "value": 8
            },
            "contracts.settling_game.utils.game_structs.TroopProps.Building.Mage": {
                "type": "const",
                "value": 7
            },
            "contracts.settling_game.utils.game_structs.TroopProps.Building.Mangonel": {
                "type": "const",
                "value": 9
            },
            "contracts.settling_game.utils.game_structs.TroopProps.Building.Paladin": {
                "type": "const",
                "value": 6
            },
            "contracts.settling_game.utils.game_structs.TroopProps.Building.Pikeman": {
                "type": "const",
                "value": 6
            },
            "contracts.settling_game.utils.game_structs.TroopProps.Building.Return": {
                "cairo_type": "()",
                "type": "type_definition"
            },
            "contracts.settling_game.utils.game_structs.TroopProps.Building.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "contracts.settling_game.utils.game_structs.TroopProps.Building.Skirmisher": {
                "type": "const",
                "value": 8
            },
            "contracts.settling_game.utils.game_structs.TroopProps.Building.Trebuchet": {
                "type": "const",
                "value": 9
            },
            "contracts.settling_game.utils.game_structs.TroopProps.ImplicitArgs": {
                "full_name": "contracts.settling_game.utils.game_structs.TroopProps.ImplicitArgs",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "contracts.settling_game.utils.game_structs.TroopProps.Return": {
                "cairo_type": "()",
                "type": "type_definition"
            },
            "contracts.settling_game.utils.game_structs.TroopProps.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "contracts.settling_game.utils.game_structs.TroopProps.Tier": {
                "type": "namespace"
            },
            "contracts.settling_game.utils.game_structs.TroopProps.Tier.Apprentice": {
                "type": "const",
                "value": 1
            },
            "contracts.settling_game.utils.game_structs.TroopProps.Tier.Arcanist": {
                "type": "const",
                "value": 3
            },
            "contracts.settling_game.utils.game_structs.TroopProps.Tier.Args": {
                "full_name": "contracts.settling_game.utils.game_structs.TroopProps.Tier.Args",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "contracts.settling_game.utils.game_structs.TroopProps.Tier.Ballista": {
                "type": "const",
                "value": 1
            },
            "contracts.settling_game.utils.game_structs.TroopProps.Tier.Crossbow": {
                "type": "const",
                "value": 3
            },
            "contracts.settling_game.utils.game_structs.TroopProps.Tier.Goblin": {
                "type": "const",
                "value": 1
            },
            "contracts.settling_game.utils.game_structs.TroopProps.Tier.ImplicitArgs": {
                "full_name": "contracts.settling_game.utils.game_structs.TroopProps.Tier.ImplicitArgs",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "contracts.settling_game.utils.game_structs.TroopProps.Tier.Knight": {
                "type": "const",
                "value": 2
            },
            "contracts.settling_game.utils.game_structs.TroopProps.Tier.Longbow": {
                "type": "const",
                "value": 2
            },
            "contracts.settling_game.utils.game_structs.TroopProps.Tier.Mage": {
                "type": "const",
                "value": 2
            },
            "contracts.settling_game.utils.game_structs.TroopProps.Tier.Mangonel": {
                "type": "const",
                "value": 2
            },
            "contracts.settling_game.utils.game_structs.TroopProps.Tier.Paladin": {
                "type": "const",
                "value": 3
            },
            "contracts.settling_game.utils.game_structs.TroopProps.Tier.Pikeman": {
                "type": "const",
                "value": 1
            },
            "contracts.settling_game.utils.game_structs.TroopProps.Tier.Return": {
                "cairo_type": "()",
                "type": "type_definition"
            },
            "contracts.settling_game.utils.game_structs.TroopProps.Tier.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "contracts.settling_game.utils.game_structs.TroopProps.Tier.Skirmisher": {
                "type": "const",
                "value": 1
            },
            "contracts.settling_game.utils.game_structs.TroopProps.Tier.Trebuchet": {
                "type": "const",
                "value": 3
            },
            "contracts.settling_game.utils.game_structs.TroopProps.Type": {
                "type": "namespace"
            },
            "contracts.settling_game.utils.game_structs.TroopProps.Type.Apprentice": {
                "type": "const",
                "value": 2
            },
            "contracts.settling_game.utils.game_structs.TroopProps.Type.Arcanist": {
                "type": "const",
                "value": 2
            },
            "contracts.settling_game.utils.game_structs.TroopProps.Type.Args": {
                "full_name": "contracts.settling_game.utils.game_structs.TroopProps.Type.Args",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "contracts.settling_game.utils.game_structs.TroopProps.Type.Ballista": {
                "type": "const",
                "value": 4
            },
            "contracts.settling_game.utils.game_structs.TroopProps.Type.Crossbow": {
                "type": "const",
                "value": 1
            },
            "contracts.settling_game.utils.game_structs.TroopProps.Type.Goblin": {
                "type": "const",
                "value": 3
            },
            "contracts.settling_game.utils.game_structs.TroopProps.Type.ImplicitArgs": {
                "full_name": "contracts.settling_game.utils.game_structs.TroopProps.Type.ImplicitArgs",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "contracts.settling_game.utils.game_structs.TroopProps.Type.Knight": {
                "type": "const",
                "value": 3
            },
            "contracts.settling_game.utils.game_structs.TroopProps.Type.Longbow": {
                "type": "const",
                "value": 1
            },
            "contracts.settling_game.utils.game_structs.TroopProps.Type.Mage": {
                "type": "const",
                "value": 2
            },
            "contracts.settling_game.utils.game_structs.TroopProps.Type.Mangonel": {
                "type": "const",
                "value": 4
            },
            "contracts.settling_game.utils.game_structs.TroopProps.Type.Paladin": {
                "type": "const",
                "value": 3
            },
            "contracts.settling_game.utils.game_structs.TroopProps.Type.Pikeman": {
                "type": "const",
                "value": 3
            },
            "contracts.settling_game.utils.game_structs.TroopProps.Type.Return": {
                "cairo_type": "()",
                "type": "type_definition"
            },
            "contracts.settling_game.utils.game_structs.TroopProps.Type.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "contracts.settling_game.utils.game_structs.TroopProps.Type.Skirmisher": {
                "type": "const",
                "value": 1
            },
            "contracts.settling_game.utils.game_structs.TroopProps.Type.Trebuchet": {
                "type": "const",
                "value": 4
            },
            "contracts.settling_game.utils.game_structs.TroopProps.Vitality": {
                "type": "namespace"
            },
            "contracts.settling_game.utils.game_structs.TroopProps.Vitality.Apprentice": {
                "type": "const",
                "value": 40
            },
            "contracts.settling_game.utils.game_structs.TroopProps.Vitality.Arcanist": {
                "type": "const",
                "value": 80
            },
            "contracts.settling_game.utils.game_structs.TroopProps.Vitality.Args": {
                "full_name": "contracts.settling_game.utils.game_structs.TroopProps.Vitality.Args",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "contracts.settling_game.utils.game_structs.TroopProps.Vitality.Ballista": {
                "type": "const",
                "value": 30
            },
            "contracts.settling_game.utils.game_structs.TroopProps.Vitality.Crossbow": {
                "type": "const",
                "value": 60
            },
            "contracts.settling_game.utils.game_structs.TroopProps.Vitality.Goblin": {
                "type": "const",
                "value": 20
            },
            "contracts.settling_game.utils.game_structs.TroopProps.Vitality.ImplicitArgs": {
                "full_name": "contracts.settling_game.utils.game_structs.TroopProps.Vitality.ImplicitArgs",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "contracts.settling_game.utils.game_structs.TroopProps.Vitality.Knight": {
                "type": "const",
                "value": 60
            },
            "contracts.settling_game.utils.game_structs.TroopProps.Vitality.Longbow": {
                "type": "const",
                "value": 40
            },
            "contracts.settling_game.utils.game_structs.TroopProps.Vitality.Mage": {
                "type": "const",
                "value": 50
            },
            "contracts.settling_game.utils.game_structs.TroopProps.Vitality.Mangonel": {
                "type": "const",
                "value": 50
            },
            "contracts.settling_game.utils.game_structs.TroopProps.Vitality.Paladin": {
                "type": "const",
                "value": 80
            },
            "contracts.settling_game.utils.game_structs.TroopProps.Vitality.Pikeman": {
                "type": "const",
                "value": 30
            },
            "contracts.settling_game.utils.game_structs.TroopProps.Vitality.Return": {
                "cairo_type": "()",
                "type": "type_definition"
            },
            "contracts.settling_game.utils.game_structs.TroopProps.Vitality.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "contracts.settling_game.utils.game_structs.TroopProps.Vitality.Skirmisher": {
                "type": "const",
                "value": 30
            },
            "contracts.settling_game.utils.game_structs.TroopProps.Vitality.Trebuchet": {
                "type": "const",
                "value": 70
            },
            "contracts.settling_game.utils.game_structs.TroopProps.Wisdom": {
                "type": "namespace"
            },
            "contracts.settling_game.utils.game_structs.TroopProps.Wisdom.Apprentice": {
                "type": "const",
                "value": 6
            },
            "contracts.settling_game.utils.game_structs.TroopProps.Wisdom.Arcanist": {
                "type": "const",
                "value": 10
            },
            "contracts.settling_game.utils.game_structs.TroopProps.Wisdom.Args": {
                "full_name": "contracts.settling_game.utils.game_structs.TroopProps.Wisdom.Args",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "contracts.settling_game.utils.game_structs.TroopProps.Wisdom.Ballista": {
                "type": "const",
                "value": 2
            },
            "contracts.settling_game.utils.game_structs.TroopProps.Wisdom.Crossbow": {
                "type": "const",
                "value": 4
            },
            "contracts.settling_game.utils.game_structs.TroopProps.Wisdom.Goblin": {
                "type": "const",
                "value": 1
            },
            "contracts.settling_game.utils.game_structs.TroopProps.Wisdom.ImplicitArgs": {
                "full_name": "contracts.settling_game.utils.game_structs.TroopProps.Wisdom.ImplicitArgs",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "contracts.settling_game.utils.game_structs.TroopProps.Wisdom.Knight": {
                "type": "const",
                "value": 6
            },
            "contracts.settling_game.utils.game_structs.TroopProps.Wisdom.Longbow": {
                "type": "const",
                "value": 4
            },
            "contracts.settling_game.utils.game_structs.TroopProps.Wisdom.Mage": {
                "type": "const",
                "value": 8
            },
            "contracts.settling_game.utils.game_structs.TroopProps.Wisdom.Mangonel": {
                "type": "const",
                "value": 3
            },
            "contracts.settling_game.utils.game_structs.TroopProps.Wisdom.Paladin": {
                "type": "const",
                "value": 8
            },
            "contracts.settling_game.utils.game_structs.TroopProps.Wisdom.Pikeman": {
                "type": "const",
                "value": 4
            },
            "contracts.settling_game.utils.game_structs.TroopProps.Wisdom.Return": {
                "cairo_type": "()",
                "type": "type_definition"
            },
            "contracts.settling_game.utils.game_structs.TroopProps.Wisdom.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "contracts.settling_game.utils.game_structs.TroopProps.Wisdom.Skirmisher": {
                "type": "const",
                "value": 3
            },
            "contracts.settling_game.utils.game_structs.TroopProps.Wisdom.Trebuchet": {
                "type": "const",
                "value": 4
            },
            "contracts.settling_game.utils.game_structs.TroopType": {
                "type": "namespace"
            },
            "contracts.settling_game.utils.game_structs.TroopType.Args": {
                "full_name": "contracts.settling_game.utils.game_structs.TroopType.Args",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "contracts.settling_game.utils.game_structs.TroopType.ImplicitArgs": {
                "full_name": "contracts.settling_game.utils.game_structs.TroopType.ImplicitArgs",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "contracts.settling_game.utils.game_structs.TroopType.Melee": {
                "type": "const",
                "value": 3
            },
            "contracts.settling_game.utils.game_structs.TroopType.RangedMagic": {
                "type": "const",
                "value": 2
            },
            "contracts.settling_game.utils.game_structs.TroopType.RangedNormal": {
                "type": "const",
                "value": 1
            },
            "contracts.settling_game.utils.game_structs.TroopType.Return": {
                "cairo_type": "()",
                "type": "type_definition"
            },
            "contracts.settling_game.utils.game_structs.TroopType.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "contracts.settling_game.utils.game_structs.TroopType.Siege": {
                "type": "const",
                "value": 4
            },
            "contracts.settling_game.utils.game_structs.Uint256": {
                "destination": "starkware.cairo.common.uint256.Uint256",
                "type": "alias"
            },
            "starkware.cairo.common.alloc.alloc": {
                "decorators": [],
                "pc": 0,
                "type": "function"
            },
            "starkware.cairo.common.alloc.alloc.Args": {
                "full_name": "starkware.cairo.common.alloc.alloc.Args",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "starkware.cairo.common.alloc.alloc.ImplicitArgs": {
                "full_name": "starkware.cairo.common.alloc.alloc.ImplicitArgs",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "starkware.cairo.common.alloc.alloc.Return": {
                "cairo_type": "(ptr: felt*)",
                "type": "type_definition"
            },
            "starkware.cairo.common.alloc.alloc.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "starkware.cairo.common.bitwise.ALL_ONES": {
                "type": "const",
                "value": -106710729501573572985208420194530329073740042555888586719234
            },
            "starkware.cairo.common.bitwise.BitwiseBuiltin": {
                "destination": "starkware.cairo.common.cairo_builtins.BitwiseBuiltin",
                "type": "alias"
            },
            "starkware.cairo.common.bool.FALSE": {
                "type": "const",
                "value": 0
            },
            "starkware.cairo.common.bool.TRUE": {
                "type": "const",
                "value": 1
            },
            "starkware.cairo.common.cairo_builtins.BitwiseBuiltin": {
                "full_name": "starkware.cairo.common.cairo_builtins.BitwiseBuiltin",
                "members": {
                    "x": {
                        "cairo_type": "felt",
                        "offset": 0
                    },
                    "x_and_y": {
                        "cairo_type": "felt",
                        "offset": 2
                    },
                    "x_or_y": {
                        "cairo_type": "felt",
                        "offset": 4
                    },
                    "x_xor_y": {
                        "cairo_type": "felt",
                        "offset": 3
                    },
                    "y": {
                        "cairo_type": "felt",
                        "offset": 1
                    }
                },
                "size": 5,
                "type": "struct"
            },
            "starkware.cairo.common.cairo_builtins.EcOpBuiltin": {
                "full_name": "starkware.cairo.common.cairo_builtins.EcOpBuiltin",
                "members": {
                    "m": {
                        "cairo_type": "felt",
                        "offset": 4
                    },
                    "p": {
                        "cairo_type": "starkware.cairo.common.ec_point.EcPoint",
                        "offset": 0
                    },
                    "q": {
                        "cairo_type": "starkware.cairo.common.ec_point.EcPoint",
                        "offset": 2
                    },
                    "r": {
                        "cairo_type": "starkware.cairo.common.ec_point.EcPoint",
                        "offset": 5
                    }
                },
                "size": 7,
                "type": "struct"
            },
            "starkware.cairo.common.cairo_builtins.EcPoint": {
                "destination": "starkware.cairo.common.ec_point.EcPoint",
                "type": "alias"
            },
            "starkware.cairo.common.cairo_builtins.HashBuiltin": {
                "full_name": "starkware.cairo.common.cairo_builtins.HashBuiltin",
                "members": {
                    "result": {
                        "cairo_type": "felt",
                        "offset": 2
                    },
                    "x": {
                        "cairo_type": "felt",
                        "offset": 0
                    },
                    "y": {
                        "cairo_type": "felt",
                        "offset": 1
                    }
                },
                "size": 3,
                "type": "struct"
            },
            "starkware.cairo.common.cairo_builtins.KeccakBuiltin": {
                "full_name": "starkware.cairo.common.cairo_builtins.KeccakBuiltin",
                "members": {
                    "input": {
                        "cairo_type": "starkware.cairo.common.keccak_state.KeccakBuiltinState",
                        "offset": 0
                    },
                    "output": {
                        "cairo_type": "starkware.cairo.common.keccak_state.KeccakBuiltinState",
                        "offset": 8
                    }
                },
                "size": 16,
                "type": "struct"
            },
            "starkware.cairo.common.cairo_builtins.KeccakBuiltinState": {
                "destination": "starkware.cairo.common.keccak_state.KeccakBuiltinState",
                "type": "alias"
            },
            "starkware.cairo.common.cairo_builtins.SignatureBuiltin": {
                "full_name": "starkware.cairo.common.cairo_builtins.SignatureBuiltin",
                "members": {
                    "message": {
                        "cairo_type": "felt",
                        "offset": 1
                    },
                    "pub_key": {
                        "cairo_type": "felt",
                        "offset": 0
                    }
                },
                "size": 2,
                "type": "struct"
            },
            "starkware.cairo.common.dict_access.DictAccess": {
                "full_name": "starkware.cairo.common.dict_access.DictAccess",
                "members": {
                    "key": {
                        "cairo_type": "felt",
                        "offset": 0
                    },
                    "new_value": {
                        "cairo_type": "felt",
                        "offset": 2
                    },
                    "prev_value": {
                        "cairo_type": "felt",
                        "offset": 1
                    }
                },
                "size": 3,
                "type": "struct"
            },
            "starkware.cairo.common.ec_point.EcPoint": {
                "full_name": "starkware.cairo.common.ec_point.EcPoint",
                "members": {
                    "x": {
                        "cairo_type": "felt",
                        "offset": 0
                    },
                    "y": {
                        "cairo_type": "felt",
                        "offset": 1
                    }
                },
                "size": 2,
                "type": "struct"
            },
            "starkware.cairo.common.hash.HashBuiltin": {
                "destination": "starkware.cairo.common.cairo_builtins.HashBuiltin",
                "type": "alias"
            },
            "starkware.cairo.common.keccak_state.KeccakBuiltinState": {
                "full_name": "starkware.cairo.common.keccak_state.KeccakBuiltinState",
                "members": {
                    "s0": {
                        "cairo_type": "felt",
                        "offset": 0
                    },
                    "s1": {
                        "cairo_type": "felt",
                        "offset": 1
                    },
                    "s2": {
                        "cairo_type": "felt",
                        "offset": 2
                    },
                    "s3": {
                        "cairo_type": "felt",
                        "offset": 3
                    },
                    "s4": {
                        "cairo_type": "felt",
                        "offset": 4
                    },
                    "s5": {
                        "cairo_type": "felt",
                        "offset": 5
                    },
                    "s6": {
                        "cairo_type": "felt",
                        "offset": 6
                    },
                    "s7": {
                        "cairo_type": "felt",
                        "offset": 7
                    }
                },
                "size": 8,
                "type": "struct"
            },
            "starkware.cairo.common.math.FALSE": {
                "destination": "starkware.cairo.common.bool.FALSE",
                "type": "alias"
            },
            "starkware.cairo.common.math.TRUE": {
                "destination": "starkware.cairo.common.bool.TRUE",
                "type": "alias"
            },
            "starkware.cairo.common.math.assert_le": {
                "decorators": [],
                "pc": 28,
                "type": "function"
            },
            "starkware.cairo.common.math.assert_le.Args": {
                "full_name": "starkware.cairo.common.math.assert_le.Args",
                "members": {
                    "a": {
                        "cairo_type": "felt",
                        "offset": 0
                    },
                    "b": {
                        "cairo_type": "felt",
                        "offset": 1
                    }
                },
                "size": 2,
                "type": "struct"
            },
            "starkware.cairo.common.math.assert_le.ImplicitArgs": {
                "full_name": "starkware.cairo.common.math.assert_le.ImplicitArgs",
                "members": {
                    "range_check_ptr": {
                        "cairo_type": "felt",
                        "offset": 0
                    }
                },
                "size": 1,
                "type": "struct"
            },
            "starkware.cairo.common.math.assert_le.Return": {
                "cairo_type": "()",
                "type": "type_definition"
            },
            "starkware.cairo.common.math.assert_le.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "starkware.cairo.common.math.assert_le_felt": {
                "decorators": [
                    "known_ap_change"
                ],
                "pc": 49,
                "type": "function"
            },
            "starkware.cairo.common.math.assert_le_felt.Args": {
                "full_name": "starkware.cairo.common.math.assert_le_felt.Args",
                "members": {
                    "a": {
                        "cairo_type": "felt",
                        "offset": 0
                    },
                    "b": {
                        "cairo_type": "felt",
                        "offset": 1
                    }
                },
                "size": 2,
                "type": "struct"
            },
            "starkware.cairo.common.math.assert_le_felt.ImplicitArgs": {
                "full_name": "starkware.cairo.common.math.assert_le_felt.ImplicitArgs",
                "members": {
                    "range_check_ptr": {
                        "cairo_type": "felt",
                        "offset": 0
                    }
                },
                "size": 1,
                "type": "struct"
            },
            "starkware.cairo.common.math.assert_le_felt.PRIME_OVER_2_HIGH": {
                "type": "const",
                "value": 5316911983139663648412552867652567041
            },
            "starkware.cairo.common.math.assert_le_felt.PRIME_OVER_3_HIGH": {
                "type": "const",
                "value": 3544607988759775765608368578435044694
            },
            "starkware.cairo.common.math.assert_le_felt.Return": {
                "cairo_type": "()",
                "type": "type_definition"
            },
            "starkware.cairo.common.math.assert_le_felt.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "starkware.cairo.common.math.assert_le_felt.a": {
                "cairo_type": "felt",
                "full_name": "starkware.cairo.common.math.assert_le_felt.a",
                "references": [
                    {
                        "ap_tracking_data": {
                            "group": 8,
                            "offset": 0
                        },
                        "pc": 49,
                        "value": "[cast(fp + (-4), felt*)]"
                    }
                ],
                "type": "reference"
            },
            "starkware.cairo.common.math.assert_le_felt.b": {
                "cairo_type": "felt",
                "full_name": "starkware.cairo.common.math.assert_le_felt.b",
                "references": [
                    {
                        "ap_tracking_data": {
                            "group": 8,
                            "offset": 0
                        },
                        "pc": 49,
                        "value": "[cast(fp + (-3), felt*)]"
                    }
                ],
                "type": "reference"
            },
            "starkware.cairo.common.math.assert_le_felt.range_check_ptr": {
                "cairo_type": "felt",
                "full_name": "starkware.cairo.common.math.assert_le_felt.range_check_ptr",
                "references": [
                    {
                        "ap_tracking_data": {
                            "group": 8,
                            "offset": 0
                        },
                        "pc": 49,
                        "value": "[cast(fp + (-5), felt*)]"
                    },
                    {
                        "ap_tracking_data": {
                            "group": 8,
                            "offset": 8
                        },
                        "pc": 59,
                        "value": "cast([fp + (-5)] + 4, felt)"
                    }
                ],
                "type": "reference"
            },
            "starkware.cairo.common.math.assert_le_felt.skip_exclude_a": {
                "pc": 73,
                "type": "label"
            },
            "starkware.cairo.common.math.assert_le_felt.skip_exclude_b_minus_a": {
                "pc": 85,
                "type": "label"
            },
            "starkware.cairo.common.math.assert_lt": {
                "decorators": [],
                "pc": 33,
                "type": "function"
            },
            "starkware.cairo.common.math.assert_lt.Args": {
                "full_name": "starkware.cairo.common.math.assert_lt.Args",
                "members": {
                    "a": {
                        "cairo_type": "felt",
                        "offset": 0
                    },
                    "b": {
                        "cairo_type": "felt",
                        "offset": 1
                    }
                },
                "size": 2,
                "type": "struct"
            },
            "starkware.cairo.common.math.assert_lt.ImplicitArgs": {
                "full_name": "starkware.cairo.common.math.assert_lt.ImplicitArgs",
                "members": {
                    "range_check_ptr": {
                        "cairo_type": "felt",
                        "offset": 0
                    }
                },
                "size": 1,
                "type": "struct"
            },
            "starkware.cairo.common.math.assert_lt.Return": {
                "cairo_type": "()",
                "type": "type_definition"
            },
            "starkware.cairo.common.math.assert_lt.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "starkware.cairo.common.math.assert_nn": {
                "decorators": [],
                "pc": 24,
                "type": "function"
            },
            "starkware.cairo.common.math.assert_nn.Args": {
                "full_name": "starkware.cairo.common.math.assert_nn.Args",
                "members": {
                    "a": {
                        "cairo_type": "felt",
                        "offset": 0
                    }
                },
                "size": 1,
                "type": "struct"
            },
            "starkware.cairo.common.math.assert_nn.ImplicitArgs": {
                "full_name": "starkware.cairo.common.math.assert_nn.ImplicitArgs",
                "members": {
                    "range_check_ptr": {
                        "cairo_type": "felt",
                        "offset": 0
                    }
                },
                "size": 1,
                "type": "struct"
            },
            "starkware.cairo.common.math.assert_nn.Return": {
                "cairo_type": "()",
                "type": "type_definition"
            },
            "starkware.cairo.common.math.assert_nn.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "starkware.cairo.common.math.assert_nn.a": {
                "cairo_type": "felt",
                "full_name": "starkware.cairo.common.math.assert_nn.a",
                "references": [
                    {
                        "ap_tracking_data": {
                            "group": 4,
                            "offset": 0
                        },
                        "pc": 24,
                        "value": "[cast(fp + (-3), felt*)]"
                    }
                ],
                "type": "reference"
            },
            "starkware.cairo.common.math.assert_nn_le": {
                "decorators": [],
                "pc": 40,
                "type": "function"
            },
            "starkware.cairo.common.math.assert_nn_le.Args": {
                "full_name": "starkware.cairo.common.math.assert_nn_le.Args",
                "members": {
                    "a": {
                        "cairo_type": "felt",
                        "offset": 0
                    },
                    "b": {
                        "cairo_type": "felt",
                        "offset": 1
                    }
                },
                "size": 2,
                "type": "struct"
            },
            "starkware.cairo.common.math.assert_nn_le.ImplicitArgs": {
                "full_name": "starkware.cairo.common.math.assert_nn_le.ImplicitArgs",
                "members": {
                    "range_check_ptr": {
                        "cairo_type": "felt",
                        "offset": 0
                    }
                },
                "size": 1,
                "type": "struct"
            },
            "starkware.cairo.common.math.assert_nn_le.Return": {
                "cairo_type": "()",
                "type": "type_definition"
            },
            "starkware.cairo.common.math.assert_nn_le.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "starkware.cairo.common.math.assert_not_zero": {
                "decorators": [],
                "pc": 19,
                "type": "function"
            },
            "starkware.cairo.common.math.assert_not_zero.Args": {
                "full_name": "starkware.cairo.common.math.assert_not_zero.Args",
                "members": {
                    "value": {
                        "cairo_type": "felt",
                        "offset": 0
                    }
                },
                "size": 1,
                "type": "struct"
            },
            "starkware.cairo.common.math.assert_not_zero.ImplicitArgs": {
                "full_name": "starkware.cairo.common.math.assert_not_zero.ImplicitArgs",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "starkware.cairo.common.math.assert_not_zero.Return": {
                "cairo_type": "()",
                "type": "type_definition"
            },
            "starkware.cairo.common.math.assert_not_zero.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "starkware.cairo.common.math.assert_not_zero.value": {
                "cairo_type": "felt",
                "full_name": "starkware.cairo.common.math.assert_not_zero.value",
                "references": [
                    {
                        "ap_tracking_data": {
                            "group": 3,
                            "offset": 0
                        },
                        "pc": 19,
                        "value": "[cast(fp + (-3), felt*)]"
                    }
                ],
                "type": "reference"
            },
            "starkware.cairo.common.math.split_int": {
                "decorators": [],
                "pc": 109,
                "type": "function"
            },
            "starkware.cairo.common.math.split_int.Args": {
                "full_name": "starkware.cairo.common.math.split_int.Args",
                "members": {
                    "base": {
                        "cairo_type": "felt",
                        "offset": 2
                    },
                    "bound": {
                        "cairo_type": "felt",
                        "offset": 3
                    },
                    "n": {
                        "cairo_type": "felt",
                        "offset": 1
                    },
                    "output": {
                        "cairo_type": "felt*",
                        "offset": 4
                    },
                    "value": {
                        "cairo_type": "felt",
                        "offset": 0
                    }
                },
                "size": 5,
                "type": "struct"
            },
            "starkware.cairo.common.math.split_int.ImplicitArgs": {
                "full_name": "starkware.cairo.common.math.split_int.ImplicitArgs",
                "members": {
                    "range_check_ptr": {
                        "cairo_type": "felt",
                        "offset": 0
                    }
                },
                "size": 1,
                "type": "struct"
            },
            "starkware.cairo.common.math.split_int.Return": {
                "cairo_type": "()",
                "type": "type_definition"
            },
            "starkware.cairo.common.math.split_int.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "starkware.cairo.common.math.split_int.base": {
                "cairo_type": "felt",
                "full_name": "starkware.cairo.common.math.split_int.base",
                "references": [
                    {
                        "ap_tracking_data": {
                            "group": 10,
                            "offset": 0
                        },
                        "pc": 109,
                        "value": "[cast(fp + (-5), felt*)]"
                    }
                ],
                "type": "reference"
            },
            "starkware.cairo.common.math.split_int.bound": {
                "cairo_type": "felt",
                "full_name": "starkware.cairo.common.math.split_int.bound",
                "references": [
                    {
                        "ap_tracking_data": {
                            "group": 10,
                            "offset": 0
                        },
                        "pc": 109,
                        "value": "[cast(fp + (-4), felt*)]"
                    }
                ],
                "type": "reference"
            },
            "starkware.cairo.common.math.split_int.output": {
                "cairo_type": "felt*",
                "full_name": "starkware.cairo.common.math.split_int.output",
                "references": [
                    {
                        "ap_tracking_data": {
                            "group": 10,
                            "offset": 0
                        },
                        "pc": 109,
                        "value": "[cast(fp + (-3), felt**)]"
                    }
                ],
                "type": "reference"
            },
            "starkware.cairo.common.math.split_int.value": {
                "cairo_type": "felt",
                "full_name": "starkware.cairo.common.math.split_int.value",
                "references": [
                    {
                        "ap_tracking_data": {
                            "group": 10,
                            "offset": 0
                        },
                        "pc": 109,
                        "value": "[cast(fp + (-7), felt*)]"
                    }
                ],
                "type": "reference"
            },
            "starkware.cairo.common.math.unsigned_div_rem": {
                "decorators": [],
                "pc": 94,
                "type": "function"
            },
            "starkware.cairo.common.math.unsigned_div_rem.Args": {
                "full_name": "starkware.cairo.common.math.unsigned_div_rem.Args",
                "members": {
                    "div": {
                        "cairo_type": "felt",
                        "offset": 1
                    },
                    "value": {
                        "cairo_type": "felt",
                        "offset": 0
                    }
                },
                "size": 2,
                "type": "struct"
            },
            "starkware.cairo.common.math.unsigned_div_rem.ImplicitArgs": {
                "full_name": "starkware.cairo.common.math.unsigned_div_rem.ImplicitArgs",
                "members": {
                    "range_check_ptr": {
                        "cairo_type": "felt",
                        "offset": 0
                    }
                },
                "size": 1,
                "type": "struct"
            },
            "starkware.cairo.common.math.unsigned_div_rem.Return": {
                "cairo_type": "(q: felt, r: felt)",
                "type": "type_definition"
            },
            "starkware.cairo.common.math.unsigned_div_rem.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "starkware.cairo.common.math.unsigned_div_rem.div": {
                "cairo_type": "felt",
                "full_name": "starkware.cairo.common.math.unsigned_div_rem.div",
                "references": [
                    {
                        "ap_tracking_data": {
                            "group": 9,
                            "offset": 0
                        },
                        "pc": 94,
                        "value": "[cast(fp + (-3), felt*)]"
                    }
                ],
                "type": "reference"
            },
            "starkware.cairo.common.math.unsigned_div_rem.q": {
                "cairo_type": "felt",
                "full_name": "starkware.cairo.common.math.unsigned_div_rem.q",
                "references": [
                    {
                        "ap_tracking_data": {
                            "group": 9,
                            "offset": 0
                        },
                        "pc": 94,
                        "value": "[cast([fp + (-5)] + 1, felt*)]"
                    }
                ],
                "type": "reference"
            },
            "starkware.cairo.common.math.unsigned_div_rem.r": {
                "cairo_type": "felt",
                "full_name": "starkware.cairo.common.math.unsigned_div_rem.r",
                "references": [
                    {
                        "ap_tracking_data": {
                            "group": 9,
                            "offset": 0
                        },
                        "pc": 94,
                        "value": "[cast([fp + (-5)], felt*)]"
                    }
                ],
                "type": "reference"
            },
            "starkware.cairo.common.math.unsigned_div_rem.value": {
                "cairo_type": "felt",
                "full_name": "starkware.cairo.common.math.unsigned_div_rem.value",
                "references": [
                    {
                        "ap_tracking_data": {
                            "group": 9,
                            "offset": 0
                        },
                        "pc": 94,
                        "value": "[cast(fp + (-4), felt*)]"
                    }
                ],
                "type": "reference"
            },
            "starkware.cairo.common.math_cmp.RC_BOUND": {
                "type": "const",
                "value": 340282366920938463463374607431768211456
            },
            "starkware.cairo.common.math_cmp.assert_le_felt": {
                "destination": "starkware.cairo.common.math.assert_le_felt",
                "type": "alias"
            },
            "starkware.cairo.common.math_cmp.assert_lt_felt": {
                "destination": "starkware.cairo.common.math.assert_lt_felt",
                "type": "alias"
            },
            "starkware.cairo.common.math_cmp.is_le": {
                "decorators": [
                    "known_ap_change"
                ],
                "pc": 167,
                "type": "function"
            },
            "starkware.cairo.common.math_cmp.is_le.Args": {
                "full_name": "starkware.cairo.common.math_cmp.is_le.Args",
                "members": {
                    "a": {
                        "cairo_type": "felt",
                        "offset": 0
                    },
                    "b": {
                        "cairo_type": "felt",
                        "offset": 1
                    }
                },
                "size": 2,
                "type": "struct"
            },
            "starkware.cairo.common.math_cmp.is_le.ImplicitArgs": {
                "full_name": "starkware.cairo.common.math_cmp.is_le.ImplicitArgs",
                "members": {
                    "range_check_ptr": {
                        "cairo_type": "felt",
                        "offset": 0
                    }
                },
                "size": 1,
                "type": "struct"
            },
            "starkware.cairo.common.math_cmp.is_le.Return": {
                "cairo_type": "felt",
                "type": "type_definition"
            },
            "starkware.cairo.common.math_cmp.is_le.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "starkware.cairo.common.math_cmp.is_nn": {
                "decorators": [
                    "known_ap_change"
                ],
                "pc": 134,
                "type": "function"
            },
            "starkware.cairo.common.math_cmp.is_nn.Args": {
                "full_name": "starkware.cairo.common.math_cmp.is_nn.Args",
                "members": {
                    "a": {
                        "cairo_type": "felt",
                        "offset": 0
                    }
                },
                "size": 1,
                "type": "struct"
            },
            "starkware.cairo.common.math_cmp.is_nn.ImplicitArgs": {
                "full_name": "starkware.cairo.common.math_cmp.is_nn.ImplicitArgs",
                "members": {
                    "range_check_ptr": {
                        "cairo_type": "felt",
                        "offset": 0
                    }
                },
                "size": 1,
                "type": "struct"
            },
            "starkware.cairo.common.math_cmp.is_nn.Return": {
                "cairo_type": "felt",
                "type": "type_definition"
            },
            "starkware.cairo.common.math_cmp.is_nn.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "starkware.cairo.common.math_cmp.is_nn.a": {
                "cairo_type": "felt",
                "full_name": "starkware.cairo.common.math_cmp.is_nn.a",
                "references": [
                    {
                        "ap_tracking_data": {
                            "group": 12,
                            "offset": 0
                        },
                        "pc": 134,
                        "value": "[cast(fp + (-3), felt*)]"
                    }
                ],
                "type": "reference"
            },
            "starkware.cairo.common.math_cmp.is_nn.need_felt_comparison": {
                "pc": 158,
                "type": "label"
            },
            "starkware.cairo.common.math_cmp.is_nn.out_of_range": {
                "pc": 144,
                "type": "label"
            },
            "starkware.cairo.common.memcpy.memcpy": {
                "decorators": [],
                "pc": 3,
                "type": "function"
            },
            "starkware.cairo.common.memcpy.memcpy.Args": {
                "full_name": "starkware.cairo.common.memcpy.memcpy.Args",
                "members": {
                    "dst": {
                        "cairo_type": "felt*",
                        "offset": 0
                    },
                    "len": {
                        "cairo_type": "felt",
                        "offset": 2
                    },
                    "src": {
                        "cairo_type": "felt*",
                        "offset": 1
                    }
                },
                "size": 3,
                "type": "struct"
            },
            "starkware.cairo.common.memcpy.memcpy.ImplicitArgs": {
                "full_name": "starkware.cairo.common.memcpy.memcpy.ImplicitArgs",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "starkware.cairo.common.memcpy.memcpy.LoopFrame": {
                "full_name": "starkware.cairo.common.memcpy.memcpy.LoopFrame",
                "members": {
                    "dst": {
                        "cairo_type": "felt*",
                        "offset": 0
                    },
                    "src": {
                        "cairo_type": "felt*",
                        "offset": 1
                    }
                },
                "size": 2,
                "type": "struct"
            },
            "starkware.cairo.common.memcpy.memcpy.Return": {
                "cairo_type": "()",
                "type": "type_definition"
            },
            "starkware.cairo.common.memcpy.memcpy.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "starkware.cairo.common.memcpy.memcpy.continue_copying": {
                "cairo_type": "felt",
                "full_name": "starkware.cairo.common.memcpy.memcpy.continue_copying",
                "references": [
                    {
                        "ap_tracking_data": {
                            "group": 1,
                            "offset": 3
                        },
                        "pc": 10,
                        "value": "[cast(ap, felt*)]"
                    }
                ],
                "type": "reference"
            },
            "starkware.cairo.common.memcpy.memcpy.len": {
                "cairo_type": "felt",
                "full_name": "starkware.cairo.common.memcpy.memcpy.len",
                "references": [
                    {
                        "ap_tracking_data": {
                            "group": 1,
                            "offset": 0
                        },
                        "pc": 3,
                        "value": "[cast(fp + (-3), felt*)]"
                    }
                ],
                "type": "reference"
            },
            "starkware.cairo.common.memcpy.memcpy.loop": {
                "pc": 8,
                "type": "label"
            },
            "starkware.cairo.common.memset.memset": {
                "decorators": [],
                "pc": 172,
                "type": "function"
            },
            "starkware.cairo.common.memset.memset.Args": {
                "full_name": "starkware.cairo.common.memset.memset.Args",
                "members": {
                    "dst": {
                        "cairo_type": "felt*",
                        "offset": 0
                    },
                    "n": {
                        "cairo_type": "felt",
                        "offset": 2
                    },
                    "value": {
                        "cairo_type": "felt",
                        "offset": 1
                    }
                },
                "size": 3,
                "type": "struct"
            },
            "starkware.cairo.common.memset.memset.ImplicitArgs": {
                "full_name": "starkware.cairo.common.memset.memset.ImplicitArgs",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "starkware.cairo.common.memset.memset.LoopFrame": {
                "full_name": "starkware.cairo.common.memset.memset.LoopFrame",
                "members": {
                    "dst": {
                        "cairo_type": "felt*",
                        "offset": 0
                    }
                },
                "size": 1,
                "type": "struct"
            },
            "starkware.cairo.common.memset.memset.Return": {
                "cairo_type": "()",
                "type": "type_definition"
            },
            "starkware.cairo.common.memset.memset.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "starkware.cairo.common.memset.memset.continue_loop": {
                "cairo_type": "felt",
                "full_name": "starkware.cairo.common.memset.memset.continue_loop",
                "references": [
                    {
                        "ap_tracking_data": {
                            "group": 14,
                            "offset": 1
                        },
                        "pc": 177,
                        "value": "[cast(ap, felt*)]"
                    }
                ],
                "type": "reference"
            },
            "starkware.cairo.common.memset.memset.loop": {
                "pc": 176,
                "type": "label"
            },
            "starkware.cairo.common.memset.memset.n": {
                "cairo_type": "felt",
                "full_name": "starkware.cairo.common.memset.memset.n",
                "references": [
                    {
                        "ap_tracking_data": {
                            "group": 14,
                            "offset": 0
                        },
                        "pc": 172,
                        "value": "[cast(fp + (-3), felt*)]"
                    }
                ],
                "type": "reference"
            },
            "starkware.cairo.common.pow.assert_le": {
                "destination": "starkware.cairo.common.math.assert_le",
                "type": "alias"
            },
            "starkware.cairo.common.pow.get_ap": {
                "destination": "starkware.cairo.common.registers.get_ap",
                "type": "alias"
            },
            "starkware.cairo.common.pow.get_fp_and_pc": {
                "destination": "starkware.cairo.common.registers.get_fp_and_pc",
                "type": "alias"
            },
            "starkware.cairo.common.registers.get_ap": {
                "destination": "starkware.cairo.lang.compiler.lib.registers.get_ap",
                "type": "alias"
            },
            "starkware.cairo.common.registers.get_fp_and_pc": {
                "destination": "starkware.cairo.lang.compiler.lib.registers.get_fp_and_pc",
                "type": "alias"
            },
            "starkware.cairo.common.registers.get_label_location": {
                "decorators": [],
                "pc": 183,
                "type": "function"
            },
            "starkware.cairo.common.registers.get_label_location.Args": {
                "full_name": "starkware.cairo.common.registers.get_label_location.Args",
                "members": {
                    "label_value": {
                        "cairo_type": "codeoffset",
                        "offset": 0
                    }
                },
                "size": 1,
                "type": "struct"
            },
            "starkware.cairo.common.registers.get_label_location.ImplicitArgs": {
                "full_name": "starkware.cairo.common.registers.get_label_location.ImplicitArgs",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "starkware.cairo.common.registers.get_label_location.Return": {
                "cairo_type": "(res: felt*)",
                "type": "type_definition"
            },
            "starkware.cairo.common.registers.get_label_location.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "starkware.cairo.common.registers.get_label_location.ret_pc_label": {
                "pc": 185,
                "type": "label"
            },
            "starkware.cairo.common.uint256.ALL_ONES": {
                "type": "const",
                "value": 340282366920938463463374607431768211455
            },
            "starkware.cairo.common.uint256.BitwiseBuiltin": {
                "destination": "starkware.cairo.common.cairo_builtins.BitwiseBuiltin",
                "type": "alias"
            },
            "starkware.cairo.common.uint256.HALF_SHIFT": {
                "type": "const",
                "value": 18446744073709551616
            },
            "starkware.cairo.common.uint256.SHIFT": {
                "type": "const",
                "value": 340282366920938463463374607431768211456
            },
            "starkware.cairo.common.uint256.Uint256": {
                "full_name": "starkware.cairo.common.uint256.Uint256",
                "members": {
                    "high": {
                        "cairo_type": "felt",
                        "offset": 1
                    },
                    "low": {
                        "cairo_type": "felt",
                        "offset": 0
                    }
                },
                "size": 2,
                "type": "struct"
            },
            "starkware.cairo.common.uint256.assert_in_range": {
                "destination": "starkware.cairo.common.math.assert_in_range",
                "type": "alias"
            },
            "starkware.cairo.common.uint256.assert_le": {
                "destination": "starkware.cairo.common.math.assert_le",
                "type": "alias"
            },
            "starkware.cairo.common.uint256.assert_nn_le": {
                "destination": "starkware.cairo.common.math.assert_nn_le",
                "type": "alias"
            },
            "starkware.cairo.common.uint256.assert_not_zero": {
                "destination": "starkware.cairo.common.math.assert_not_zero",
                "type": "alias"
            },
            "starkware.cairo.common.uint256.bitwise_and": {
                "destination": "starkware.cairo.common.bitwise.bitwise_and",
                "type": "alias"
            },
            "starkware.cairo.common.uint256.bitwise_or": {
                "destination": "starkware.cairo.common.bitwise.bitwise_or",
                "type": "alias"
            },
            "starkware.cairo.common.uint256.bitwise_xor": {
                "destination": "starkware.cairo.common.bitwise.bitwise_xor",
                "type": "alias"
            },
            "starkware.cairo.common.uint256.get_ap": {
                "destination": "starkware.cairo.common.registers.get_ap",
                "type": "alias"
            },
            "starkware.cairo.common.uint256.get_fp_and_pc": {
                "destination": "starkware.cairo.common.registers.get_fp_and_pc",
                "type": "alias"
            },
            "starkware.cairo.common.uint256.is_le": {
                "destination": "starkware.cairo.common.math_cmp.is_le",
                "type": "alias"
            },
            "starkware.cairo.common.uint256.pow": {
                "destination": "starkware.cairo.common.pow.pow",
                "type": "alias"
            },
            "starkware.cairo.lang.compiler.lib.registers.get_fp_and_pc": {
                "decorators": [],
                "pc": 18,
                "type": "function"
            },
            "starkware.cairo.lang.compiler.lib.registers.get_fp_and_pc.Args": {
                "full_name": "starkware.cairo.lang.compiler.lib.registers.get_fp_and_pc.Args",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "starkware.cairo.lang.compiler.lib.registers.get_fp_and_pc.ImplicitArgs": {
                "full_name": "starkware.cairo.lang.compiler.lib.registers.get_fp_and_pc.ImplicitArgs",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "starkware.cairo.lang.compiler.lib.registers.get_fp_and_pc.Return": {
                "cairo_type": "(fp_val: felt*, pc_val: felt*)",
                "type": "type_definition"
            },
            "starkware.cairo.lang.compiler.lib.registers.get_fp_and_pc.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "starkware.starknet.common.storage.ADDR_BOUND": {
                "type": "const",
                "value": -106710729501573572985208420194530329073740042555888586719489
            },
            "starkware.starknet.common.storage.MAX_STORAGE_ITEM_SIZE": {
                "type": "const",
                "value": 256
            },
            "starkware.starknet.common.storage.assert_250_bit": {
                "destination": "starkware.cairo.common.math.assert_250_bit",
                "type": "alias"
            },
            "starkware.starknet.common.syscalls.CALL_CONTRACT_SELECTOR": {
                "type": "const",
                "value": 20853273475220472486191784820
            },
            "starkware.starknet.common.syscalls.CallContract": {
                "full_name": "starkware.starknet.common.syscalls.CallContract",
                "members": {
                    "request": {
                        "cairo_type": "starkware.starknet.common.syscalls.CallContractRequest",
                        "offset": 0
                    },
                    "response": {
                        "cairo_type": "starkware.starknet.common.syscalls.CallContractResponse",
                        "offset": 5
                    }
                },
                "size": 7,
                "type": "struct"
            },
            "starkware.starknet.common.syscalls.CallContractRequest": {
                "full_name": "starkware.starknet.common.syscalls.CallContractRequest",
                "members": {
                    "calldata": {
                        "cairo_type": "felt*",
                        "offset": 4
                    },
                    "calldata_size": {
                        "cairo_type": "felt",
                        "offset": 3
                    },
                    "contract_address": {
                        "cairo_type": "felt",
                        "offset": 1
                    },
                    "function_selector": {
                        "cairo_type": "felt",
                        "offset": 2
                    },
                    "selector": {
                        "cairo_type": "felt",
                        "offset": 0
                    }
                },
                "size": 5,
                "type": "struct"
            },
            "starkware.starknet.common.syscalls.CallContractResponse": {
                "full_name": "starkware.starknet.common.syscalls.CallContractResponse",
                "members": {
                    "retdata": {
                        "cairo_type": "felt*",
                        "offset": 1
                    },
                    "retdata_size": {
                        "cairo_type": "felt",
                        "offset": 0
                    }
                },
                "size": 2,
                "type": "struct"
            },
            "starkware.starknet.common.syscalls.DELEGATE_CALL_SELECTOR": {
                "type": "const",
                "value": 21167594061783206823196716140
            },
            "starkware.starknet.common.syscalls.DELEGATE_L1_HANDLER_SELECTOR": {
                "type": "const",
                "value": 23274015802972845247556842986379118667122
            },
            "starkware.starknet.common.syscalls.DEPLOY_SELECTOR": {
                "type": "const",
                "value": 75202468540281
            },
            "starkware.starknet.common.syscalls.Deploy": {
                "full_name": "starkware.starknet.common.syscalls.Deploy",
                "members": {
                    "request": {
                        "cairo_type": "starkware.starknet.common.syscalls.DeployRequest",
                        "offset": 0
                    },
                    "response": {
                        "cairo_type": "starkware.starknet.common.syscalls.DeployResponse",
                        "offset": 6
                    }
                },
                "size": 9,
                "type": "struct"
            },
            "starkware.starknet.common.syscalls.DeployRequest": {
                "full_name": "starkware.starknet.common.syscalls.DeployRequest",
                "members": {
                    "class_hash": {
                        "cairo_type": "felt",
                        "offset": 1
                    },
                    "constructor_calldata": {
                        "cairo_type": "felt*",
                        "offset": 4
                    },
                    "constructor_calldata_size": {
                        "cairo_type": "felt",
                        "offset": 3
                    },
                    "contract_address_salt": {
                        "cairo_type": "felt",
                        "offset": 2
                    },
                    "deploy_from_zero": {
                        "cairo_type": "felt",
                        "offset": 5
                    },
                    "selector": {
                        "cairo_type": "felt",
                        "offset": 0
                    }
                },
                "size": 6,
                "type": "struct"
            },
            "starkware.starknet.common.syscalls.DeployResponse": {
                "full_name": "starkware.starknet.common.syscalls.DeployResponse",
                "members": {
                    "constructor_retdata": {
                        "cairo_type": "felt*",
                        "offset": 2
                    },
                    "constructor_retdata_size": {
                        "cairo_type": "felt",
                        "offset": 1
                    },
                    "contract_address": {
                        "cairo_type": "felt",
                        "offset": 0
                    }
                },
                "size": 3,
                "type": "struct"
            },
            "starkware.starknet.common.syscalls.DictAccess": {
                "destination": "starkware.cairo.common.dict_access.DictAccess",
                "type": "alias"
            },
            "starkware.starknet.common.syscalls.EMIT_EVENT_SELECTOR": {
                "type": "const",
                "value": 1280709301550335749748
            },
            "starkware.starknet.common.syscalls.EmitEvent": {
                "full_name": "starkware.starknet.common.syscalls.EmitEvent",
                "members": {
                    "data": {
                        "cairo_type": "felt*",
                        "offset": 4
                    },
                    "data_len": {
                        "cairo_type": "felt",
                        "offset": 3
                    },
                    "keys": {
                        "cairo_type": "felt*",
                        "offset": 2
                    },
                    "keys_len": {
                        "cairo_type": "felt",
                        "offset": 1
                    },
                    "selector": {
                        "cairo_type": "felt",
                        "offset": 0
                    }
                },
                "size": 5,
                "type": "struct"
            },
            "starkware.starknet.common.syscalls.GET_BLOCK_NUMBER_SELECTOR": {
                "type": "const",
                "value": 1448089106835523001438702345020786
            },
            "starkware.starknet.common.syscalls.GET_BLOCK_TIMESTAMP_SELECTOR": {
                "type": "const",
                "value": 24294903732626645868215235778792757751152
            },
            "starkware.starknet.common.syscalls.GET_CALLER_ADDRESS_SELECTOR": {
                "type": "const",
                "value": 94901967781393078444254803017658102643
            },
            "starkware.starknet.common.syscalls.GET_CONTRACT_ADDRESS_SELECTOR": {
                "type": "const",
                "value": 6219495360805491471215297013070624192820083
            },
            "starkware.starknet.common.syscalls.GET_SEQUENCER_ADDRESS_SELECTOR": {
                "type": "const",
                "value": 1592190833581991703053805829594610833820054387
            },
            "starkware.starknet.common.syscalls.GET_TX_INFO_SELECTOR": {
                "type": "const",
                "value": 1317029390204112103023
            },
            "starkware.starknet.common.syscalls.GET_TX_SIGNATURE_SELECTOR": {
                "type": "const",
                "value": 1448089128652340074717162277007973
            },
            "starkware.starknet.common.syscalls.GetBlockNumber": {
                "full_name": "starkware.starknet.common.syscalls.GetBlockNumber",
                "members": {
                    "request": {
                        "cairo_type": "starkware.starknet.common.syscalls.GetBlockNumberRequest",
                        "offset": 0
                    },
                    "response": {
                        "cairo_type": "starkware.starknet.common.syscalls.GetBlockNumberResponse",
                        "offset": 1
                    }
                },
                "size": 2,
                "type": "struct"
            },
            "starkware.starknet.common.syscalls.GetBlockNumberRequest": {
                "full_name": "starkware.starknet.common.syscalls.GetBlockNumberRequest",
                "members": {
                    "selector": {
                        "cairo_type": "felt",
                        "offset": 0
                    }
                },
                "size": 1,
                "type": "struct"
            },
            "starkware.starknet.common.syscalls.GetBlockNumberResponse": {
                "full_name": "starkware.starknet.common.syscalls.GetBlockNumberResponse",
                "members": {
                    "block_number": {
                        "cairo_type": "felt",
                        "offset": 0
                    }
                },
                "size": 1,
                "type": "struct"
            },
            "starkware.starknet.common.syscalls.GetBlockTimestamp": {
                "full_name": "starkware.starknet.common.syscalls.GetBlockTimestamp",
                "members": {
                    "request": {
                        "cairo_type": "starkware.starknet.common.syscalls.GetBlockTimestampRequest",
                        "offset": 0
                    },
                    "response": {
                        "cairo_type": "starkware.starknet.common.syscalls.GetBlockTimestampResponse",
                        "offset": 1
                    }
                },
                "size": 2,
                "type": "struct"
            },
            "starkware.starknet.common.syscalls.GetBlockTimestampRequest": {
                "full_name": "starkware.starknet.common.syscalls.GetBlockTimestampRequest",
                "members": {
                    "selector": {
                        "cairo_type": "felt",
                        "offset": 0
                    }
                },
                "size": 1,
                "type": "struct"
            },
            "starkware.starknet.common.syscalls.GetBlockTimestampResponse": {
                "full_name": "starkware.starknet.common.syscalls.GetBlockTimestampResponse",
                "members": {
                    "block_timestamp": {
                        "cairo_type": "felt",
                        "offset": 0
                    }
                },
                "size": 1,
                "type": "struct"
            },
            "starkware.starknet.common.syscalls.GetCallerAddress": {
                "full_name": "starkware.starknet.common.syscalls.GetCallerAddress",
                "members": {
                    "request": {
                        "cairo_type": "starkware.starknet.common.syscalls.GetCallerAddressRequest",
                        "offset": 0
                    },
                    "response": {
                        "cairo_type": "starkware.starknet.common.syscalls.GetCallerAddressResponse",
                        "offset": 1
                    }
                },
                "size": 2,
                "type": "struct"
            },
            "starkware.starknet.common.syscalls.GetCallerAddressRequest": {
                "full_name": "starkware.starknet.common.syscalls.GetCallerAddressRequest",
                "members": {
                    "selector": {
                        "cairo_type": "felt",
                        "offset": 0
                    }
                },
                "size": 1,
                "type": "struct"
            },
            "starkware.starknet.common.syscalls.GetCallerAddressResponse": {
                "full_name": "starkware.starknet.common.syscalls.GetCallerAddressResponse",
                "members": {
                    "caller_address": {
                        "cairo_type": "felt",
                        "offset": 0
                    }
                },
                "size": 1,
                "type": "struct"
            },
            "starkware.starknet.common.syscalls.GetContractAddress": {
                "full_name": "starkware.starknet.common.syscalls.GetContractAddress",
                "members": {
                    "request": {
                        "cairo_type": "starkware.starknet.common.syscalls.GetContractAddressRequest",
                        "offset": 0
                    },
                    "response": {
                        "cairo_type": "starkware.starknet.common.syscalls.GetContractAddressResponse",
                        "offset": 1
                    }
                },
                "size": 2,
                "type": "struct"
            },
            "starkware.starknet.common.syscalls.GetContractAddressRequest": {
                "full_name": "starkware.starknet.common.syscalls.GetContractAddressRequest",
                "members": {
                    "selector": {
                        "cairo_type": "felt",
                        "offset": 0
                    }
                },
                "size": 1,
                "type": "struct"
            },
            "starkware.starknet.common.syscalls.GetContractAddressResponse": {
                "full_name": "starkware.starknet.common.syscalls.GetContractAddressResponse",
                "members": {
                    "contract_address": {
                        "cairo_type": "felt",
                        "offset": 0
                    }
                },
                "size": 1,
                "type": "struct"
            },
            "starkware.starknet.common.syscalls.GetSequencerAddress": {
                "full_name": "starkware.starknet.common.syscalls.GetSequencerAddress",
                "members": {
                    "request": {
                        "cairo_type": "starkware.starknet.common.syscalls.GetSequencerAddressRequest",
                        "offset": 0
                    },
                    "response": {
                        "cairo_type": "starkware.starknet.common.syscalls.GetSequencerAddressResponse",
                        "offset": 1
                    }
                },
                "size": 2,
                "type": "struct"
            },
            "starkware.starknet.common.syscalls.GetSequencerAddressRequest": {
                "full_name": "starkware.starknet.common.syscalls.GetSequencerAddressRequest",
                "members": {
                    "selector": {
                        "cairo_type": "felt",
                        "offset": 0
                    }
                },
                "size": 1,
                "type": "struct"
            },
            "starkware.starknet.common.syscalls.GetSequencerAddressResponse": {
                "full_name": "starkware.starknet.common.syscalls.GetSequencerAddressResponse",
                "members": {
                    "sequencer_address": {
                        "cairo_type": "felt",
                        "offset": 0
                    }
                },
                "size": 1,
                "type": "struct"
            },
            "starkware.starknet.common.syscalls.GetTxInfo": {
                "full_name": "starkware.starknet.common.syscalls.GetTxInfo",
                "members": {
                    "request": {
                        "cairo_type": "starkware.starknet.common.syscalls.GetTxInfoRequest",
                        "offset": 0
                    },
                    "response": {
                        "cairo_type": "starkware.starknet.common.syscalls.GetTxInfoResponse",
                        "offset": 1
                    }
                },
                "size": 2,
                "type": "struct"
            },
            "starkware.starknet.common.syscalls.GetTxInfoRequest": {
                "full_name": "starkware.starknet.common.syscalls.GetTxInfoRequest",
                "members": {
                    "selector": {
                        "cairo_type": "felt",
                        "offset": 0
                    }
                },
                "size": 1,
                "type": "struct"
            },
            "starkware.starknet.common.syscalls.GetTxInfoResponse": {
                "full_name": "starkware.starknet.common.syscalls.GetTxInfoResponse",
                "members": {
                    "tx_info": {
                        "cairo_type": "starkware.starknet.common.syscalls.TxInfo*",
                        "offset": 0
                    }
                },
                "size": 1,
                "type": "struct"
            },
            "starkware.starknet.common.syscalls.GetTxSignature": {
                "full_name": "starkware.starknet.common.syscalls.GetTxSignature",
                "members": {
                    "request": {
                        "cairo_type": "starkware.starknet.common.syscalls.GetTxSignatureRequest",
                        "offset": 0
                    },
                    "response": {
                        "cairo_type": "starkware.starknet.common.syscalls.GetTxSignatureResponse",
                        "offset": 1
                    }
                },
                "size": 3,
                "type": "struct"
            },
            "starkware.starknet.common.syscalls.GetTxSignatureRequest": {
                "full_name": "starkware.starknet.common.syscalls.GetTxSignatureRequest",
                "members": {
                    "selector": {
                        "cairo_type": "felt",
                        "offset": 0
                    }
                },
                "size": 1,
                "type": "struct"
            },
            "starkware.starknet.common.syscalls.GetTxSignatureResponse": {
                "full_name": "starkware.starknet.common.syscalls.GetTxSignatureResponse",
                "members": {
                    "signature": {
                        "cairo_type": "felt*",
                        "offset": 1
                    },
                    "signature_len": {
                        "cairo_type": "felt",
                        "offset": 0
                    }
                },
                "size": 2,
                "type": "struct"
            },
            "starkware.starknet.common.syscalls.LIBRARY_CALL_L1_HANDLER_SELECTOR": {
                "type": "const",
                "value": 436233452754198157705746250789557519228244616562
            },
            "starkware.starknet.common.syscalls.LIBRARY_CALL_SELECTOR": {
                "type": "const",
                "value": 92376026794327011772951660
            },
            "starkware.starknet.common.syscalls.LibraryCall": {
                "full_name": "starkware.starknet.common.syscalls.LibraryCall",
                "members": {
                    "request": {
                        "cairo_type": "starkware.starknet.common.syscalls.LibraryCallRequest",
                        "offset": 0
                    },
                    "response": {
                        "cairo_type": "starkware.starknet.common.syscalls.CallContractResponse",
                        "offset": 5
                    }
                },
                "size": 7,
                "type": "struct"
            },
            "starkware.starknet.common.syscalls.LibraryCallRequest": {
                "full_name": "starkware.starknet.common.syscalls.LibraryCallRequest",
                "members": {
                    "calldata": {
                        "cairo_type": "felt*",
                        "offset": 4
                    },
                    "calldata_size": {
                        "cairo_type": "felt",
                        "offset": 3
                    },
                    "class_hash": {
                        "cairo_type": "felt",
                        "offset": 1
                    },
                    "function_selector": {
                        "cairo_type": "felt",
                        "offset": 2
                    },
                    "selector": {
                        "cairo_type": "felt",
                        "offset": 0
                    }
                },
                "size": 5,
                "type": "struct"
            },
            "starkware.starknet.common.syscalls.SEND_MESSAGE_TO_L1_SELECTOR": {
                "type": "const",
                "value": 433017908768303439907196859243777073
            },
            "starkware.starknet.common.syscalls.STORAGE_READ_SELECTOR": {
                "type": "const",
                "value": 100890693370601760042082660
            },
            "starkware.starknet.common.syscalls.STORAGE_WRITE_SELECTOR": {
                "type": "const",
                "value": 25828017502874050592466629733
            },
            "starkware.starknet.common.syscalls.SendMessageToL1SysCall": {
                "full_name": "starkware.starknet.common.syscalls.SendMessageToL1SysCall",
                "members": {
                    "payload_ptr": {
                        "cairo_type": "felt*",
                        "offset": 3
                    },
                    "payload_size": {
                        "cairo_type": "felt",
                        "offset": 2
                    },
                    "selector": {
                        "cairo_type": "felt",
                        "offset": 0
                    },
                    "to_address": {
                        "cairo_type": "felt",
                        "offset": 1
                    }
                },
                "size": 4,
                "type": "struct"
            },
            "starkware.starknet.common.syscalls.StorageRead": {
                "full_name": "starkware.starknet.common.syscalls.StorageRead",
                "members": {
                    "request": {
                        "cairo_type": "starkware.starknet.common.syscalls.StorageReadRequest",
                        "offset": 0
                    },
                    "response": {
                        "cairo_type": "starkware.starknet.common.syscalls.StorageReadResponse",
                        "offset": 2
                    }
                },
                "size": 3,
                "type": "struct"
            },
            "starkware.starknet.common.syscalls.StorageReadRequest": {
                "full_name": "starkware.starknet.common.syscalls.StorageReadRequest",
                "members": {
                    "address": {
                        "cairo_type": "felt",
                        "offset": 1
                    },
                    "selector": {
                        "cairo_type": "felt",
                        "offset": 0
                    }
                },
                "size": 2,
                "type": "struct"
            },
            "starkware.starknet.common.syscalls.StorageReadResponse": {
                "full_name": "starkware.starknet.common.syscalls.StorageReadResponse",
                "members": {
                    "value": {
                        "cairo_type": "felt",
                        "offset": 0
                    }
                },
                "size": 1,
                "type": "struct"
            },
            "starkware.starknet.common.syscalls.StorageWrite": {
                "full_name": "starkware.starknet.common.syscalls.StorageWrite",
                "members": {
                    "address": {
                        "cairo_type": "felt",
                        "offset": 1
                    },
                    "selector": {
                        "cairo_type": "felt",
                        "offset": 0
                    },
                    "value": {
                        "cairo_type": "felt",
                        "offset": 2
                    }
                },
                "size": 3,
                "type": "struct"
            },
            "starkware.starknet.common.syscalls.TxInfo": {
                "full_name": "starkware.starknet.common.syscalls.TxInfo",
                "members": {
                    "account_contract_address": {
                        "cairo_type": "felt",
                        "offset": 1
                    },
                    "chain_id": {
                        "cairo_type": "felt",
                        "offset": 6
                    },
                    "max_fee": {
                        "cairo_type": "felt",
                        "offset": 2
                    },
                    "nonce": {
                        "cairo_type": "felt",
                        "offset": 7
                    },
                    "signature": {
                        "cairo_type": "felt*",
                        "offset": 4
                    },
                    "signature_len": {
                        "cairo_type": "felt",
                        "offset": 3
                    },
                    "transaction_hash": {
                        "cairo_type": "felt",
                        "offset": 5
                    },
                    "version": {
                        "cairo_type": "felt",
                        "offset": 0
                    }
                },
                "size": 8,
                "type": "struct"
            }
        },
        "main_scope": "__main__",
        "prime": "0x800000000000011000000000000000000000000000000000000000000000001",
        "reference_manager": {
            "references": [
                {
                    "ap_tracking_data": {
                        "group": 1,
                        "offset": 0
                    },
                    "pc": 3,
                    "value": "[cast(fp + (-3), felt*)]"
                },
                {
                    "ap_tracking_data": {
                        "group": 1,
                        "offset": 3
                    },
                    "pc": 10,
                    "value": "[cast(ap, felt*)]"
                },
                {
                    "ap_tracking_data": {
                        "group": 3,
                        "offset": 0
                    },
                    "pc": 19,
                    "value": "[cast(fp + (-3), felt*)]"
                },
                {
                    "ap_tracking_data": {
                        "group": 4,
                        "offset": 0
                    },
                    "pc": 24,
                    "value": "[cast(fp + (-3), felt*)]"
                },
                {
                    "ap_tracking_data": {
                        "group": 8,
                        "offset": 0
                    },
                    "pc": 49,
                    "value": "[cast(fp + (-4), felt*)]"
                },
                {
                    "ap_tracking_data": {
                        "group": 8,
                        "offset": 0
                    },
                    "pc": 49,
                    "value": "[cast(fp + (-3), felt*)]"
                },
                {
                    "ap_tracking_data": {
                        "group": 8,
                        "offset": 0
                    },
                    "pc": 49,
                    "value": "[cast(fp + (-5), felt*)]"
                },
                {
                    "ap_tracking_data": {
                        "group": 9,
                        "offset": 0
                    },
                    "pc": 94,
                    "value": "[cast(fp + (-4), felt*)]"
                },
                {
                    "ap_tracking_data": {
                        "group": 9,
                        "offset": 0
                    },
                    "pc": 94,
                    "value": "[cast(fp + (-3), felt*)]"
                },
                {
                    "ap_tracking_data": {
                        "group": 9,
                        "offset": 0
                    },
                    "pc": 94,
                    "value": "[cast([fp + (-5)], felt*)]"
                },
                {
                    "ap_tracking_data": {
                        "group": 9,
                        "offset": 0
                    },
                    "pc": 94,
                    "value": "[cast([fp + (-5)] + 1, felt*)]"
                },
                {
                    "ap_tracking_data": {
                        "group": 10,
                        "offset": 0
                    },
                    "pc": 109,
                    "value": "[cast(fp + (-7), felt*)]"
                },
                {
                    "ap_tracking_data": {
                        "group": 10,
                        "offset": 0
                    },
                    "pc": 109,
                    "value": "[cast(fp + (-5), felt*)]"
                },
                {
                    "ap_tracking_data": {
                        "group": 10,
                        "offset": 0
                    },
                    "pc": 109,
                    "value": "[cast(fp + (-4), felt*)]"
                },
                {
                    "ap_tracking_data": {
                        "group": 10,
                        "offset": 0
                    },
                    "pc": 109,
                    "value": "[cast(fp + (-3), felt**)]"
                },
                {
                    "ap_tracking_data": {
                        "group": 12,
                        "offset": 0
                    },
                    "pc": 134,
                    "value": "[cast(fp + (-3), felt*)]"
                },
                {
                    "ap_tracking_data": {
                        "group": 14,
                        "offset": 0
                    },
                    "pc": 172,
                    "value": "[cast(fp + (-3), felt*)]"
                },
                {
                    "ap_tracking_data": {
                        "group": 14,
                        "offset": 1
                    },
                    "pc": 177,
                    "value": "[cast(ap, felt*)]"
                }
            ]
        }
    }
}
